{"version":3,"sources":["./src/app/views/anagrafiche/task-queue/dettaglio-task-conto/dettaglio-task-conto.component.html","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-reachability-retail/dettaglio-task-ecc-reachability-retail.component.html","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-transcoding-ingrosso/dettaglio-task-ecc-transcoding-ingrosso.component.html","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-transcoding-retail/dettaglio-task-ecc-transcoding-retail.component.html","./src/app/views/anagrafiche/task-queue/dettaglio-task-party/dettaglio-task-party.component.html","./src/app/views/anagrafiche/task-queue/dettaglio-task-sfruttamento/dettaglio-task-sfruttamento.component.html","./src/app/views/anagrafiche/task-queue/ricerca-task-queue/ricerca-task-queue.component.html","./src/app/views/anagrafiche/task-queue/abstract-dettaglio-task.component.ts","./src/app/views/anagrafiche/task-queue/abstract-task.component.ts","./src/app/views/anagrafiche/task-queue/dettaglio-task-conto/dettaglio-task-conto.component.scss","./src/app/views/anagrafiche/task-queue/dettaglio-task-conto/dettaglio-task-conto.component.ts","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-reachability-retail/dettaglio-task-ecc-reachability-retail.component.scss","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-reachability-retail/dettaglio-task-ecc-reachability-retail.component.ts","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-transcoding-ingrosso/dettaglio-task-ecc-transcoding-ingrosso.component.scss","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-transcoding-ingrosso/dettaglio-task-ecc-transcoding-ingrosso.component.ts","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-transcoding-retail/dettaglio-task-ecc-transcoding-retail.component.scss","./src/app/views/anagrafiche/task-queue/dettaglio-task-ecc-transcoding-retail/dettaglio-task-ecc-transcoding-retail.component.ts","./src/app/views/anagrafiche/task-queue/dettaglio-task-party/dettaglio-task-party.component.scss","./src/app/views/anagrafiche/task-queue/dettaglio-task-party/dettaglio-task-party.component.ts","./src/app/views/anagrafiche/task-queue/dettaglio-task-sfruttamento/dettaglio-task-sfruttamento.component.scss","./src/app/views/anagrafiche/task-queue/dettaglio-task-sfruttamento/dettaglio-task-sfruttamento.component.ts","./src/app/views/anagrafiche/task-queue/ricerca-task-queue/ricerca-task-queue.component.scss","./src/app/views/anagrafiche/task-queue/ricerca-task-queue/ricerca-task-queue.component.ts","./src/app/views/anagrafiche/task-queue/task-queue-routing.module.ts","./src/app/views/anagrafiche/task-queue/task-queue.module.ts"],"names":[],"mappings":"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","file":"task-queue-task-queue-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Task Conto </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\"></div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonConferma\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"conferma()\\\" [disabled]=\\\"readonlyForm\\\">Conferma</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonRifiuta\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"openModal()\\\" [disabled]=\\\"readonlyForm\\\">Rifiuta</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div>\\r\\n                    <span><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #noteModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Conferma Rifiuto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <textarea id=\\\"note\\\" rows=\\\"3\\\" maxlength=\\\"4000\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"note\\\"></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"rifiuta()\\\">Rifiuta</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Task Eccezione Raggiungibilità Dettaglio </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\"></div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonConferma\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"conferma()\\\" [disabled]=\\\"readonlyForm\\\">Conferma</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonRifiuta\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"openModal()\\\" [disabled]=\\\"readonlyForm\\\">Rifiuta</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div>\\r\\n                    <span><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #noteModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Conferma Rifiuto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <textarea id=\\\"note\\\" rows=\\\"3\\\" maxlength=\\\"4000\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"note\\\"></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"rifiuta()\\\">Rifiuta</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Task Eccezione Transcodifica Ingrosso </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\"></div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonConferma\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"conferma()\\\" [disabled]=\\\"readonlyForm\\\">Conferma</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonRifiuta\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"openModal()\\\" [disabled]=\\\"readonlyForm\\\">Rifiuta</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div>\\r\\n                    <span><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #noteModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Conferma Rifiuto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <textarea id=\\\"note\\\" rows=\\\"3\\\" maxlength=\\\"4000\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"note\\\"></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"rifiuta()\\\">Rifiuta</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Task Eccezione Transcodifica Dettaglio </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\"></div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonConferma\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"conferma()\\\" [disabled]=\\\"readonlyForm\\\">Conferma</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonRifiuta\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"openModal()\\\" [disabled]=\\\"readonlyForm\\\">Rifiuta</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div>\\r\\n                    <span><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #noteModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Conferma Rifiuto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <textarea id=\\\"note\\\" rows=\\\"3\\\" maxlength=\\\"4000\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"note\\\"></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"rifiuta()\\\">Rifiuta</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Task Party </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\"></div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonConferma\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"conferma()\\\" [disabled]=\\\"readonlyForm\\\">Conferma</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonRifiuta\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"openModal()\\\" [disabled]=\\\"readonlyForm\\\">Rifiuta</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div>\\r\\n                    <span><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #noteModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Conferma Rifiuto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <textarea id=\\\"note\\\" rows=\\\"3\\\" maxlength=\\\"4000\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"note\\\"></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"rifiuta()\\\">Rifiuta</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Task Sfruttamento ANSY DCA </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\"></div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonConferma\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"conferma()\\\" [disabled]=\\\"readonlyForm\\\">Conferma</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 float-right ml-auto\\\" *ngIf=\\\"showButtonRifiuta\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"openModal()\\\" [disabled]=\\\"readonlyForm\\\">Rifiuta</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div>\\r\\n                    <span><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #noteModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Conferma Rifiuto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <textarea id=\\\"note\\\" rows=\\\"3\\\" maxlength=\\\"4000\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"note\\\"></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"rifiuta()\\\">Rifiuta</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-wrench\\\"></i> Task Queue </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"ricercaForm\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"tipoAnagrafica\\\" class=\\\"col-2 col-form-label\\\">Tipo Anagrafica:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"tipoAnagrafica\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipoAnagrafica.invalid && (tipoAnagrafica.dirty || tipoAnagrafica.touched)\\\" formControlName=\\\"tipoAnagrafica\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of tipiAnagrafica\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"operazione\\\" class=\\\"col-2 col-form-label\\\">Operazione:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"operazione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"operazione.invalid && (operazione.dirty || operazione.touched)\\\" formControlName=\\\"operazione\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of tipiOperazione\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"recordId\\\" class=\\\"col-2 col-form-label\\\">Record Id:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"recordId\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"recordId.invalid && (recordId.dirty || recordId.touched)\\\" formControlName=\\\"recordId\\\"/>\\r\\n                                <div *ngIf=\\\"recordId.errors?.pattern && (recordId.dirty || recordId.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"stato\\\" class=\\\"col-2 col-form-label\\\">Stato:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"stato\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"stato.invalid && (stato.dirty || stato.touched)\\\" formControlName=\\\"stato\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of stati\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--Data Richiesta-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Richiesta:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataRichiestaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataRichiestaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataRichiestaDa.invalid && (dataRichiestaDa.dirty || dataRichiestaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataRichiestaDa\\\"  bdiDatepicker #datepickerDAda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDAda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataRichiestaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataRichiestaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataRichiestaDa.errors?.dateformat && (dataRichiestaDa.dirty || dataRichiestaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataRichiestaDa.errors?.daterange && (dataRichiestaDa.dirty || dataRichiestaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataRichiestaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataRichiestaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataRichiestaA.invalid && (dataRichiestaA.dirty || dataRichiestaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataRichiestaA\\\"  bdiDatepicker #datepickerDAa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDAa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataRichiestaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataRichiestaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataRichiestaA.errors?.dateformat && (dataRichiestaA.dirty || dataRichiestaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataRichiestaA.errors?.daterange && (dataRichiestaA.dirty || dataRichiestaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--Data Validazione-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Validazione:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataValidazioneDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataValidazioneDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataValidazioneDa.invalid && (dataValidazioneDa.dirty || dataValidazioneDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataValidazioneDa\\\"  bdiDatepicker #datepickerDCda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDCda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataValidazioneDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataValidazioneDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataValidazioneDa.errors?.dateformat && (dataValidazioneDa.dirty || dataValidazioneDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataValidazioneDa.errors?.daterange && (dataValidazioneDa.dirty || dataValidazioneDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataValidazioneA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataValidazioneA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataValidazioneA.invalid && (dataValidazioneA.dirty || dataValidazioneA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataValidazioneA\\\"  bdiDatepicker #datepickerDCa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDCa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataValidazioneA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataValidazioneA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataValidazioneA.errors?.dateformat && (dataValidazioneA.dirty || dataValidazioneA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataValidazioneA.errors?.daterange && (dataValidazioneA.dirty || dataValidazioneA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"utenteRichiesta\\\" class=\\\"col-2 col-form-label\\\">Utente Richiesta:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteRichiesta\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteRichiesta.invalid && (utenteRichiesta.dirty || utenteRichiesta.touched)\\\" formControlName=\\\"utenteRichiesta\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteRichiesta.errors?.wildcard && (utenteRichiesta.dirty || utenteRichiesta.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteRichiesta.errors?.pattern && (utenteRichiesta.dirty || utenteRichiesta.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"utenteValidazione\\\" class=\\\"col-2 col-form-label\\\">Utente Validatore:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteValidazione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteValidazione.invalid && (utenteValidazione.dirty || utenteValidazione.touched)\\\" formControlName=\\\"utenteValidazione\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteValidazione.errors?.wildcard && (utenteValidazione.dirty || utenteValidazione.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteValidazione.errors?.pattern && (utenteValidazione.dirty || utenteValidazione.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-2 mx-auto\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"submit(target, true)\\\">Cerca</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div #target>\\r\\n                    <app-generic-table *ngIf=\\\"showTable\\\" [model]=\\\"taskModel\\\" (action)=\\\"onActionEvent($event)\\\"(colToDisplay)=\\\"onColToDisplayEvent($event, this.taskService.searchModel)\\\" (paginationChanged)=\\\"onPaginationEvent($event, this.taskService.searchModel)\\\" (sortChanged)=\\\"onSortEvent($event, this.taskService.searchModel)\\\" (filterChanged)=\\\"onFilterEvent($event, this.taskService.searchModel)\\\"></app-generic-table>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #wildcardTooltip>\\r\\n        <div class=\\\"input-group-append\\\" bdiTooltip=\\\"{{util.getWildcardTooltip()}}\\\" placement=\\\"right\\\" >\\r\\n            <span class=\\\"input-group-text\\\" >\\r\\n                <i class=\\\"fas fa-info-circle\\\"></i>\\r\\n            </span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\"","import {OnInit } from '@angular/core';\r\nimport {of} from 'rxjs';\r\nimport {SecurityService, UserService} from '../../../services';\r\nimport {FormatterUtils} from '../../../utilities/formatterUtils';\r\nimport {StatoTaskEnum, } from '../../../models/enum';\r\nimport {Task, } from '../../../models/task';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {RoutingService} from '../../../services/routing.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AbstractTaskComponent} from './abstract-task.component';\r\nimport {InfoPanelElement, InfoPanelModel, Style, Tooltip} from '../../../models/info-panel-model';\r\nimport {get} from 'lodash';\r\nimport {catchError, switchMap, tap} from 'rxjs/operators';\r\n\r\nexport abstract class AbstractDettaglioTaskComponent extends  AbstractTaskComponent implements OnInit {\r\n\r\n    infoPanelModel: InfoPanelModel;\r\n\r\n    constructor(\r\n        protected securityService: SecurityService,\r\n        protected userService: UserService,\r\n        protected modalService: ModalService,\r\n        protected formatterUtils: FormatterUtils,\r\n        protected routingService: RoutingService,\r\n        protected route: ActivatedRoute\r\n    ) {\r\n        super(securityService, userService, formatterUtils, modalService, routingService, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.checkUserSpi();\r\n    }\r\n\r\n    abstract loadSections( idTask);\r\n    abstract getConferma( task: Task);\r\n    abstract getRifiuta (task: Task);\r\n    abstract getId(): number;\r\n\r\n    buildInfoPanelElement(label: string, type: string, entity: any, field: string, fieldOrig?: string): InfoPanelElement {\r\n        let value = null;\r\n        let valueOrig = null;\r\n\r\n\r\n        if ( type == 'string') {\r\n            value = get(entity, field);\r\n            valueOrig = get(entity, (!!fieldOrig ? fieldOrig : field.concat('Orig')));\r\n        }\r\n\r\n        if ( type == 'date') {\r\n            value = this.formatterUtils.formatDate(entity, field);\r\n            valueOrig = this.formatterUtils.formatDate(entity, (!!fieldOrig ? fieldOrig : field.concat('Orig')));\r\n        }\r\n\r\n        if ( type == 'boolean') {\r\n            value = this.formatterUtils.getBooleanAsString(entity, field);\r\n            valueOrig = this.formatterUtils.getBooleanAsString(entity, field.concat('Orig'));\r\n        }\r\n\r\n        return this.buildModel(label, value, valueOrig, entity );\r\n    }\r\n\r\n\r\n    protected buildModel (label: any, value: any, valueOrig: any, entity: any ): InfoPanelElement {\r\n        let tooltip = null;\r\n        let style = null;\r\n        value = this.manageEmpty(value);\r\n        valueOrig = this.manageEmpty(valueOrig);\r\n\r\n        if ( !this.isInsert(entity.operazione) && !!this.isDaApprovare(entity.stato)) {\r\n\r\n            if (value !== valueOrig) {\r\n                tooltip = <Tooltip>{\r\n                    value: valueOrig,\r\n                    placement: 'right'\r\n                };\r\n                style = <Style>{\r\n                    color: 'red',\r\n                    fontweight: 'bold'\r\n                };\r\n            }\r\n        }\r\n        return <InfoPanelElement> { label: label, value: value, tooltip: tooltip, style: style};\r\n    }\r\n\r\n    conferma() {\r\n        this.resetError();\r\n        this.isResultOk = false;\r\n        this.readonlyForm = false;\r\n        this.showSpinner();\r\n\r\n        const task = this.buildTask(this.getId(), StatoTaskEnum.APPROVED);\r\n        this.getConferma(task).pipe(\r\n            tap( res => this.loadSections(this.getId())),\r\n            tap ( res => {\r\n                this.isResultOk = true;\r\n                this.readonlyForm = true;\r\n                this.hideSpinner();\r\n            }),\r\n\r\n            catchError((error) => {\r\n                console.log ('Error - conferma', error);\r\n                this.setError(error);\r\n                this.hideSpinner();\r\n                return of(null);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    rifiuta() {\r\n        this.resetError();\r\n        this.isResultOk = false;\r\n        this.readonlyForm = false;\r\n        this.showSpinner();\r\n\r\n        const task = this.buildTask(this.getId(), StatoTaskEnum.REJECTED, this.note);\r\n        this.getRifiuta(task).pipe(\r\n            tap( res => this.loadSections(this.getId())),\r\n            tap ( res => {\r\n                this.isResultOk = true;\r\n                this.closeModal();\r\n                this.readonlyForm = true;\r\n                this.hideSpinner();\r\n            }),\r\n\r\n            catchError((error) => {\r\n                console.log ('Error - rifiuta', error);\r\n                this.setError(error);\r\n                this.closeModal();\r\n                this.hideSpinner();\r\n                return of(null);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    private buildTask(id: number, stato: string, note?: string): Task {\r\n        return <Task> {\r\n            id: id,\r\n            stato: {\r\n                codice: stato\r\n            },\r\n            noteRifiuto: (!!note ? note : null)\r\n        };\r\n    }\r\n}\r\n","import {OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {of} from 'rxjs';\r\nimport {SecurityService, UserService} from '../../../services';\r\nimport {FormatterUtils} from '../../../utilities/formatterUtils';\r\nimport {EUserRole} from '../../../models';\r\nimport {SpinnerEventEnum, StatoTaskEnum, TipoOperazioneEnum} from '../../../models/enum';\r\nimport {OperazioneTask, StatoTask} from '../../../models/task';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {RoutingService} from '../../../services/routing.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {AbstractAnagraficheComponent} from '../abstract-anagrafiche.component';\r\n\r\nexport abstract class AbstractTaskComponent extends  AbstractAnagraficheComponent implements OnInit {\r\n\r\n    showButtonConferma: boolean = false;\r\n    showButtonRifiuta: boolean = false;\r\n\r\n    @ViewChild('noteModal', { static: false })\r\n    noteModal: TemplateRef<any>;\r\n    private noteModalReference: any;\r\n\r\n    note: string;\r\n\r\n    constructor( protected securityService: SecurityService,\r\n                 protected userService: UserService,\r\n                 protected formatterUtils: FormatterUtils,\r\n                 protected modalService: ModalService,\r\n                 protected routingService: RoutingService,\r\n                 protected route: ActivatedRoute) {\r\n        super(securityService, userService, formatterUtils, routingService, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n    }\r\n\r\n    protected isInsert(operazione: OperazioneTask): boolean {\r\n        return operazione.codice === TipoOperazioneEnum.INS;\r\n    }\r\n\r\n    protected manageButton(stato: StatoTask , utenteRichiesta: string, roles: EUserRole[]) {\r\n        this.showButtonConferma = false;\r\n        this.showButtonRifiuta = false;\r\n        const hasRole = this.securityService.checkPermissions(roles);\r\n        if (!!hasRole && !!this.isDaApprovare(stato)) {\r\n            this.showButtonRifiuta = true;\r\n            this.showButtonConferma = !this.checkCurrentUserIsUserReq(utenteRichiesta);\r\n        }\r\n    }\r\n\r\n    protected isDaApprovare(stato: StatoTask): boolean {\r\n        return stato.codice === StatoTaskEnum.CREATED;\r\n    }\r\n\r\n    protected checkCurrentUserIsUserReq (utenteRichiesta: string): boolean {\r\n        return this.userService.getUsername() == utenteRichiesta;\r\n    }\r\n\r\n    protected openModal() {\r\n        this.noteModalReference = this.modalService.open(this.noteModal);\r\n    }\r\n\r\n    protected closeModal() {\r\n        this.noteModalReference.close();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS90YXNrLXF1ZXVlL2RldHRhZ2xpby10YXNrLWNvbnRvL2RldHRhZ2xpby10YXNrLWNvbnRvLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractDettaglioTaskComponent} from '../abstract-dettaglio-task.component';\r\nimport {Task, TaskConto, TaskParty} from '../../../../models/task';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {RSQLUtils} from '../../../../utilities/rsqlUtil';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {InfoPanelModel} from '../../../../models/info-panel-model';\r\nimport {Conto} from '../../../../models/conto';\r\nimport {TipoContoEnum} from '../../../../models/enum';\r\nimport {EUserRole} from \"../../../../models\";\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-task-conto',\r\n  templateUrl: './dettaglio-task-conto.component.html',\r\n  styleUrls: ['./dettaglio-task-conto.component.scss']\r\n})\r\nexport class DettaglioTaskContoComponent extends  AbstractDettaglioTaskComponent implements OnInit {\r\n\r\n  taskConto: TaskConto;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected taskService: TaskService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected modalService: ModalService,\r\n      protected filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected formBuilder: FormBuilder,\r\n      protected rSQLUtils: RSQLUtils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(securityService, userService, modalService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailContoSessionObj = this.getSession(this.routingService.TASK_CONTO_DETAIL);\r\n      if (!!detailContoSessionObj) {\r\n        this.loadSections(detailContoSessionObj.idTask);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(detailContoSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSections (idTask: string) {\r\n    this.showSpinner();\r\n\r\n    this.taskService.getTaskConto(idTask).pipe (\r\n        tap( res => {\r\n          this.taskConto = <TaskConto> res;\r\n          this.buildTaskContoSection();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildTaskContoSection() {\r\n    const data = [\r\n      [{ label: 'Tipo Intervento', value: this.taskConto.operazione.descrizione}, {}],\r\n      [this.buildInfoPanelElement('Bic', 'string', this.taskConto, 'bic'), this.buildInfoPanelElement('Target Service', 'string', this.taskConto, 'targetService')],\r\n      [this.buildInfoPanelElement('Account Id', 'string', this.taskConto, 'numeroConto'), this.buildInfoPanelElement('ABI', 'string', this.taskConto, 'abi')],\r\n      [this.buildInfoPanelElement('Tipo Conto', 'string', this.taskConto, 'tipoConto.descrizione', 'tipoContoOrig.descrizione'), this.buildInfoPanelElement('Descrizione', 'string', this.taskConto, 'descrizione')],\r\n      [this.buildInfoPanelElement('Default MCA', 'boolean', this.taskConto, 'mcaDefFlag'), this.buildInfoPanelElement('Presso BDI', 'boolean', this.taskConto, 'pressoBdi')],\r\n      [this.buildInfoPanelElement('Flag Inserimento Manuale', 'boolean', this.taskConto, 'flgMan'), this.buildInfoPanelElement('Indicatore di Residenza', 'string', this.taskConto, 'indicatoreResidenza')],\r\n    ];\r\n\r\n    if (!!this.checkTaskContoIsSubAccount(this.taskConto)) {\r\n      const tipiSfruttamento = this.buildTipiSfruttamento();\r\n      const tipoSfruttamentoItem =  tipiSfruttamento.find( e => e.codice == this.taskConto.subTipoSfruttAnsy);\r\n      const tipoSfruttamento = (!!tipoSfruttamentoItem ? tipoSfruttamentoItem.descrizione : null );\r\n      const tipoSfruttamentoOrigItem =  tipiSfruttamento.find( e => e.codice == this.taskConto.subTipoSfruttAnsyOrig);\r\n      const tipoSfruttamentoOrig =  (!!tipoSfruttamentoOrigItem ? tipoSfruttamentoOrigItem.descrizione : null );\r\n\r\n      data.push( [this.buildInfoPanelElement('Categoria Economica', 'string', this.taskConto, 'categoriaEconomica'), this.buildInfoPanelElement('Bic Conto DCA/CB', 'string', this.taskConto, 'subParBicDca')],\r\n          [this.buildInfoPanelElement('Bic Party ANSY', 'string', this.taskConto, 'subBicPtyAnsy'), this.buildModel('Tipo Sfruttamento', tipoSfruttamento, tipoSfruttamentoOrig, this.taskConto)]\r\n      );\r\n    } else {\r\n      data.push([this.buildInfoPanelElement('Categoria Economica', 'string', this.taskConto, 'categoriaEconomica'), {}]);\r\n    }\r\n\r\n    data.push(\r\n        [this.buildInfoPanelElement('Data Apertura', 'date', this.taskConto, 'dataApertura'), this.buildInfoPanelElement('Data Chiusura', 'date', this.taskConto, 'dataChiusura')],\r\n        [this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.taskConto, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.taskConto, 'validTo')],\r\n        [this.buildModel('Utente Richiesta', this.taskConto.userReq, this.taskConto.utenteRichiestaOrig, this.taskConto), this.buildModel('Utente Approvatore', this.taskConto.userValidate, this.taskConto.utenteValidazioneOrig, this.taskConto)]\r\n    );\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n    this.manageButton(this.taskConto.stato, this.taskConto.userReq, [EUserRole.ANAGRAFICHE_SPI]);\r\n  }\r\n\r\n  public checkTaskContoIsSubAccount(taskConto: TaskConto) {\r\n    return taskConto.tipoConto.codice == TipoContoEnum.RTGS_SA;\r\n  }\r\n\r\n  getConferma(task: Task) {\r\n    return this.taskService.confermaTaskConto(task);\r\n  }\r\n\r\n  getRifiuta (task: Task) {\r\n    return this.taskService.rifiutaTaskConto(task);\r\n  }\r\n\r\n  getId(): number {\r\n    return this.taskConto.id;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS90YXNrLXF1ZXVlL2RldHRhZ2xpby10YXNrLWVjYy1yZWFjaGFiaWxpdHktcmV0YWlsL2RldHRhZ2xpby10YXNrLWVjYy1yZWFjaGFiaWxpdHktcmV0YWlsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractDettaglioTaskComponent} from \"../abstract-dettaglio-task.component\";\r\nimport {Task, TaskEccReachabilityRetail} from \"../../../../models/task\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {ModalService} from \"scam-bdi-uikit\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {FormBuilder} from \"@angular/forms\";\r\nimport {RSQLUtils} from \"../../../../utilities/rsqlUtil\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\nimport {InfoPanelModel} from \"../../../../models/info-panel-model\";\r\nimport {EUserRole} from \"../../../../models\";\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-task-ecc-reachability-retail',\r\n  templateUrl: './dettaglio-task-ecc-reachability-retail.component.html',\r\n  styleUrls: ['./dettaglio-task-ecc-reachability-retail.component.scss']\r\n})\r\nexport class DettaglioTaskEccReachabilityRetailComponent extends  AbstractDettaglioTaskComponent implements OnInit {\r\n\r\n  taskEccReachabilityRetail: TaskEccReachabilityRetail;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected taskService: TaskService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected modalService: ModalService,\r\n      protected filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected formBuilder: FormBuilder,\r\n      protected rSQLUtils: RSQLUtils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(securityService, userService, modalService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailEccSessionObj = this.getSession(this.routingService.TASK_ECC_RAGG_RET_DETAIL);\r\n      if (!!detailEccSessionObj) {\r\n        this.loadSections(detailEccSessionObj.idTask);\r\n        this.backUrl = this.routingService.getRouteByKey(detailEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSections (idEcc: string) {\r\n    this.showSpinner();\r\n\r\n    this.taskService.getTaskEccReachabilityRetail(idEcc).pipe (\r\n        tap( res => {\r\n          this.taskEccReachabilityRetail = <TaskEccReachabilityRetail> res;\r\n          this.buildTaskEccReachabilityRetailSection();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildTaskEccReachabilityRetailSection() {\r\n    const data = [\r\n      [{ label: 'Tipo Intervento', value: this.taskEccReachabilityRetail.operazione.descrizione}, {}],\r\n      [this.buildInfoPanelElement('Bic Input', 'string', this.taskEccReachabilityRetail, 'bicInput'), this.buildInfoPanelElement('Canale', 'string', this.taskEccReachabilityRetail, 'canale.descrizione', 'canaleOrig.descrizione')],\r\n      [this.buildInfoPanelElement('Raggiungibile', 'boolean', this.taskEccReachabilityRetail, 'raggiungibile'), this.buildInfoPanelElement('Descrizione', 'string', this.taskEccReachabilityRetail, 'descrizione')],\r\n      [/*this.buildInfoPanelElement('Bic Output', 'string', this.taskEccReachabilityRetail, 'bicOutput'),*/ this.buildInfoPanelElement('Bic Diretto', 'string', this.taskEccReachabilityRetail, 'bicDiretto'), {}],\r\n      [this.buildInfoPanelElement('Data Inizio Validità', 'date', this.taskEccReachabilityRetail, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità', 'date', this.taskEccReachabilityRetail, 'validTo')],\r\n      [this.buildModel('Utente Richiesta', this.taskEccReachabilityRetail.userReq, this.taskEccReachabilityRetail.utenteRichiestaOrig, this.taskEccReachabilityRetail), this.buildModel('Utente Approvatore', this.taskEccReachabilityRetail.userValidate, this.taskEccReachabilityRetail.utenteValidazioneOrig, this.taskEccReachabilityRetail)]\r\n    ];\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n    this.manageButton(this.taskEccReachabilityRetail.stato, this.taskEccReachabilityRetail.userReq, [EUserRole.ANAGRAFICHE_DET]);\r\n  }\r\n\r\n  getConferma(task: Task) {\r\n    return this.taskService.confermaTaskEccReachabilityRetail(task);\r\n  }\r\n\r\n  getRifiuta (task: Task) {\r\n    return this.taskService.rifiutaTaskEccReachabilityRetail(task);\r\n  }\r\n\r\n  getId(): number {\r\n    return this.taskEccReachabilityRetail.id;\r\n  }\r\n\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS90YXNrLXF1ZXVlL2RldHRhZ2xpby10YXNrLWVjYy10cmFuc2NvZGluZy1pbmdyb3Nzby9kZXR0YWdsaW8tdGFzay1lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractDettaglioTaskComponent} from \"../abstract-dettaglio-task.component\";\r\nimport {Task, TaskEccTranscodingIngrosso} from \"../../../../models/task\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {ModalService} from \"scam-bdi-uikit\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {FormBuilder} from \"@angular/forms\";\r\nimport {RSQLUtils} from \"../../../../utilities/rsqlUtil\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\nimport {InfoPanelModel} from \"../../../../models/info-panel-model\";\r\nimport {EUserRole} from \"../../../../models\";\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-task-ecc-transcoding-ingrosso',\r\n  templateUrl: './dettaglio-task-ecc-transcoding-ingrosso.component.html',\r\n  styleUrls: ['./dettaglio-task-ecc-transcoding-ingrosso.component.scss']\r\n})\r\nexport class DettaglioTaskEccTranscodingIngrossoComponent extends  AbstractDettaglioTaskComponent implements OnInit {\r\n\r\n  taskEccTranscodingIngrosso: TaskEccTranscodingIngrosso;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected taskService: TaskService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected modalService: ModalService,\r\n      protected filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected formBuilder: FormBuilder,\r\n      protected rSQLUtils: RSQLUtils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(securityService, userService, modalService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailEccSessionObj = this.getSession(this.routingService.TASK_ECC_TRANS_INGR_DETAIL);\r\n      if (!!detailEccSessionObj) {\r\n        this.loadSections(detailEccSessionObj.idTask);\r\n        this.backUrl = this.routingService.getRouteByKey(detailEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSections (idEcc: string) {\r\n    this.showSpinner();\r\n\r\n    this.taskService.getTaskEccTranscodingIngrosso(idEcc).pipe (\r\n        tap( res => {\r\n          this.taskEccTranscodingIngrosso = <TaskEccTranscodingIngrosso> res;\r\n          this.buildTaskEccTranscodingIngrossoSection();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildTaskEccTranscodingIngrossoSection() {\r\n    const data = [\r\n      [{ label: 'Tipo Intervento', value: this.taskEccTranscodingIngrosso.operazione.descrizione}, {}],\r\n      [this.buildInfoPanelElement('Abi', 'string', this.taskEccTranscodingIngrosso, 'abi'), this.buildInfoPanelElement('Cab', 'string', this.taskEccTranscodingIngrosso, 'cab')],\r\n      [this.buildInfoPanelElement('Tipo Conto', 'string', this.taskEccTranscodingIngrosso, 'tipoConto'), this.buildInfoPanelElement('Bic Conto', 'string', this.taskEccTranscodingIngrosso, 'bicConto')],\r\n      [this.buildInfoPanelElement('Verso', 'string', this.taskEccTranscodingIngrosso, 'verso'), this.buildInfoPanelElement('Descrizione', 'string', this.taskEccTranscodingIngrosso, 'descrizione')],\r\n      [this.buildInfoPanelElement('Data Inizio Validità', 'date', this.taskEccTranscodingIngrosso, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità', 'date', this.taskEccTranscodingIngrosso, 'validTo')],\r\n      [this.buildModel('Utente Richiesta', this.taskEccTranscodingIngrosso.userReq, this.taskEccTranscodingIngrosso.utenteRichiestaOrig, this.taskEccTranscodingIngrosso), this.buildModel('Utente Approvatore', this.taskEccTranscodingIngrosso.userValidate, this.taskEccTranscodingIngrosso.utenteValidazioneOrig, this.taskEccTranscodingIngrosso)]\r\n    ];\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n    this.manageButton(this.taskEccTranscodingIngrosso.stato, this.taskEccTranscodingIngrosso.userReq, [EUserRole.ANAGRAFICHE_SPI]);\r\n  }\r\n\r\n  getConferma(task: Task) {\r\n    return this.taskService.confermaTaskEccTranscodingIngrosso(task);\r\n  }\r\n\r\n  getRifiuta (task: Task) {\r\n    return this.taskService.rifiutaTaskEccTranscodingIngrosso(task);\r\n  }\r\n\r\n  getId(): number {\r\n    return this.taskEccTranscodingIngrosso.id;\r\n  }\r\n\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS90YXNrLXF1ZXVlL2RldHRhZ2xpby10YXNrLWVjYy10cmFuc2NvZGluZy1yZXRhaWwvZGV0dGFnbGlvLXRhc2stZWNjLXRyYW5zY29kaW5nLXJldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {FormBuilder} from \"@angular/forms\";\r\nimport {AbstractDettaglioTaskComponent} from \"../abstract-dettaglio-task.component\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {InfoPanelModel} from \"../../../../models/info-panel-model\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {RSQLUtils} from \"../../../../utilities/rsqlUtil\";\r\nimport {EUserRole} from \"../../../../models\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {of} from \"rxjs\";\r\nimport {ModalService} from \"scam-bdi-uikit\";\r\nimport {Task, TaskEccTranscodingRetail} from \"../../../../models/task\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-task-ecc-transcoding-retail',\r\n  templateUrl: './dettaglio-task-ecc-transcoding-retail.component.html',\r\n  styleUrls: ['./dettaglio-task-ecc-transcoding-retail.component.scss']\r\n})\r\nexport class DettaglioTaskEccTranscodingRetailComponent extends  AbstractDettaglioTaskComponent implements OnInit {\r\n\r\n  taskEccTranscodingRetail: TaskEccTranscodingRetail;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected taskService: TaskService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected modalService: ModalService,\r\n      protected filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected formBuilder: FormBuilder,\r\n      protected rSQLUtils: RSQLUtils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(securityService, userService, modalService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailEccSessionObj = this.getSession(this.routingService.TASK_ECC_TRANS_RET_DETAIL);\r\n      if (!!detailEccSessionObj) {\r\n        this.loadSections(detailEccSessionObj.idTask);\r\n        this.backUrl = this.routingService.getRouteByKey(detailEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSections (idEcc: string) {\r\n    this.showSpinner();\r\n\r\n    this.taskService.getTaskEccTranscodingRetail(idEcc).pipe (\r\n        tap( res => {\r\n          this.taskEccTranscodingRetail = <TaskEccTranscodingRetail> res;\r\n          this.buildTaskEccTranscodingRetailSection();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildTaskEccTranscodingRetailSection() {\r\n    const data = [\r\n      [{ label: 'Tipo Intervento', value: this.taskEccTranscodingRetail.operazione.descrizione}, {}],\r\n      [this.buildInfoPanelElement('Nsc', 'string', this.taskEccTranscodingRetail, 'nsc'), this.buildInfoPanelElement('Country Code', 'string', this.taskEccTranscodingRetail, 'countryCode.descrizione', 'countryCodeOrig.descrizione')],\r\n      [this.buildInfoPanelElement('Bic', 'string', this.taskEccTranscodingRetail, 'bic'), this.buildInfoPanelElement('Descrizione', 'string', this.taskEccTranscodingRetail, 'descrizione')],\r\n      [this.buildInfoPanelElement('Data Inizio Validità', 'date', this.taskEccTranscodingRetail, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità', 'date', this.taskEccTranscodingRetail, 'validTo')],\r\n      [this.buildModel('Utente Richiesta', this.taskEccTranscodingRetail.userReq, this.taskEccTranscodingRetail.utenteRichiestaOrig, this.taskEccTranscodingRetail), this.buildModel('Utente Approvatore', this.taskEccTranscodingRetail.userValidate, this.taskEccTranscodingRetail.utenteValidazioneOrig, this.taskEccTranscodingRetail)]\r\n    ];\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n    this.manageButton(this.taskEccTranscodingRetail.stato, this.taskEccTranscodingRetail.userReq, [EUserRole.ANAGRAFICHE_DET]);\r\n  }\r\n\r\n  getConferma(task: Task) {\r\n    return this.taskService.confermaTaskEccTranscodingRetail(task);\r\n  }\r\n\r\n  getRifiuta (task: Task) {\r\n    return this.taskService.rifiutaTaskEccTranscodingRetail(task);\r\n  }\r\n\r\n  getId(): number {\r\n    return this.taskEccTranscodingRetail.id;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS90YXNrLXF1ZXVlL2RldHRhZ2xpby10YXNrLXBhcnR5L2RldHRhZ2xpby10YXNrLXBhcnR5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {InfoPanelElement, InfoPanelModel, Style, Tooltip} from '../../../../models/info-panel-model';\r\nimport {AbstractTaskComponent} from '../abstract-task.component';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {RSQLUtils} from '../../../../utilities/rsqlUtil';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {TaskParty, Task} from '../../../../models/task';\r\nimport {of} from 'rxjs';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {AbstractDettaglioTaskComponent} from '../abstract-dettaglio-task.component';\r\nimport {EUserRole} from \"../../../../models\";\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-task-party',\r\n  templateUrl: './dettaglio-task-party.component.html',\r\n  styleUrls: ['./dettaglio-task-party.component.scss']\r\n})\r\nexport class DettaglioTaskPartyComponent extends  AbstractDettaglioTaskComponent implements OnInit {\r\n\r\n  taskParty: TaskParty;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected taskService: TaskService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected modalService: ModalService,\r\n      protected filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected formBuilder: FormBuilder,\r\n      protected rSQLUtils: RSQLUtils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(securityService, userService, modalService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailPartySessionObj = this.getSession(this.routingService.TASK_PARTY_DETAIL);\r\n      if (!!detailPartySessionObj) {\r\n        this.loadSections(detailPartySessionObj.idTask);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(detailPartySessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSections (idParty: string) {\r\n    this.showSpinner();\r\n\r\n    this.taskService.getTaskParty(idParty).pipe (\r\n        tap( res => {\r\n          this.taskParty = <TaskParty> res;\r\n          this.buildTaskPartySection();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildTaskPartySection() {\r\n    const data = [\r\n      [{ label: 'Tipo Intervento', value: this.taskParty.operazione.descrizione}, {}],\r\n      [this.buildInfoPanelElement('Party Bic', 'string', this.taskParty, 'bic'), this.buildInfoPanelElement('Tipo Party', 'string', this.taskParty, 'tipoParty.descrizione', 'tipoPartyOrig.descrizione')],\r\n      [this.buildInfoPanelElement('Nome Party', 'string', this.taskParty, 'nome'), this.buildInfoPanelElement('ABI', 'string', this.taskParty, 'defaultAbi')],\r\n      [this.buildInfoPanelElement('Filiale Riferimento', 'string', this.taskParty, 'filialeRiferimento.descrizione', 'filialeRiferimentoOrig.descrizione'), this.buildInfoPanelElement('MFI Code', 'string', this.taskParty, 'mfiCode' )],\r\n      [this.buildInfoPanelElement('Indicatore di Residenza', 'string', this.taskParty, 'indicatoreResidenza'), this.buildInfoPanelElement('Categoria Economica', 'string', this.taskParty, 'categoriaEconomica')],\r\n      [this.buildInfoPanelElement('Data Apertura', 'date', this.taskParty, 'dataApertura'), this.buildInfoPanelElement('Data Chiusura', 'date', this.taskParty, 'dataChiusura')],\r\n      [this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.taskParty, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.taskParty, 'validTo')],\r\n      [this.buildModel('Utente Richiesta', this.taskParty.userReq, this.taskParty.utenteRichiestaOrig, this.taskParty), this.buildModel('Utente Approvatore', this.taskParty.userValidate, this.taskParty.utenteValidazioneOrig, this.taskParty)]\r\n    ];\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n    this.manageButton(this.taskParty.stato, this.taskParty.userReq, [EUserRole.ANAGRAFICHE_SPI]);\r\n  }\r\n\r\n  getConferma(task: Task) {\r\n    return this.taskService.confermaTaskParty(task);\r\n  }\r\n\r\n  getRifiuta (task: Task) {\r\n    return this.taskService.rifiutaTaskParty(task);\r\n  }\r\n\r\n  getId(): number {\r\n    return this.taskParty.id;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS90YXNrLXF1ZXVlL2RldHRhZ2xpby10YXNrLXNmcnV0dGFtZW50by9kZXR0YWdsaW8tdGFzay1zZnJ1dHRhbWVudG8uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractDettaglioTaskComponent} from '../abstract-dettaglio-task.component';\r\nimport {Task, TaskParty, TaskSfruttamentoAnsyDca} from '../../../../models/task';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {RSQLUtils} from '../../../../utilities/rsqlUtil';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {InfoPanelModel} from '../../../../models/info-panel-model';\r\nimport {TipoParty} from '../../../../models/party';\r\nimport {EUserRole} from \"../../../../models\";\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-task-sfruttamento',\r\n  templateUrl: './dettaglio-task-sfruttamento.component.html',\r\n  styleUrls: ['./dettaglio-task-sfruttamento.component.scss']\r\n})\r\nexport class DettaglioTaskSfruttamentoComponent extends  AbstractDettaglioTaskComponent implements OnInit {\r\n\r\n  taskSfruttamentoAnsyDca: TaskSfruttamentoAnsyDca;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected taskService: TaskService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected modalService: ModalService,\r\n      protected filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected formBuilder: FormBuilder,\r\n      protected rSQLUtils: RSQLUtils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(securityService, userService, modalService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailSfruttamentoSessionObj = this.getSession(this.routingService.TASK_SFRUTTAMENTO_DETAIL);\r\n      if (!!detailSfruttamentoSessionObj) {\r\n        this.loadSections(detailSfruttamentoSessionObj.idTask);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(detailSfruttamentoSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSections (idSfruttamento: string) {\r\n    this.showSpinner();\r\n\r\n    this.taskService.getTaskSfruttamentoAnsyDca(idSfruttamento).pipe (\r\n        tap( res => {\r\n          this.taskSfruttamentoAnsyDca = <TaskSfruttamentoAnsyDca> res;\r\n          this.buildTaskSfruttamentoAnsyDcaSection();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildTaskSfruttamentoAnsyDcaSection() {\r\n    const data = [\r\n      [{ label: 'Tipo Intervento', value: this.taskSfruttamentoAnsyDca.operazione.descrizione}, {}],\r\n      [this.buildInfoPanelElement('Party Bic', 'string', this.taskSfruttamentoAnsyDca, 'bicParty'), this.buildInfoPanelElement('Tipo Party', 'string', this.taskSfruttamentoAnsyDca, 'tipoParty.descrizione', 'tipoPartyOrig.descrizione')],\r\n      [this.buildInfoPanelElement('Bic Conto', 'string', this.taskSfruttamentoAnsyDca, 'bicConto'), this.buildInfoPanelElement('Target Service', 'string', this.taskSfruttamentoAnsyDca, 'targetServiceConto')],\r\n      [this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.taskSfruttamentoAnsyDca, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.taskSfruttamentoAnsyDca, 'validTo')],\r\n      [this.buildModel('Utente Richiesta', this.taskSfruttamentoAnsyDca.userReq, this.taskSfruttamentoAnsyDca.utenteRichiestaOrig, this.taskSfruttamentoAnsyDca), this.buildModel('Utente Approvatore', this.taskSfruttamentoAnsyDca.userValidate, this.taskSfruttamentoAnsyDca.utenteValidazioneOrig, this.taskSfruttamentoAnsyDca)]\r\n    ];\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n    this.manageButton(this.taskSfruttamentoAnsyDca.stato, this.taskSfruttamentoAnsyDca.userReq, [EUserRole.ANAGRAFICHE_SPI]);\r\n  }\r\n\r\n  getConferma(task: Task) {\r\n    return this.taskService.confermaTaskSfruttamentoAnsyDca(task);\r\n  }\r\n\r\n  getRifiuta (task: Task) {\r\n    return this.taskService.rifiutaTaskSfruttamentoAnsyDca(task);\r\n  }\r\n\r\n  getId(): number {\r\n    return this.taskSfruttamentoAnsyDca.id;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS90YXNrLXF1ZXVlL3JpY2VyY2EtdGFzay1xdWV1ZS9yaWNlcmNhLXRhc2stcXVldWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {GenericTableModel} from '../../../../models/generic-table-model';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {RSQLUtils} from '../../../../utilities/rsqlUtil';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {AbstractTaskComponent} from '../abstract-task.component';\r\nimport {ActionRenderModel, ButtonModel} from '../../../../models/action-render-model';\r\nimport {GenericActionRenderComponent} from '../../generic-action-render/generic-action-render.component';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {OperazioneTask, StatoTask, TipoTask} from '../../../../models/task';\r\nimport {StatoTaskEnum, TipoTaskEnum, TipoOperazioneEnum} from '../../../../models/enum';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {Utils} from '../../../../utilities/util';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {get} from 'lodash';\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\n\r\n@Component({\r\n  selector: 'app-ricerca-task-queue',\r\n  templateUrl: './ricerca-task-queue.component.html',\r\n  styleUrls: ['./ricerca-task-queue.component.scss']\r\n})\r\nexport class RicercaTaskQueueComponent extends  AbstractTaskComponent implements OnInit {\r\n\r\n  taskModel: GenericTableModel;\r\n  showTable = false;\r\n  ricercaForm: FormGroup;\r\n\r\n  tipiAnagrafica: TipoTask [];\r\n  tipiOperazione: OperazioneTask [];\r\n  stati: StatoTask [];\r\n  util: Utils ;\r\n\r\n  constructor(\r\n      router: Router,\r\n      private taskService: TaskService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected modalService: ModalService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private rSQLUtils: RSQLUtils,\r\n      private utils: Utils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(securityService, userService, formatterUtils, modalService, routingService, route);\r\n    this.util = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.buildCombo();\r\n    this.buildForm();\r\n    this.buildModel();\r\n    this.manageNavigation();\r\n  }\r\n\r\n  private manageNavigation() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (!!params && !!get(params, this.BACK) && !!this.taskService.searchModel ) {\r\n        this.ricercaForm.setValue(this.taskService.searchModel.form);\r\n        this.submit(null, false);\r\n      } else {\r\n        this.taskService.searchModel = this.initSearchModel();\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildCombo() {\r\n    this.taskService.getTipoTask().pipe(\r\n        tap( res => this.tipiAnagrafica = res)\r\n    ).subscribe();\r\n\r\n    this.taskService.getOperazione().pipe(\r\n        tap( res => this.tipiOperazione = res)\r\n    ).subscribe();\r\n\r\n    this.taskService.getStatoTask().pipe(\r\n        tap( res => this.stati = res)\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildForm() {\r\n    this.ricercaForm = this.formBuilder.group({\r\n      tipoAnagrafica:  new FormControl(null,   []),\r\n      operazione: new FormControl(null,   []),\r\n      recordId: new FormControl(null,   []),\r\n      utenteRichiesta: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      stato: new FormControl(null,   []),\r\n      utenteValidazione: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      dataRichiestaDa: new FormControl(null,   []),\r\n      dataRichiestaA: new FormControl(null,   []),\r\n      dataValidazioneDa: new FormControl(null,   []),\r\n      dataValidazioneA: new FormControl(null,   [])\r\n    }, { validator: dateValidator( [\r\n        {field1: 'dataRichiestaDa', field2: 'dataRichiestaA'},\r\n        {field1: 'dataValidazioneDa', field2: 'dataValidazioneA'}\r\n      ]) });\r\n\r\n    this.ricercaForm.get('stato').setValue(StatoTaskEnum.CREATED);\r\n  }\r\n\r\n  get tipoAnagrafica() { return this.ricercaForm.get('tipoAnagrafica'); }\r\n  get operazione() { return this.ricercaForm.get('operazione'); }\r\n  get recordId() { return this.ricercaForm.get('recordId'); }\r\n  get utenteRichiesta() { return this.ricercaForm.get('utenteRichiesta'); }\r\n  get stato() { return this.ricercaForm.get('stato'); }\r\n  get utenteValidazione() { return this.ricercaForm.get('utenteValidazione'); }\r\n  get dataRichiestaDa() { return this.ricercaForm.get('dataRichiestaDa'); }\r\n  get dataRichiestaA() { return this.ricercaForm.get('dataRichiestaA'); }\r\n  get dataValidazioneDa() { return this.ricercaForm.get('dataValidazioneDa'); }\r\n  get dataValidazioneA() { return this.ricercaForm.get('dataValidazioneA'); }\r\n\r\n  reset( field) {\r\n    this.ricercaForm.get(field).setValue(null);\r\n  }\r\n\r\n  buildModel() {\r\n    this.taskModel = {\r\n      domLayout: 'autoHeight',\r\n      gridOptions: {\r\n        rowHeight: 30,\r\n        paginationPageSize: 10,\r\n        defaultColDef: {\r\n          sortable: true\r\n        },\r\n        context: {\r\n          componentParent: this\r\n        },\r\n        onGridReady: () => this.initializeGrid()\r\n      },\r\n      rowData: [],\r\n      pagination: true,\r\n      columnsFitAvailable: true,\r\n      columnDefs: this.buildColumnDef(),\r\n      enableCsvExport: true,\r\n      enablePdfExport: true,\r\n      enableColumnSelection: true\r\n    };\r\n  }\r\n\r\n  private initializeGrid(): void {\r\n    this.taskModel.gridOptions.api.sizeColumnsToFit();\r\n    this.taskModel.gridOptions.onGridSizeChanged = evt =>  this.taskModel.gridOptions.api ?  this.taskModel.gridOptions.api.sizeColumnsToFit() : null;\r\n  }\r\n\r\n  private buildColumnDef() {\r\n    let order = 0;\r\n    return  [\r\n      {colId: ('id_' + order++), headerName: 'TIPO ANAGRAFICA',        field: 'tipoTask.descrizione',   filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'RECORD ID',              field: 'recordId',               filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'OPERAZIONE',             field: 'operazione.descrizione', filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'UTENTE RICHIESTA',       field: 'userReq',                filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'STATO',                  field: 'stato.descrizione',      filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'UTENTE VALIDATORE',      field: 'userValidate',           filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'DATA RICHIESTA',         field: 'tsInserimento',          filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDateTime(data.data, 'tsInserimento'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'DATA VALIDAZIONE',       field: 'tsValidate',             filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDateTime(data.data, 'tsValidate'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'AZIONI',                 field: '',                       resizable: true, cellRendererFramework: GenericActionRenderComponent, cellRendererParams: {modelFn: this.buildActionRenderModel.bind(this)}, sortable: false, exportOptions: {skipColumn: true}, pinned: 'right', minWidth: 150}\r\n    ];\r\n  }\r\n\r\n  buildActionRenderModel(data): ActionRenderModel {\r\n\r\n    let detailButton = null;\r\n\r\n    if(this.userIsSpi || this.userIsBil || this.userIsVis) {\r\n      if (data.tipoTask.codice == TipoTaskEnum.PARTY) {\r\n        detailButton = <ButtonModel>{\r\n          label: 'Visualizza dettaglio Party',\r\n          routerLink: this.routingService.getRouteByKey(this.routingService.TASK_PARTY_DETAIL),\r\n          params: {idTask: data.id, backUrl: this.routingService.TASK_SEARCH},\r\n          enabled: true,\r\n          sessionKey: this.routingService.TASK_PARTY_DETAIL\r\n        };\r\n      }\r\n\r\n      if (data.tipoTask.codice == TipoTaskEnum.CONTO) {\r\n        detailButton = <ButtonModel>{\r\n          label: 'Visualizza dettaglio Conto',\r\n          routerLink: this.routingService.getRouteByKey(this.routingService.TASK_CONTO_DETAIL),\r\n          params: {idTask: data.id, backUrl: this.routingService.TASK_SEARCH},\r\n          enabled: true,\r\n          sessionKey: this.routingService.TASK_CONTO_DETAIL\r\n        };\r\n      }\r\n\r\n      if (data.tipoTask.codice == TipoTaskEnum.SFRUTTAMENTO) {\r\n        detailButton = <ButtonModel>{\r\n          label: 'Visualizza dettaglio Sfruttamento',\r\n          routerLink: this.routingService.getRouteByKey(this.routingService.TASK_SFRUTTAMENTO_DETAIL),\r\n          params: {idTask: data.id, backUrl: this.routingService.TASK_SEARCH},\r\n          enabled: true,\r\n          sessionKey: this.routingService.TASK_SFRUTTAMENTO_DETAIL\r\n        };\r\n      }\r\n\r\n      if (data.tipoTask.codice == TipoTaskEnum.ECC_TRANSCODIFICA_INGROSSO) {\r\n        detailButton = <ButtonModel>{\r\n          label: 'Visualizza dettaglio Eccezione',\r\n          routerLink: this.routingService.getRouteByKey(this.routingService.TASK_ECC_TRANS_INGR_DETAIL),\r\n          params: {idTask: data.id, backUrl: this.routingService.TASK_SEARCH},\r\n          enabled: true,\r\n          sessionKey: this.routingService.TASK_ECC_TRANS_INGR_DETAIL\r\n        };\r\n      }\r\n    }\r\n\r\n    if (this.userIsDet || this.userIsVis) {\r\n      if (data.tipoTask.codice == TipoTaskEnum.ECC_TRANSCODIFICA_DETTAGLIO) {\r\n        detailButton = <ButtonModel> {\r\n          label: 'Visualizza dettaglio Eccezione',\r\n          routerLink: this.routingService.getRouteByKey(this.routingService.TASK_ECC_TRANS_RET_DETAIL),\r\n          params: {idTask: data.id, backUrl: this.routingService.TASK_SEARCH},\r\n          enabled: true,\r\n          sessionKey: this.routingService.TASK_ECC_TRANS_RET_DETAIL\r\n        };\r\n      }\r\n\r\n      if (data.tipoTask.codice == TipoTaskEnum.ECC_RAGGIUNGIBILITA_DETTAGLIO) {\r\n        detailButton = <ButtonModel> {\r\n          label: 'Visualizza dettaglio Eccezione',\r\n          routerLink: this.routingService.getRouteByKey(this.routingService.TASK_ECC_RAGG_RET_DETAIL),\r\n          params: {idTask: data.id, backUrl: this.routingService.TASK_SEARCH},\r\n          enabled: true,\r\n          sessionKey: this.routingService.TASK_ECC_RAGG_RET_DETAIL\r\n        };\r\n      }\r\n    }\r\n\r\n    const modifyButton =  null;\r\n    const deleteButton =  null;\r\n    return <ActionRenderModel> {\r\n      detailButton: detailButton,\r\n      modifyButton: modifyButton,\r\n      deleteButton: deleteButton\r\n    };\r\n  }\r\n\r\n  submit(targetEl: HTMLElement, resetPage: boolean) {\r\n\r\n    this.showTable = false;\r\n    this.resetError();\r\n    this.taskModel.rowData = [];\r\n    this.taskModel.enableMessageOnSizeResultLimit = false;\r\n\r\n    this.manageSearchModel( this.taskModel, this.taskService.searchModel, resetPage);\r\n\r\n    if (!!this.ricercaForm.valid) {\r\n      this.showSpinner();\r\n\r\n      if (!this.taskService.searchModel) {\r\n        this.taskService.searchModel = this.initSearchModel();\r\n      }\r\n      this.taskService.searchModel.form = this.ricercaForm.value;\r\n      const searchString = this.buildRsqlSearchString()\r\n\r\n      this.taskService.getTasks(searchString).pipe(\r\n\r\n          tap( res => {\r\n            this.taskModel.enableMessageEmptyResult = true;\r\n            if (!!res && res.content.length > 0 ) {\r\n              this.taskModel.enableMessageEmptyResult = false;\r\n              this.taskModel.rowData = res.content;\r\n              this.taskModel.enableMessageOnSizeResultLimit = false;\r\n              this.taskModel.searchRecordLenght = res.content.length;\r\n              if ( res.totalElements > res.content.length) {\r\n                this.taskModel.enableMessageOnSizeResultLimit = true;\r\n                this.taskModel.searchRecordLenght = res.totalElements;\r\n              }\r\n            }\r\n          }),\r\n\r\n          tap ( res => {\r\n            this.showTable = true;\r\n            if (!!targetEl) {\r\n              this.scrollToResult(targetEl);\r\n            }\r\n            this.hideSpinner();\r\n          }),\r\n\r\n          catchError((error) => {\r\n            console.log ('Error - submit', error);\r\n            this.showTable = false;\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private scrollToResult(targetEl: HTMLElement) {\r\n    setTimeout(function() {\r\n      console.log('Scrolling to table');\r\n      targetEl.scrollIntoView({behavior: 'smooth'});\r\n    }, 500);\r\n  }\r\n\r\n  private buildRsqlSearchString() {\r\n\r\n    const rSQLArray: string [] = [];\r\n\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.tipoAnagrafica.value, 'tipoTask'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.operazione.value, 'operazione'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.stato.value, 'stato'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteRichiesta.value, 'userReq'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteValidazione.value, 'userValidate'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.recordId.value, 'recordId'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToStringWithTime(this.dataRichiestaDa.value), this.formatterUtils.dateToStringWithTime(this.dataRichiestaA.value, true), 'tsInserimento'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToStringWithTime(this.dataValidazioneDa.value), this.formatterUtils.dateToStringWithTime(this.dataValidazioneA.value, true), 'tsValidate'));\r\n\r\n    const searchString = this.rSQLUtils.getSearchString(rSQLArray);\r\n    console.log('RSQL searchString:' + searchString);\r\n    return searchString;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {EUserRole} from '../../../models';\r\nimport {SecurityService} from '../../../services';\r\nimport {RicercaTaskQueueComponent} from './ricerca-task-queue/ricerca-task-queue.component';\r\nimport {DettaglioTaskPartyComponent} from './dettaglio-task-party/dettaglio-task-party.component';\r\nimport {DettaglioTaskContoComponent} from './dettaglio-task-conto/dettaglio-task-conto.component';\r\nimport {DettaglioTaskSfruttamentoComponent} from './dettaglio-task-sfruttamento/dettaglio-task-sfruttamento.component';\r\nimport {DettaglioTaskEccTranscodingIngrossoComponent} from \"./dettaglio-task-ecc-transcoding-ingrosso/dettaglio-task-ecc-transcoding-ingrosso.component\";\r\nimport {DettaglioTaskEccTranscodingRetailComponent} from \"./dettaglio-task-ecc-transcoding-retail/dettaglio-task-ecc-transcoding-retail.component\";\r\nimport {DettaglioTaskEccReachabilityRetailComponent} from \"./dettaglio-task-ecc-reachability-retail/dettaglio-task-ecc-reachability-retail.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Anagrafiche Task Queue',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: RicercaTaskQueueComponent,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL, EUserRole.ANAGRAFICHE_VISUALIZZATORE, EUserRole.ANAGRAFICHE_DET]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio-party',\r\n        component: DettaglioTaskPartyComponent,\r\n        data: {\r\n          title: 'Dettaglio Party',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio-conto',\r\n        component: DettaglioTaskContoComponent,\r\n        data: {\r\n          title: 'Dettaglio Conto',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio-sfruttamento',\r\n        component: DettaglioTaskSfruttamentoComponent,\r\n        data: {\r\n          title: 'Dettaglio Sfruttamento',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio-ecctranscodingingrosso',\r\n        component: DettaglioTaskEccTranscodingIngrossoComponent,\r\n        data: {\r\n          title: 'Dettaglio Eccezione Transcodifica Ingrosso',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio-ecctranscodingretail',\r\n        component: DettaglioTaskEccTranscodingRetailComponent,\r\n        data: {\r\n          title: 'Dettaglio Eccezione Transcodifica Retail',\r\n          roles: [EUserRole.ANAGRAFICHE_DET, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio-eccreachabilityretail',\r\n        component: DettaglioTaskEccReachabilityRetailComponent,\r\n        data: {\r\n          title: 'Dettaglio Eccezione Raggiungibilità Retail',\r\n          roles: [EUserRole.ANAGRAFICHE_DET, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TaskQueueRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TaskQueueRoutingModule } from './task-queue-routing.module';\r\nimport { RicercaTaskQueueComponent } from './ricerca-task-queue/ricerca-task-queue.component';\r\nimport {GepaGuiCommonModule} from '../../../common/gepagui-common.module';\r\n\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BDIAlertModule, BDIDatagridModule, BDIDatepickerModule} from 'scam-bdi-uikit';\r\nimport {GenericTableModule} from '../generic-table/generic-table.module';\r\nimport {InfoPanelModule} from '../info-panel/info-panel.module';\r\nimport {GenericActionRenderComponent} from '../generic-action-render/generic-action-render.component';\r\nimport {GenericActionRenderModule} from '../generic-action-render/generic-action-render.module';\r\nimport { BDITooltipModule, TooltipDirective } from 'scam-bdi-uikit';\r\nimport { DettaglioTaskPartyComponent } from './dettaglio-task-party/dettaglio-task-party.component';\r\nimport { DettaglioTaskContoComponent } from './dettaglio-task-conto/dettaglio-task-conto.component';\r\nimport { DettaglioTaskSfruttamentoComponent } from './dettaglio-task-sfruttamento/dettaglio-task-sfruttamento.component';\r\nimport { DettaglioTaskEccTranscodingIngrossoComponent } from './dettaglio-task-ecc-transcoding-ingrosso/dettaglio-task-ecc-transcoding-ingrosso.component';\r\nimport { DettaglioTaskEccTranscodingRetailComponent } from './dettaglio-task-ecc-transcoding-retail/dettaglio-task-ecc-transcoding-retail.component';\r\nimport { DettaglioTaskEccReachabilityRetailComponent } from './dettaglio-task-ecc-reachability-retail/dettaglio-task-ecc-reachability-retail.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RicercaTaskQueueComponent, DettaglioTaskPartyComponent, DettaglioTaskContoComponent, DettaglioTaskSfruttamentoComponent, DettaglioTaskEccTranscodingIngrossoComponent, DettaglioTaskEccTranscodingRetailComponent, DettaglioTaskEccReachabilityRetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GepaGuiCommonModule,\r\n    TaskQueueRoutingModule,\r\n    ReactiveFormsModule,\r\n    BDIAlertModule.forRoot(),\r\n    BDIDatepickerModule,\r\n    FormsModule,\r\n    GenericTableModule,\r\n    InfoPanelModule,\r\n    BDIDatagridModule.withComponents([\r\n      GenericActionRenderComponent,\r\n    ]),\r\n   BDITooltipModule.forRoot(),\r\n    GenericActionRenderModule\r\n  ],\r\n  entryComponents: [GenericActionRenderComponent]\r\n})\r\nexport class TaskQueueModule { }\r\n"],"sourceRoot":"webpack:///"}