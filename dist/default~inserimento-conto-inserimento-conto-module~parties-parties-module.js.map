{"version":3,"sources":["./src/app/views/anagrafiche/parties/ricerca-parties/ricerca-parties.component.html","./src/app/views/anagrafiche/parties/abstract-party.component.ts","./src/app/views/anagrafiche/parties/ricerca-parties/ricerca-parties.component.ts"],"names":[],"mappings":"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","file":"default~inserimento-conto-inserimento-conto-module~parties-parties-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fa fa-users\\\"></i> Anagrafica Party </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row mb-2\\\" *ngIf=\\\"userIsSpi\\\">\\r\\n                    <div class=\\\"col-2\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"goToInsertParty()\\\">Nuovo Party</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"ricercaForm\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">Bic:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bic\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bic.invalid && (bic.dirty || bic.touched)\\\" formControlName=\\\"bic\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bic.errors?.wildcard && (bic.dirty || bic.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bic.errors?.syntax && (bic.dirty || bic.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"tipo\\\" class=\\\"col-2 col-form-label\\\">Tipo Party:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"tipo\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipo.invalid && (tipo.dirty || tipo.touched)\\\" formControlName=\\\"tipo\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutte</option>\\r\\n                                <option *ngFor=\\\"let t of tipiParty\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nome\\\" class=\\\"col-2 col-form-label\\\">Nome:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"nome\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nome.invalid && (nome.dirty || nome.touched)\\\" formControlName=\\\"nome\\\" maxlength=\\\"4000\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"nome.errors?.wildcard && (nome.dirty || nome.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && (abi.dirty || abi.touched)\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"abi.errors?.wildcard && (abi.dirty || abi.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"abi.errors?.pattern && (abi.dirty || abi.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"filiale\\\" class=\\\"col-2 col-form-label\\\">Filiale:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"filiale\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"filiale.invalid && (filiale.dirty || filiale.touched)\\\" formControlName=\\\"filiale\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutte</option>\\r\\n                                <option *ngFor=\\\"let f of filialiRiferimento\\\" [value]=\\\"f.codice\\\">{{f.sigla}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"mfiCode\\\" class=\\\"col-2 col-form-label\\\">MFI Code:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"mfiCode\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"mfiCode.invalid && (mfiCode.dirty || mfiCode.touched)\\\" formControlName=\\\"mfiCode\\\" maxlength=\\\"160\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"mfiCode.errors?.wildcard && (mfiCode.dirty || mfiCode.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"mfiCode.errors?.pattern && (mfiCode.dirty || mfiCode.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"indResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"indResidenza\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"indResidenza.invalid && (indResidenza.dirty || indResidenza.touched)\\\" formControlName=\\\"indResidenza\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"indResidenza.errors?.wildcard && (indResidenza.dirty || indResidenza.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"indResidenza.errors?.pattern && (indResidenza.dirty || indResidenza.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"catEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Economica:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"catEconomica\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"catEconomica.invalid && (catEconomica.dirty || catEconomica.touched)\\\" formControlName=\\\"catEconomica\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"catEconomica.errors?.wildcard && (catEconomica.dirty || catEconomica.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"catEconomica.errors?.pattern && (catEconomica.dirty || catEconomica.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--Data Apertura-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Apertura:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataAperturaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataAperturaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataAperturaDa.invalid && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataAperturaDa\\\"  bdiDatepicker #datepickerDAda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\"  style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDAda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataAperturaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataAperturaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataAperturaDa.errors?.dateformat && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataAperturaDa.errors?.daterange && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataAperturaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataAperturaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataAperturaA.invalid && (dataAperturaA.dirty || dataAperturaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataAperturaA\\\"  bdiDatepicker #datepickerDAa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDAa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataAperturaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataAperturaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataAperturaA.errors?.dateformat && (dataAperturaA.dirty || dataAperturaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataAperturaA.errors?.daterange && (dataAperturaA.dirty || dataAperturaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--Data Chiusura-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Chiusura:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataChiusuraDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataChiusuraDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusuraDa.invalid && (dataChiusuraDa.dirty || dataChiusuraDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusuraDa\\\"  bdiDatepicker #datepickerDCda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDCda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataChiusuraDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusuraDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataChiusuraDa.errors?.dateformat && (dataChiusuraDa.dirty || dataChiusuraDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataChiusuraDa.errors?.daterange && (dataChiusuraDa.dirty || dataChiusuraDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataChiusuraA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataChiusuraA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusuraA.invalid && (dataChiusuraA.dirty || dataChiusuraA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusuraA\\\"  bdiDatepicker #datepickerDCa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDCa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataChiusuraA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusuraA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataChiusuraA.errors?.dateformat && (dataChiusuraA.dirty || dataChiusuraA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataChiusuraA.errors?.daterange && (dataChiusuraA.dirty || dataChiusuraA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--Data Inizio Validita-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Inizio Validità:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataInizioValiditaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataInizioValiditaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValiditaDa.invalid && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValiditaDa\\\"  bdiDatepicker #datepickerDIVda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIVda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataInizioValiditaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValiditaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaDa.errors?.dateformat && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaDa.errors?.daterange && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataInizioValiditaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataInizioValiditaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValiditaA.invalid && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValiditaA\\\"  bdiDatepicker #datepickerDIVa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIVa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataInizioValiditaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValiditaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaA.errors?.dateformat && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaA.errors?.daterange && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--Data Fine Validità:-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Fine Validità:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataFineValiditaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataFineValiditaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValiditaDa.invalid && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValiditaDa\\\"  bdiDatepicker #datepickerDFVda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDFVda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataFineValiditaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValiditaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataFineValiditaDa.errors?.dateformat && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataFineValiditaDa.errors?.daterange && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataFineValiditaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataFineValiditaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValiditaA.invalid && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValiditaA\\\"  bdiDatepicker #datepickerDFVa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDFVa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataFineValiditaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValiditaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataFineValiditaA.errors?.dateformat && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataFineValiditaA.errors?.daterange && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"utenteInserimento\\\" class=\\\"col-2 col-form-label\\\">Utente Inserimento:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteInserimento\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteInserimento.invalid && (utenteInserimento.dirty || utenteInserimento.touched)\\\" formControlName=\\\"utenteInserimento\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.wildcard && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.pattern && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"utenteApprovatore\\\" class=\\\"col-2 col-form-label\\\">Utente Approvatore:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteApprovatore\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteApprovatore.invalid && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" formControlName=\\\"utenteApprovatore\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.wildcard && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.pattern && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-2 mx-auto\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"submit(target, true)\\\">Cerca</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div #target>\\r\\n                    <app-generic-table *ngIf=\\\"showTable\\\" [model]=\\\"partyModel\\\" (action)=\\\"onActionEvent($event)\\\" (colToDisplay)=\\\"onColToDisplayEvent($event, this.partyService.searchModel)\\\" (paginationChanged)=\\\"onPaginationEvent($event, this.partyService.searchModel)\\\" (sortChanged)=\\\"onSortEvent($event, this.partyService.searchModel)\\\" (filterChanged)=\\\"onFilterEvent($event, this.partyService.searchModel)\\\"></app-generic-table>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #wildcardTooltip>\\r\\n        <div class=\\\"input-group-append\\\" bdiTooltip=\\\"{{util.getWildcardTooltip()}}\\\" placement=\\\"right\\\">\\r\\n        <span class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fas fa-info-circle\\\"></i>\\r\\n        </span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {TipoParty} from '../../../models/party';\r\nimport {FilialeRiferimento} from '../../../models/filiale';\r\nimport {tap} from 'rxjs/operators';\r\nimport {PartyService} from '../../../services/party.service';\r\nimport {FilialeService} from '../../../services/filiale.service';\r\nimport {SecurityService, UserService} from '../../../services';\r\nimport {FormatterUtils} from '../../../utilities/formatterUtils';\r\nimport {RoutingService} from '../../../services/routing.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {AbstractAnagraficheComponent} from '../abstract-anagrafiche.component';\r\n\r\n\r\nexport abstract class AbstractPartyComponent extends  AbstractAnagraficheComponent implements OnInit {\r\n\r\n    tipiParty: TipoParty[];\r\n    filialiRiferimento: FilialeRiferimento[];\r\n    isActive: boolean = false;\r\n\r\n    constructor( protected partyService: PartyService,\r\n                 protected filialeService: FilialeService,\r\n                 protected securityService: SecurityService,\r\n                 protected userService: UserService,\r\n                 protected formatterUtils: FormatterUtils,\r\n                 protected routingService: RoutingService,\r\n                 protected route: ActivatedRoute) {\r\n\r\n        super(securityService, userService, formatterUtils, routingService, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.buildCombo();\r\n    }\r\n\r\n    protected buildCombo() {\r\n        this.partyService.getTipiParties().pipe(\r\n            tap( res => this.tipiParty = res)\r\n        ).subscribe();\r\n\r\n        this.filialeService.getFilialiRiferimento().pipe(\r\n            tap( res => this.filialiRiferimento = res)\r\n        ).subscribe();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {PartyService} from '../../../../services/party.service';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {GenericTableModel} from '../../../../models/generic-table-model';\r\nimport {GenericActionRenderComponent} from '../../generic-action-render/generic-action-render.component';\r\nimport {ActionRenderModel, ButtonModel} from '../../../../models/action-render-model';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {FilialeService} from '../../../../services/filiale.service';\r\nimport {RSQLUtils} from '../../../../utilities/rsqlUtil';\r\nimport {of} from 'rxjs';\r\nimport {AbstractPartyComponent} from '../abstract-party.component';\r\nimport {Utils} from '../../../../utilities/util';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {get} from 'lodash';\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {SearchModel} from \"../../../../models/search\";\r\n\r\n@Component({\r\n    selector: 'app-ricerca-parties',\r\n    templateUrl: './ricerca-parties.component.html',\r\n    //styleUrls: ['./ricerca-parties.component.scss']\r\n})\r\nexport class RicercaPartiesComponent extends AbstractPartyComponent implements OnInit {\r\n\r\n    partyModel: GenericTableModel;\r\n    showTable = false;\r\n    ricercaForm: FormGroup;\r\n    util: Utils ;\r\n\r\n    constructor(\r\n        protected router: Router,\r\n        protected partyService: PartyService,\r\n        protected filialeService: FilialeService,\r\n        protected securityService: SecurityService,\r\n        protected userService: UserService,\r\n        protected filterUtils: FilterUtils,\r\n        protected formatterUtils: FormatterUtils,\r\n        protected formBuilder: FormBuilder,\r\n        protected rSQLUtils: RSQLUtils,\r\n        protected utils: Utils,\r\n        protected route: ActivatedRoute,\r\n        protected routingService: RoutingService\r\n    ) {\r\n        super(partyService, filialeService, securityService, userService, formatterUtils, routingService, route);\r\n        this.util = utils;\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.buildForm();\r\n        this.buildModel();\r\n        this.manageNavigation();\r\n    }\r\n\r\n    protected manageNavigation() {\r\n        this.route.queryParams.subscribe(params => {\r\n            if (!!params && !!get(params, this.BACK) && !!this.getSearcModel()) {\r\n                this.ricercaForm.setValue(this.getSearcModel().form);\r\n                this.submit(null, false);\r\n            } else {\r\n                this.setSearcModel(this.initSearchModel());\r\n            }\r\n        });\r\n    }\r\n\r\n    protected buildForm() {\r\n        this.ricercaForm = this.formBuilder.group({\r\n            bic:  new FormControl(null,   [this.wildcard2Validator.bind(this), this.bicValidator.bind(this)]),\r\n            tipo: new FormControl(null,   []),\r\n            nome: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            abi: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            filiale: new FormControl(null,   []),\r\n            mfiCode: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            indResidenza: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            catEconomica: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            dataAperturaDa: new FormControl(null, []),\r\n            dataAperturaA: new FormControl(null, []   ),\r\n            dataChiusuraDa: new FormControl(null, []   ),\r\n            dataChiusuraA: new FormControl(null, []   ),\r\n            dataInizioValiditaDa: new FormControl(null, []   ),\r\n            dataInizioValiditaA: new FormControl(null, []   ),\r\n            dataFineValiditaDa: new FormControl(null, []   ),\r\n            dataFineValiditaA: new FormControl(null, []   ),\r\n            utenteInserimento: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            utenteApprovatore: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n        }, { validator: dateValidator( [\r\n                {field1: 'dataAperturaDa', field2: 'dataAperturaA'},\r\n                {field1: 'dataChiusuraDa', field2: 'dataChiusuraA'},\r\n                {field1: 'dataInizioValiditaDa', field2: 'dataInizioValiditaA'},\r\n                {field1: 'dataFineValiditaDa', field2: 'dataFineValiditaA'}\r\n            ]) });\r\n    }\r\n\r\n    get bic() { return this.ricercaForm.get('bic'); }\r\n    get tipo() { return this.ricercaForm.get('tipo'); }\r\n    get nome() { return this.ricercaForm.get('nome'); }\r\n    get abi() { return this.ricercaForm.get('abi'); }\r\n    get filiale() { return this.ricercaForm.get('filiale'); }\r\n    get mfiCode() { return this.ricercaForm.get('mfiCode'); }\r\n    get indResidenza() { return this.ricercaForm.get('indResidenza'); }\r\n    get catEconomica() { return this.ricercaForm.get('catEconomica'); }\r\n    get dataAperturaDa() { return this.ricercaForm.get('dataAperturaDa'); }\r\n    get dataAperturaA() { return this.ricercaForm.get('dataAperturaA'); }\r\n    get dataChiusuraDa() { return this.ricercaForm.get('dataChiusuraDa'); }\r\n    get dataChiusuraA() { return this.ricercaForm.get('dataChiusuraA'); }\r\n    get dataInizioValiditaDa() { return this.ricercaForm.get('dataInizioValiditaDa'); }\r\n    get dataInizioValiditaA() { return this.ricercaForm.get('dataInizioValiditaA'); }\r\n    get dataFineValiditaDa() { return this.ricercaForm.get('dataFineValiditaDa'); }\r\n    get dataFineValiditaA() { return this.ricercaForm.get('dataFineValiditaA'); }\r\n    get utenteInserimento() { return this.ricercaForm.get('utenteInserimento'); }\r\n    get utenteApprovatore() { return this.ricercaForm.get('utenteApprovatore'); }\r\n\r\n    reset( field) {\r\n        this.ricercaForm.get(field).setValue(null);\r\n    }\r\n\r\n    buildModel() {\r\n        this.partyModel = {\r\n            domLayout: 'autoHeight',\r\n            gridOptions: {\r\n                rowHeight: 30,\r\n                paginationPageSize: 10,\r\n                defaultColDef: {\r\n                    sortable: true\r\n                },\r\n                context: {\r\n                    componentParent: this\r\n                },\r\n                onGridReady: () => this.initializeGrid()\r\n            },\r\n            rowData: [],\r\n            pagination: true,\r\n            columnsFitAvailable: true,\r\n            columnDefs: this.buildColumnDef(),\r\n            enableCsvExport: true,\r\n            enablePdfExport: true,\r\n            enableColumnSelection: true\r\n        };\r\n    }\r\n\r\n    protected initializeGrid(): void {\r\n        this.partyModel.gridOptions.api.sizeColumnsToFit();\r\n        this.partyModel.gridOptions.onGridSizeChanged = evt =>  this.partyModel.gridOptions.api ?  this.partyModel.gridOptions.api.sizeColumnsToFit() : null;\r\n    }\r\n\r\n    protected buildColumnDef() {\r\n        let order = 0;\r\n        return  [\r\n            {colId: ('id_' + order++), headerName: 'BIC',                    field: 'bic',           filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'TIPO',                   field: 'tipoParty.descrizione',          filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'NOME',                   field: 'nome',          filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'FILIALE',                field: 'filialeRiferimento.sigla',    filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'ABI',                    field: 'defaultAbi',    filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'DATA APERTURA',          field: 'dataApertura',  filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'dataApertura'), exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'DATA CHIUSURA',          field: 'dataChiusura',  filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'dataChiusura'), exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'INIZIO VALIDITA\\'',      field: 'validFrom',     filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validFrom'), exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'FINE VALIDITA\\'',        field: 'validTo',       filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validTo'), exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'AZIONI',                 field: '',              resizable: true, cellRendererFramework: GenericActionRenderComponent, cellRendererParams: {modelFn: this.buildActionRenderModel.bind(this)}, sortable: false, exportOptions: {skipColumn: true}, pinned: 'right', minWidth: 150}\r\n        ];\r\n    }\r\n\r\n    public buildActionRenderModel(data): ActionRenderModel {\r\n\r\n        let detailButton =  null;\r\n\r\n        if (this.userIsSpi || this.userIsBil || this.userIsVis) {\r\n            detailButton = <ButtonModel> {\r\n                label: 'Visualizza dettaglio Party '.concat(data.bic),\r\n                routerLink: this.routingService.getRouteByKey(this.routingService.PARTY_DETAIL),\r\n                params: {idParty: data.id, backUrl: this.routingService.PARTY_SEARCH},\r\n                enabled: true,\r\n                sessionKey : this.routingService.PARTY_DETAIL\r\n            };\r\n        }\r\n\r\n        let modifyButton =  null;\r\n        let deleteButton =  null;\r\n\r\n        if (this.userIsSpi && this.isPartyActive(data)) {\r\n            modifyButton = <ButtonModel> {\r\n                label: 'Modifica Party '.concat(data.bic),\r\n                routerLink: '/anagrafiche/parties/modifica',\r\n                params: {idParty: data.id, backUrl: this.routingService.PARTY_SEARCH},\r\n                enabled: true,\r\n                sessionKey : this.routingService.PARTY_MODIFY\r\n            };\r\n            deleteButton = <ButtonModel> {\r\n                label: 'Elimina Party '.concat(data.bic),\r\n                routerLink: '/anagrafiche/parties/eliminazione-logica',\r\n                params: {idParty: data.id, backUrl: this.routingService.PARTY_SEARCH},\r\n                enabled: true,\r\n                sessionKey : this.routingService.PARTY_DELETE\r\n            };\r\n        }\r\n        return <ActionRenderModel> {\r\n            detailButton: detailButton,\r\n            modifyButton: modifyButton,\r\n            deleteButton: deleteButton\r\n        };\r\n    }\r\n\r\n    submit(targetEl: HTMLElement, resetPage: boolean) {\r\n\r\n        this.showTable = false;\r\n        this.resetError();\r\n        this.partyModel.rowData = [];\r\n        this.partyModel.enableMessageOnSizeResultLimit = false;\r\n\r\n        this.manageSearchModel( this.partyModel, this.getSearcModel(), resetPage);\r\n\r\n        if (!!this.ricercaForm.valid) {\r\n            this.showSpinner();\r\n\r\n            if (!this.getSearcModel()) {\r\n                this.setSearcModel(this.initSearchModel());\r\n            }\r\n            this.getSearcModel().form = this.ricercaForm.value;\r\n            const searchString = this.buildRsqlSearchString();\r\n\r\n            this.partyService.getParties(searchString).pipe(\r\n\r\n                tap( res => {\r\n                    this.partyModel.enableMessageEmptyResult = true;\r\n                    if (!!res && res.content.length > 0 ) {\r\n                        this.partyModel.enableMessageEmptyResult = false;\r\n                        this.partyModel.rowData = res.content;\r\n                        this.partyModel.enableMessageOnSizeResultLimit = false;\r\n                        this.partyModel.searchRecordLenght = res.content.length;\r\n                        if ( res.totalElements > res.content.length) {\r\n                            this.partyModel.enableMessageOnSizeResultLimit = true;\r\n                            this.partyModel.searchRecordLenght = res.totalElements;\r\n                        }\r\n                    }\r\n                }),\r\n\r\n                tap ( res => {\r\n                    this.showTable = true;\r\n                    if (!!targetEl) {\r\n                        this.scrollToResult(targetEl);\r\n                    }\r\n                    this.hideSpinner();\r\n                }),\r\n\r\n                catchError((error) => {\r\n                    console.log ('Error - submit', error);\r\n                    this.showTable = false;\r\n                    this.setError(error);\r\n                    this.hideSpinner();\r\n                    return of(null);\r\n                })\r\n            ).subscribe();\r\n        }\r\n    }\r\n\r\n    protected scrollToResult(targetEl: HTMLElement) {\r\n        setTimeout(function() {\r\n            console.log('Scrolling to table');\r\n            targetEl.scrollIntoView({behavior: 'smooth'});\r\n        }, 500);\r\n    }\r\n\r\n    protected buildRsqlSearchString() {\r\n\r\n        const rSQLArray: string [] = [];\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.bic.value, 'bic'));\r\n        rSQLArray.push(this.rSQLUtils.manageSelect( this.tipo.value, 'tipoParty'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.nome.value, 'nome'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.abi.value, 'defaultAbi'));\r\n        rSQLArray.push(this.rSQLUtils.manageSelect( this.filiale.value, 'filialeRiferimento'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.mfiCode.value, 'mfiCode'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.indResidenza.value, 'indicatoreResidenza'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.catEconomica.value, 'categoriaEconomica'));\r\n        rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataAperturaDa.value), this.formatterUtils.dateToString(this.dataAperturaA.value), 'dataApertura'));\r\n        rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataChiusuraDa.value), this.formatterUtils.dateToString(this.dataChiusuraA.value), 'dataChiusura'));\r\n        rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataInizioValiditaDa.value), this.formatterUtils.dateToString(this.dataInizioValiditaA.value), 'validFrom'));\r\n        rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataFineValiditaDa.value), this.formatterUtils.dateToString(this.dataFineValiditaA.value), 'validTo'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteInserimento.value, 'utenteRichiesta'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteApprovatore.value, 'utenteValidazione'));\r\n\r\n        const searchString = this.rSQLUtils.getSearchString(rSQLArray);\r\n        console.log('RSQL searchString:' + searchString);\r\n        return searchString;\r\n    }\r\n\r\n    goToInsertParty() {\r\n        this.setSession(this.routingService.PARTY_INSERT, {backUrl: this.routingService.PARTY_SEARCH});\r\n        this.router.navigate(['/anagrafiche/parties/inserimento'], {});\r\n    }\r\n\r\n    protected getSearcModel() {\r\n        return this.partyService.searchModel;\r\n    }\r\n\r\n    protected setSearcModel(searchModel: SearchModel) {\r\n        return this.partyService.searchModel = searchModel;\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}