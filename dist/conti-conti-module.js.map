{"version":3,"sources":["./src/app/views/anagrafiche/conti/eliminazione-logica-conto/eliminazione-logica-conto.component.html","./src/app/views/anagrafiche/conti/modifica-conto/modifica-conto.component.html","./src/app/views/anagrafiche/conti/conti-routing.module.ts","./src/app/views/anagrafiche/conti/conti.module.ts","./src/app/views/anagrafiche/conti/eliminazione-logica-conto/eliminazione-logica-conto.component.scss","./src/app/views/anagrafiche/conti/eliminazione-logica-conto/eliminazione-logica-conto.component.ts","./src/app/views/anagrafiche/conti/modifica-conto/modifica-conto.component.scss","./src/app/views/anagrafiche/conti/modifica-conto/modifica-conto.component.ts"],"names":[],"mappings":"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","file":"conti-conti-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-edit\\\"></i> Chiusura Conto </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"!!infoPanelPartyModel\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Party Proprietario</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <app-info-panel [model]=\\\"infoPanelPartyModel\\\"></app-info-panel>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"eliminazioneForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                            <strong><i class=\\\"fal fa-info-square\\\"></i>Conto</strong>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"bicConto\\\" class=\\\"col-2 col-form-label\\\">Bic</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"bicConto\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.bic\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"tipoConto\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.tipoConto.descrizione\\\"/>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"targetService\\\" class=\\\"col-2 col-form-label\\\">Target Service:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"targetService\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.tipoConto.descrizione\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"numeroConto\\\" class=\\\"col-2 col-form-label\\\">Account Id:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"numeroConto\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.numeroConto\\\"/>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.descrizione\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">ABI:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"abi\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.abi\\\"/>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"mcaDefFlag\\\" class=\\\"col-2 col-form-label\\\">Default MCA:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"mcaDefFlag\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"formatterUtils.getBooleanAsString(conto.mcaDefFlag)\\\"/>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"pressoBdi\\\" class=\\\"col-2 col-form-label\\\">Presso BDI:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"pressoBdi\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"formatterUtils.getBooleanAsString(conto.pressoBdi)\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"flgMan\\\" class=\\\"col-2 col-form-label\\\">Flag Inserimento manuale:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"flgMan\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"formatterUtils.getBooleanAsString(conto.flgMan)\\\"/>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"indResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"indResidenza\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.indicatoreResidenza\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"categoriaEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Economica:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"categoriaEconomica\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.categoriaEconomica\\\"/>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"dataApertura\\\" class=\\\"col-2 col-form-label\\\">Data Apertura:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"dataApertura\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"conto.dataApertura\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"dataChiusura\\\" class=\\\"col-2 col-form-label\\\">Data Chiusura<span>*</span>:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else dataChiusuraT\\\">\\r\\n                                        <input id=\\\"dataChiusura\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusura\\\"  [class.is-invalid]=\\\"dataChiusura.invalid && form.submitted\\\" bdiDatepicker #datepickerDIV=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" readOnly=\\\"true\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIV.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"!!dataChiusura.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataChiusura.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo obbligatorio\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #dataChiusuraT>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getDataChiusuraValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-edit\\\"></i> Modifica Conto <ng-container *ngIf=\\\"userIsBil\\\"> - Indicatori BIL</ng-container></strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"!!infoPanelPartyModel\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Party Proprietario</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <app-info-panel [model]=\\\"infoPanelPartyModel\\\"></app-info-panel>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"modificaForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                            <strong><i class=\\\"fal fa-info-square\\\"></i>Conto</strong>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"bicConto\\\" class=\\\"col-2 col-form-label\\\">Bic<span>*</span>:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <input id=\\\"bicConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicConto.invalid && form.submitted\\\" formControlName=\\\"bicConto\\\" maxlength=\\\"11\\\" [readOnly]=\\\"!checkedbicConto.value || readonlyForm\\\"/>\\r\\n                                </div>\\r\\n                                <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                    <label for=\\\"checkedbicConto\\\" class=\\\"col-1 col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedbicConto\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedbicConto\\\"  [attr.disabled]=\\\"true\\\"></label>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    <div class=\\\"col-1\\\"></div>\\r\\n                                </ng-container>\\r\\n\\r\\n                                <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto<span>*</span>:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <select *ngIf=\\\"(checkedtipoConto.value && !readonlyForm); else inputTipo\\\" id=\\\"tipoConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipoConto.invalid && form.submitted\\\" formControlName=\\\"tipoConto\\\" (change)=\\\"setTargetService()\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                        <option *ngFor=\\\"let t of tipiConto\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                                    </select>\\r\\n                                    <div *ngIf=\\\"tipoConto.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #inputTipo>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getSelectValue(tipiConto, conto.tipoConto.codice)\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n                                <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                    <label for=\\\"checkedtipoConto\\\" class=\\\"col-1 col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedtipoConto\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedtipoConto\\\" [attr.disabled]=\\\"true\\\"/></label>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    <div class=\\\"col-1\\\"></div>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"targetService\\\" class=\\\"col-2 col-form-label\\\">Target Service<span>*</span>:</label>\\r\\n                                <!--<div class=\\\"col-3\\\">\\r\\n                                    <select *ngIf=\\\"(checkedtargetService.value && !readonlyForm); else inputTarget\\\" id=\\\"targetService\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"targetService.invalid && form.submitted\\\" formControlName=\\\"targetService\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                        <option *ngFor=\\\"let t of tipiTargetService\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                                    </select>\\r\\n                                    <div *ngIf=\\\"targetService.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #inputTarget>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getSelectValue(tipiTargetService, conto.targetService)\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n                                -->\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <input id=\\\"targetService\\\" class=\\\"form-control\\\" [value]=\\\"getSelectValue(tipiTargetService, conto.targetService)\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </div>\\r\\n                                <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                    <label for=\\\"checkedtargetService\\\" class=\\\"col-1 col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedtargetService\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedtargetService\\\" [attr.disabled]=\\\"true\\\"/></label>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    <div class=\\\"col-1\\\"></div>\\r\\n                                </ng-container>\\r\\n\\r\\n                                <label for=\\\"numeroConto\\\" class=\\\"col-2 col-form-label\\\">Account Id<span>*</span>:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <input id=\\\"numeroConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"numeroConto.invalid && form.submitted\\\" formControlName=\\\"numeroConto\\\" maxlength=\\\"34\\\" [pattern]=\\\"'^[a-zA-Z0-9]+$'\\\" [readOnly]=\\\"!checkednumeroConto.value || readonlyForm\\\"/>\\r\\n                                    <div *ngIf=\\\"numeroConto.errors?.pattern && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo non valido\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"numeroConto.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                        <label for=\\\"checkednumeroConto\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkednumeroConto\\\" type=\\\"checkbox\\\" formControlName=\\\"checkednumeroConto\\\" (click)=\\\"manageCheckBox('numeroConto')\\\"/></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione<span>*</span>:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && form.submitted\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"!checkeddescrizione.value || readonlyForm\\\"/>\\r\\n                                    <div *ngIf=\\\"descrizione.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                        <label for=\\\"checkeddescrizione\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddescrizione\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddescrizione\\\" (click)=\\\"manageCheckBox('descrizione')\\\"/></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">ABI<span>*</span>:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && form.submitted\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9]+$'\\\" [readOnly]=\\\"!checkedabi.value || readonlyForm\\\"/>\\r\\n                                    <div *ngIf=\\\"abi.errors?.pattern && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo non valido\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"abi.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                        <label for=\\\"checkedabi\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedabi\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedabi\\\" (click)=\\\"manageCheckBox('abi')\\\"></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"mcaDefFlag\\\" class=\\\"col-2 col-form-label\\\">Default MCA:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <select *ngIf=\\\"(checkedmcaDefFlag.value && !readonlyForm); else inputDefaultMCA\\\" id=\\\"mcaDefFlag\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"mcaDefFlag.invalid && form.submitted\\\" formControlName=\\\"mcaDefFlag\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                        <option *ngFor=\\\"let t of tipiDefaultMCA\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                                    </select>\\r\\n                                    <div *ngIf=\\\"mcaDefFlag.errors?.value && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <ng-template #inputDefaultMCA>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getSelectValue(tipiDefaultMCA, formatterUtils.getBooleanAsString(conto, 'mcaDefFlag'))\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                        <label *ngIf=\\\"checkTipoConto(); else defaultMCADisabled\\\" for=\\\"checkedmcaDefFlag\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedmcaDefFlag\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedmcaDefFlag\\\" (click)=\\\"manageCheckBox('mcaDefFlag')\\\"/></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-template #defaultMCADisabled>\\r\\n                                        <label for=\\\"checkeddefaultMCADis\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddefaultMCADis\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedmcaDefFlag\\\" [attr.disabled]=\\\"true\\\"/></label>\\r\\n                                    </ng-template>\\r\\n\\r\\n                                    <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"pressoBdi\\\" class=\\\"col-2 col-form-label\\\">Presso BDI <span>*</span>:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <select *ngIf=\\\"(checkedpressoBdi.value && !readonlyForm); else inputPressoBDI\\\" id=\\\"pressoBdi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"pressoBdi.invalid && form.submitted\\\" formControlName=\\\"pressoBdi\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                        <option *ngFor=\\\"let t of tipiPressoBDI\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                                    </select>\\r\\n                                    <div *ngIf=\\\"pressoBdi.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #inputPressoBDI>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getSelectValue(tipiPressoBDI, formatterUtils.getBooleanAsString(conto, 'pressoBdi'))\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                        <label for=\\\"checkedpressoBdi\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedpressoBdi\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedpressoBdi\\\" (click)=\\\"manageCheckBox('pressoBdi')\\\"/></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"flgMan\\\" class=\\\"col-2 col-form-label\\\">Flag Inserimento manuale<span>*</span>:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <select *ngIf=\\\"(checkedflgMan.value && !readonlyForm); else inputFlagMan\\\" id=\\\"flgMan\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"flgMan.invalid && form.submitted\\\" formControlName=\\\"flgMan\\\" (change)=\\\"checkenableModificatoriBIL()\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                        <option *ngFor=\\\"let t of tipiManuale\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                                    </select>\\r\\n                                    <div *ngIf=\\\"flgMan.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #inputFlagMan>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getSelectValueFlgMan(tipiManuale, formatterUtils.getBooleanAsString(conto, 'flgMan'))\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"!this.userIsBil \\\">\\r\\n                                        <label for=\\\"checkedflgMan\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedflgMan\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedflgMan\\\" [attr.disabled]=\\\"true\\\"></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"!!this.userIsBil \\\">\\r\\n                                        <label for=\\\"checkedflgMan\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedflgMan\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedflgMan\\\" (click)=\\\"manageFlagInserimentoForBil('flgMan')\\\"/></label>\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"indResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <input id=\\\"indResidenza\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"indicatoreResidenza.invalid && form.submitted\\\" formControlName=\\\"indicatoreResidenza\\\" [readOnly]=\\\"!checkedindicatoreResidenza.value || !!readonlyForm\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9]+$'\\\"/>\\r\\n                                    <div *ngIf=\\\"indicatoreResidenza.errors?.pattern && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo non valido\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"indicatoreResidenza.errors?.value && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obblogatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"!enableModificatoriBIL\\\">\\r\\n                                        <label for=\\\"checkedindResidenza\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedindResidenza\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedindicatoreResidenza\\\" [attr.disabled]=\\\"true\\\"></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"enableModificatoriBIL\\\">\\r\\n                                        <label for=\\\"checkedindResidenzaBil\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedindResidenzaBil\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedindicatoreResidenza\\\" (click)=\\\"manageCheckBox('indicatoreResidenza')\\\"/></label>\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"categoriaEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Economica:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <input id=\\\"categoriaEconomica\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"categoriaEconomica.invalid && form.submitted\\\" formControlName=\\\"categoriaEconomica\\\" [readOnly]=\\\"!checkedcategoriaEconomica.value || !!readonlyForm\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9]+$'\\\"/>\\r\\n                                    <div *ngIf=\\\"categoriaEconomica.errors?.pattern && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo non valido\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"categoriaEconomica.errors?.value && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obblogatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"!enableModificatoriBIL\\\">\\r\\n                                        <label for=\\\"checkedcatEconomica\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedcatEconomica\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedcategoriaEconomica\\\" [attr.disabled]=\\\"true\\\"></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"enableModificatoriBIL\\\">\\r\\n                                        <label for=\\\"checkedcatEconomicaBil\\\" class=\\\"col-form-label\\\">\\r\\n                                            <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedcatEconomicaBil\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedcategoriaEconomica\\\" (click)=\\\"manageCheckBox('categoriaEconomica')\\\"/>\\r\\n                                        </label>\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"dataApertura\\\" class=\\\"col-2 col-form-label\\\">Data Apertura<span>*</span>:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <div class=\\\"input-group\\\" *ngIf=\\\"(checkeddataApertura.value && !readonlyForm); else inputDataApertura\\\">\\r\\n                                        <input id=\\\"dataApertura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataApertura.invalid && form.submitted\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataApertura\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" readOnly=\\\"true\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDateDA\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                                                                                <span class=\\\"input-group-text\\\">\\r\\n                                                                                                    <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                                                                                </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataApertura.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataApertura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                                                                                <span class=\\\"input-group-text\\\">\\r\\n                                                                                                    <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                                                                                </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataApertura.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo obbligatorio\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #inputDataApertura>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getDataAperturaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                        <label for=\\\"checkeddataApertura\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddataApertura\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddataApertura\\\" (click)=\\\"manageCheckBox('dataApertura', 'date')\\\"></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"dataChiusura\\\" class=\\\"col-2 col-form-label\\\">Data Chiusura:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <div class=\\\"input-group\\\" *ngIf=\\\"(checkeddataChiusura.value && !readonlyForm); else inputDataChiusura\\\">\\r\\n                                        <input id=\\\"dataChiusura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusura.invalid && form.submitted\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusura\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" readOnly=\\\"true\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                                                                                <span class=\\\"input-group-text\\\">\\r\\n                                                                                                    <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                                                                                </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataChiusura.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                                                                                <span class=\\\"input-group-text\\\">\\r\\n                                                                                                    <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                                                                                </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataChiusura.errors?.value && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            La data chiusura deve essere maggiore o uguale della data Apertura\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #inputDataChiusura>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getDataChiusuraValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"userIsSpi\\\">\\r\\n                                        <label for=\\\"checkeddataChiusura\\\" class=\\\"col-form-label\\\"><input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddataChiusura\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddataChiusura\\\" [attr.disabled]=\\\"true\\\"></label>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"!userIsSpi\\\">\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <div class=\\\"col-6\\\"></div>\\r\\n                                <label for=\\\"dataInizioValidita\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità:</label>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else dataInizioValiditaT\\\">\\r\\n                                        <input id=\\\"dataInizioValidita\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValidita\\\"  bdiDatepicker #datepickerDIV=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" readOnly=\\\"true\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDateVF\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIV.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                                                                            <span class=\\\"input-group-text\\\">\\r\\n                                                                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                                                                            </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"!!dataInizioValidita.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                                                                            <span class=\\\"input-group-text\\\">\\r\\n                                                                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                                                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #dataInizioValiditaT>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getDataInizioValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"alert alert-info\\\" role=\\\"alert\\\" >\\r\\n                                <div [innerHTML]=utils.getModificaMessage()></div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {RicercaPartiesComponent} from '../parties/ricerca-parties/ricerca-parties.component';\r\nimport {EUserRole} from '../../../models';\r\nimport {SecurityService} from '../../../services';\r\nimport {RicercaContiComponent} from './ricerca-conti/ricerca-conti.component';\r\nimport {RicercaTaskQueueComponent} from '../task-queue/ricerca-task-queue/ricerca-task-queue.component';\r\nimport {DettaglioTaskPartyComponent} from '../task-queue/dettaglio-task-party/dettaglio-task-party.component';\r\nimport {DettaglioPartyComponent} from '../parties/dettaglio-party/dettaglio-party.component';\r\nimport {DettaglioContoComponent} from './dettaglio-conto/dettaglio-conto.component';\r\nimport {InserimentoContoStep1Component} from './inserimento-conto/inserimento-conto-step1/inserimento-conto-step1.component';\r\nimport {InserimentoContoStep2Component} from './inserimento-conto/inserimento-conto-step2/inserimento-conto-step2.component';\r\nimport {InserimentoContoStep4Component} from './inserimento-conto/inserimento-conto-step4/inserimento-conto-step4.component';\r\nimport {InserimentoContoStep3Component} from './inserimento-conto/inserimento-conto-step3/inserimento-conto-step3.component';\r\nimport {ModificaPartyComponent} from '../parties/modifica-party/modifica-party.component';\r\nimport {ModificaContoComponent} from './modifica-conto/modifica-conto.component';\r\nimport {EliminazioneLogicaPartyComponent} from '../parties/eliminazione-logica-party/eliminazione-logica-party.component';\r\nimport {EliminazioneLogicaContoComponent} from './eliminazione-logica-conto/eliminazione-logica-conto.component';\r\nimport {AssocazioneContoStep1Component} from './sfruttamento-ansy/assocazione-conto-step1/assocazione-conto-step1.component';\r\nimport {AssocazioneContoStep2Component} from './sfruttamento-ansy/assocazione-conto-step2/assocazione-conto-step2.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'Anagrafiche Conti',\r\n        },\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: RicercaContiComponent,\r\n                data: {\r\n                    title: 'Anagrafiche Conti',\r\n                    roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n                },\r\n                canActivate: [SecurityService]\r\n            },\r\n            {\r\n                path: 'dettaglio',\r\n                loadChildren: () => import('./dettaglio-conto/dettaglio-conto.module').then(m => m.DettaglioContoModule)\r\n            },\r\n            {\r\n                path: 'inserimento',\r\n                loadChildren: () => import('./inserimento-conto/inserimento-conto.module').then(m => m.InserimentoContoModule)\r\n            },\r\n            {\r\n                path: 'modifica',\r\n                component: ModificaContoComponent,\r\n                data: {\r\n                    title: 'Modifica Conto',\r\n                    roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL]\r\n                },\r\n                canActivate: [SecurityService],\r\n            },\r\n            {\r\n                path: 'eliminazione-logica',\r\n                component: EliminazioneLogicaContoComponent,\r\n                data: {\r\n                    title: 'Eliminazione Logica Conto',\r\n                    roles: [EUserRole.ANAGRAFICHE_SPI]\r\n                },\r\n                canActivate: [SecurityService],\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ContiRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ContiRoutingModule } from './conti-routing.module';\r\nimport { RicercaContiComponent } from './ricerca-conti/ricerca-conti.component';\r\nimport {GepaGuiCommonModule} from '../../../common/gepagui-common.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BDIAlertModule, BDIDatagridModule, BDIDatepickerModule} from 'scam-bdi-uikit';\r\nimport {GenericTableModule} from '../generic-table/generic-table.module';\r\nimport {InfoPanelModule} from '../info-panel/info-panel.module';\r\nimport {GenericActionRenderComponent} from '../generic-action-render/generic-action-render.component';\r\nimport { BDITooltipModule, TooltipDirective } from 'scam-bdi-uikit';\r\nimport {GenericActionRenderModule} from '../generic-action-render/generic-action-render.module';\r\nimport { ModificaContoComponent } from './modifica-conto/modifica-conto.component';\r\nimport { EliminazioneLogicaContoComponent } from './eliminazione-logica-conto/eliminazione-logica-conto.component';\r\n\r\n@NgModule({\r\n  declarations: [RicercaContiComponent, ModificaContoComponent, EliminazioneLogicaContoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GepaGuiCommonModule,\r\n    ContiRoutingModule,\r\n    ReactiveFormsModule,\r\n    BDIAlertModule.forRoot(),\r\n    BDIDatepickerModule,\r\n    FormsModule,\r\n    GenericTableModule,\r\n    InfoPanelModule,\r\n    BDIDatagridModule.withComponents([\r\n      GenericActionRenderComponent,\r\n    ]),\r\n   BDITooltipModule.forRoot(),\r\n    GenericActionRenderModule\r\n  ]\r\n})\r\nexport class ContiModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9jb250aS9lbGltaW5hemlvbmUtbG9naWNhLWNvbnRvL2VsaW1pbmF6aW9uZS1sb2dpY2EtY29udG8uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractPartyComponent} from '../../parties/abstract-party.component';\r\nimport {GetPartiesResponse, Party} from '../../../../models/party';\r\nimport {IDatepickerModel} from 'scam-bdi-uikit/lib/daterangepicker/interfaces';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PartyService} from '../../../../services/party.service';\r\nimport {FilialeService} from '../../../../services/filiale.service';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {InfostatService} from '../../../../services/infostat.service';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {Conto} from '../../../../models/conto';\r\nimport {catchError, filter, mergeMap, switchMap, tap, toArray} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {ContoService} from '../../../../services/conto.service';\r\nimport {AbstractContiComponent} from '../abstract-conti.component';\r\nimport {RSQLUtils} from '../../../../utilities/rsqlUtil';\r\nimport {Utils} from '../../../../utilities/util';\r\nimport {TaskConto, TaskParty} from '../../../../models/task';\r\nimport {TipoOperazioneEnum} from '../../../../models/enum';\r\nimport {InfoPanelModel} from '../../../../models/info-panel-model';\r\n\r\n@Component({\r\n  selector: 'app-eliminazione-logica-conto',\r\n  templateUrl: './eliminazione-logica-conto.component.html',\r\n  styleUrls: ['./eliminazione-logica-conto.component.scss']\r\n})\r\nexport class EliminazioneLogicaContoComponent extends AbstractContiComponent implements OnInit {\r\n\r\n  party: Party;\r\n  conto: Conto;\r\n  minDate: IDatepickerModel;\r\n\r\n  eliminazioneForm: FormGroup;\r\n  isActive: boolean = false;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected partyService: PartyService,\r\n      protected filialeService: FilialeService,\r\n      protected contoService: ContoService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private rSQLUtils: RSQLUtils,\r\n      private utils: Utils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute,\r\n      private taskService: TaskService\r\n  ) {\r\n    super(partyService, filialeService, contoService, securityService, userService, formatterUtils, routingService, route);\r\n    this.utils = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const deleteContoSessionObj = this.getSession(this.routingService.CONTO_DELETE);\r\n      if (!!deleteContoSessionObj) {\r\n        this.load(deleteContoSessionObj.idConto);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(deleteContoSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private load (idConto: string) {\r\n    this.showSpinner();\r\n    this.contoService.getConto(idConto).pipe(\r\n        tap( res => {\r\n          this.conto = res;\r\n          this.setMinDate();\r\n          this.isActive = this.isContoActive(this.conto);\r\n          this.eliminazioneForm = this.formBuilder.group({\r\n            dataChiusura: new FormControl(  null , [Validators.required]),\r\n          });\r\n        }),\r\n        switchMap(res => this.partyService.getPartyByBicAndTipo(this.conto.bicParty, this.conto.tipoParty)),\r\n        tap ( res => { this.party = res; }),\r\n        tap( res => {\r\n          if (!!this.party) {\r\n            this.buildPartySection();\r\n          }\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - load', error);\r\n          this.setError(error);\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildPartySection() {\r\n    const data = [\r\n      [this.buildInfoPanelElement('Party Bic', 'string', this.party, 'bic'), this.buildInfoPanelElement('Tipo Party', 'string', this.party, 'tipoParty.descrizione')],\r\n      [this.buildInfoPanelElement('Nome Party', 'string', this.party, 'nome'), this.buildInfoPanelElement('Indicatore di Residenza', 'string', this.party, 'indicatoreResidenza')],\r\n      [this.buildInfoPanelElement('Categoria Economica', 'string', this.party, 'categoriaEconomica'), this.buildInfoPanelElement('Data Apertura Party', 'date', this.party, 'dataApertura')],\r\n      [this.buildInfoPanelElement('Data Chiusura Party', 'date', this.party, 'dataChiusura')],\r\n    ];\r\n\r\n    this.infoPanelPartyModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n  }\r\n\r\n  get dataChiusura() { return this.eliminazioneForm.get('dataChiusura'); }\r\n\r\n  setMinDate() {\r\n    const d1 = new Date(this.conto.dataApertura);\r\n    d1.setDate(d1.getDate() + 1);\r\n    const d2 = new Date(this.conto.validFrom);\r\n    if (d1 >= d2 ) {\r\n      this.minDate =  {day: d1.getUTCDate(), month: (d1.getUTCMonth() + 1), year: d1.getFullYear()};\r\n    } else {\r\n      this.minDate = {day: d2.getUTCDate(), month: (d2.getUTCMonth() + 1), year: d2.getFullYear()};\r\n    }\r\n  }\r\n\r\n  reset(field) {\r\n    this.eliminazioneForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.eliminazioneForm.valid) {\r\n      this.showSpinner();\r\n      const taskContoReq = this.buildTaskConto();\r\n      this.taskService.saveTaskConto(taskContoReq).pipe(\r\n          tap( res => {\r\n            this.eliminazioneForm.get('dataChiusura').setValue(res.dataChiusura);\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - onSubmit', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private buildTaskConto (): TaskConto {\r\n    return <TaskConto> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.DEL\r\n      },\r\n      dataChiusura: this.formatterUtils.dateToString(this.dataChiusura.value),\r\n      idContoOrig: this.conto.id\r\n    };\r\n  }\r\n\r\n  getDataChiusuraValue() {\r\n    return  this.eliminazioneForm.get('dataChiusura').value;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9jb250aS9tb2RpZmljYS1jb250by9tb2RpZmljYS1jb250by5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractContiComponent} from '../abstract-conti.component';\r\nimport {Conto, TipoConto} from '../../../../models/conto';\r\nimport {GetPartiesResponse, Party, TipoParty} from '../../../../models/party';\r\nimport {Button, InfoPanelElement, InfoPanelModel} from '../../../../models/info-panel-model';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PartyService} from '../../../../services/party.service';\r\nimport {FilialeService} from '../../../../services/filiale.service';\r\nimport {ContoService} from '../../../../services/conto.service';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\r\nimport {RSQLUtils} from '../../../../utilities/rsqlUtil';\r\nimport {Utils} from '../../../../utilities/util';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {catchError, filter, mergeMap, switchMap, tap, toArray} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {TaskConto, TaskParty} from '../../../../models/task';\r\nimport {IDatepickerModel} from 'scam-bdi-uikit/lib/daterangepicker/interfaces';\r\nimport { get} from 'lodash';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {TipoFlagEnum, TipoOperazioneEnum} from '../../../../models/enum';\r\n\r\n@Component({\r\n  selector: 'app-modifica-conto',\r\n  templateUrl: './modifica-conto.component.html',\r\n  styleUrls: ['./modifica-conto.component.scss']\r\n})\r\nexport class ModificaContoComponent extends  AbstractContiComponent implements OnInit {\r\n\r\n  party: Party;\r\n  conto: Conto;\r\n  modificaForm: FormGroup;\r\n  minDateDA: IDatepickerModel;\r\n  minDateVF: IDatepickerModel;\r\n  enableModificatoriBIL: boolean = false;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected partyService: PartyService,\r\n      protected filialeService: FilialeService,\r\n      protected contoService: ContoService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private rSQLUtils: RSQLUtils,\r\n      private utils: Utils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute,\r\n      private taskService: TaskService\r\n  ) {\r\n    super(partyService, filialeService, contoService, securityService, userService, formatterUtils, routingService, route);\r\n    this.utils = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkUserSpi();\r\n    if (!this.userIsSpi) {\r\n      this.checkUserBil();\r\n    }\r\n    this.route.queryParams.subscribe(params => {\r\n      const modifyContoSessionObj = this.getSession(this.routingService.CONTO_MODIFY);\r\n      if (!!modifyContoSessionObj) {\r\n        this.loadSections(modifyContoSessionObj.idConto);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(modifyContoSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadSections (idConto: string) {\r\n    this.showSpinner();\r\n    this.buildCombo();\r\n\r\n    this.contoService.getConto(idConto).pipe(\r\n        tap(res => this.conto = <Conto>res),\r\n        tap( res =>  this.buildForm()),\r\n        switchMap(res => this.partyService.getPartyByBicAndTipo(this.conto.bicParty, this.conto.tipoParty)),\r\n        tap ( res => { this.party = res; }),\r\n        tap( res => {\r\n          if (!!this.party) {\r\n            this.buildPartySection();\r\n          }\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildPartySection() {\r\n    if (!!this.party) {\r\n      const dap = new Date(this.party.dataApertura);\r\n      this.minDateDA =  {day: dap.getUTCDate(), month: (dap.getUTCMonth() + 1), year: dap.getFullYear()};\r\n      const data = [\r\n        [this.buildInfoPanelElement('Party Bic', 'string', this.party, 'bic'), this.buildInfoPanelElement('Tipo Party', 'string', this.party, 'tipoParty.descrizione')],\r\n        [this.buildInfoPanelElement('Nome Party', 'string', this.party, 'nome'), this.buildInfoPanelElement('Indicatore di Residenza', 'string', this.party, 'indicatoreResidenza')],\r\n        [this.buildInfoPanelElement('Categoria Economica', 'string', this.party, 'categoriaEconomica'), this.buildInfoPanelElement('Data Apertura Party', 'date', this.party, 'dataApertura')],\r\n        [this.buildInfoPanelElement('Data Chiusura Party', 'date', this.party, 'dataChiusura')],\r\n      ];\r\n\r\n      this.infoPanelPartyModel = <InfoPanelModel> {\r\n        columnNumber: 2,\r\n        data: data\r\n      };\r\n    }\r\n  }\r\n\r\n  private buildForm() {\r\n    const da = new Date(this.conto.dataApertura);\r\n    const dc = new Date(this.conto.dataChiusura);\r\n    const vf = new Date(this.conto.validFrom);\r\n    vf.setDate(vf.getDate() + 1);\r\n    this.minDateVF =  {day: vf.getUTCDate(), month: (vf.getUTCMonth() + 1), year: vf.getFullYear()};\r\n    this.modificaForm = this.formBuilder.group({\r\n      bicConto:  new FormControl(this.conto.bic,   []),\r\n      tipoConto: new FormControl(this.conto.tipoConto.codice,   []),\r\n      targetService: new FormControl(this.conto.targetService,   [Validators.required]),\r\n      descrizione: new FormControl(this.conto.descrizione,    [Validators.required]),\r\n      numeroConto: new FormControl(this.conto.numeroConto,   [Validators.required]),\r\n      abi: new FormControl(this.conto.abi,   [Validators.required]),\r\n      mcaDefFlag: new FormControl(this.formatterUtils.getBooleanAsString(this.conto, 'mcaDefFlag'),   [this.defaultMCAValueValidator.bind(this)]),\r\n      pressoBdi: new FormControl(this.formatterUtils.getBooleanAsString(this.conto, 'pressoBdi'),   [Validators.required]),\r\n      flgMan: new FormControl(this.formatterUtils.getBooleanAsString(this.conto, 'flgMan'),   [Validators.required]),\r\n      indicatoreResidenza: new FormControl(this.conto.indicatoreResidenza,   [this.bilValidator.bind(this)]),\r\n      categoriaEconomica: new FormControl(this.conto.categoriaEconomica,   [this.bilValidator.bind(this)]),\r\n      dataApertura: new FormControl( {year: da.getFullYear(), month: (da.getUTCMonth() + 1), day: da.getUTCDate()} , [Validators.required]),\r\n      dataChiusura: new FormControl(  {year: dc.getFullYear(), month: (dc.getUTCMonth() + 1), day: dc.getUTCDate()} , [this.dateValueValidator.bind(this)]),\r\n      checkedbicConto:  new FormControl(false,   []),\r\n      checkedtipoConto: new FormControl(false,   []),\r\n      checkedtargetService: new FormControl(false,   []),\r\n      checkeddescrizione: new FormControl(false,   []),\r\n      checkednumeroConto: new FormControl(false,   []),\r\n      checkedabi: new FormControl(false,   []),\r\n      checkedmcaDefFlag: new FormControl(false,   []),\r\n      checkedpressoBdi: new FormControl(false,   []),\r\n      checkedflgMan: new FormControl(false,   []),\r\n      checkedindicatoreResidenza: new FormControl(false,   []),\r\n      checkedcategoriaEconomica: new FormControl(false,   []),\r\n      checkeddataApertura: new FormControl(false,   []),\r\n      checkeddataChiusura: new FormControl(false,   []),\r\n      dataInizioValidita: new FormControl(  null ,  [])\r\n    });\r\n\r\n    this.flgMan.valueChanges.subscribe(\r\n        () => {\r\n          this.categoriaEconomica.updateValueAndValidity();\r\n          this.indicatoreResidenza.updateValueAndValidity();\r\n        }\r\n    );\r\n\r\n    this.checkedflgMan.valueChanges.subscribe(\r\n        () => {\r\n          this.categoriaEconomica.updateValueAndValidity();\r\n          this.indicatoreResidenza.updateValueAndValidity();\r\n        }\r\n    );\r\n\r\n    if (!!this.userIsBil && !!this.conto.flgMan) {\r\n      this.enableModificatoriBIL = true;\r\n    }\r\n  }\r\n\r\n  bic11Validator (control: FormControl): {[s: string]: boolean } {\r\n    const bicRegex = new RegExp('^([a-zA-Z]){6}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$');\r\n    if (    !!control &&\r\n        !!control.value &&\r\n        !bicRegex.test(control.value)\r\n    ) {\r\n      return {'syntax': true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  bilValidator (control: FormControl): {[s: string]: boolean } {\r\n    if (\r\n        !!this.modificaForm &&\r\n        this.checkBilValidator() &&\r\n        (!control ||\r\n            !control.value)\r\n    ) {\r\n      return {'value': true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private checkBilValidator() {\r\n    const flg =  this.flgMan.value;\r\n    if (!!this.userIsBil &&\r\n        (!!this.formatterUtils.getStringAsBoolean(flg) || (typeof flg === 'boolean' && !!flg))\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n\r\n  }\r\n\r\n  defaultMCAValueValidator (control: FormControl): {[s: string]: boolean } {\r\n    if (  !!this.modificaForm &&\r\n        this.checkTipoConto() &&\r\n        !this.modificaForm.get('mcaDefFlag').value  ) {\r\n      return {'value': true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  dateValueValidator (control: FormControl): {[s: string]: boolean } {\r\n    if (  !!this.modificaForm &&\r\n        !!this.modificaForm.get('dataApertura').value &&\r\n        !!this.modificaForm.get('dataChiusura').value ) {\r\n      const d1 = new Date(this.formatterUtils.dateToString(this.modificaForm.get('dataApertura').value));\r\n      const d2 = new Date(this.formatterUtils.dateToString(this.modificaForm.get('dataChiusura').value));\r\n      if ( d1 > d2 ) {\r\n        return {'value': true};\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get bicConto() { return this.modificaForm.get('bicConto'); }\r\n  get tipoConto() { return this.modificaForm.get('tipoConto'); }\r\n  get targetService() { return this.modificaForm.get('targetService'); }\r\n  get descrizione() { return this.modificaForm.get('descrizione'); }\r\n  get numeroConto() { return this.modificaForm.get('numeroConto'); }\r\n  get abi() { return this.modificaForm.get('abi'); }\r\n  get mcaDefFlag() { return this.modificaForm.get('mcaDefFlag'); }\r\n  get pressoBdi() { return this.modificaForm.get('pressoBdi'); }\r\n  get flgMan() { return this.modificaForm.get('flgMan'); }\r\n  get indicatoreResidenza() { return this.modificaForm.get('indicatoreResidenza'); }\r\n  get categoriaEconomica() { return this.modificaForm.get('categoriaEconomica'); }\r\n  get dataApertura() { return this.modificaForm.get('dataApertura'); }\r\n  get dataChiusura() { return this.modificaForm.get('dataChiusura'); }\r\n  get checkedbicConto() { return this.modificaForm.get('checkedbicConto'); }\r\n  get checkedtipoConto() { return this.modificaForm.get('checkedtipoConto'); }\r\n  get checkedtargetService() { return this.modificaForm.get('checkedtargetService'); }\r\n  get checkeddescrizione() { return this.modificaForm.get('checkeddescrizione'); }\r\n  get checkednumeroConto() { return this.modificaForm.get('checkednumeroConto'); }\r\n  get checkedabi() { return this.modificaForm.get('checkedabi'); }\r\n  get checkedmcaDefFlag() { return this.modificaForm.get('checkedmcaDefFlag'); }\r\n  get checkedpressoBdi() { return this.modificaForm.get('checkedpressoBdi'); }\r\n  get checkedflgMan() { return this.modificaForm.get('checkedflgMan'); }\r\n  get checkedindicatoreResidenza() { return this.modificaForm.get('checkedindicatoreResidenza'); }\r\n  get checkedcategoriaEconomica() { return this.modificaForm.get('checkedcategoriaEconomica'); }\r\n  get checkeddataApertura() { return this.modificaForm.get('checkeddataApertura'); }\r\n  get checkeddataChiusura() { return this.modificaForm.get('checkeddataChiusura'); }\r\n  get dataInizioValidita() { return this.modificaForm.get('dataInizioValidita'); }\r\n\r\n  checkTipoConto(): boolean {\r\n    return (this.tipoConto.value == 'CLM_MCA' || this.tipoConto.value == 'CLM_CB');\r\n  }\r\n\r\n  reset(field) {\r\n    this.modificaForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  manageCheckBox(field: string, type?: string) {\r\n\r\n    if (this.modificaForm.get('checked'.concat(field)).value) {\r\n      let val = get(this.conto, field);\r\n      if (!!type && type == 'date') {\r\n        val = this.formatterUtils.getValueForDateinDatePickerFormat(val);\r\n      }\r\n      this.modificaForm.get(field).setValue(val);\r\n    } else {\r\n      //this.modificaForm.get(field).setValue(null);\r\n    }\r\n  }\r\n\r\n  setTargetService() {\r\n    this.modificaForm.get('targetService').setValue(this.tipiConto.find( t => t.codice == this.tipoConto.value).targetService);\r\n  }\r\n\r\n  manageFlagInserimentoForBil(field: string) {\r\n    this.manageCheckBox(field);\r\n    this.checkenableModificatoriBIL();\r\n  }\r\n\r\n  checkenableModificatoriBIL() {\r\n  if (this.checkBilValidator()) {\r\n      this.enableModificatoriBIL = true;\r\n    } else {\r\n      this.enableModificatoriBIL = false;\r\n      this.manageCheckBox('indicatoreResidenza');\r\n      this.modificaForm.get('checkedindicatoreResidenza').setValue(false);\r\n      this.manageCheckBox('categoriaEconomica');\r\n      this.modificaForm.get('checkedcategoriaEconomica').setValue(false);\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.modificaForm.valid) {\r\n      this.showSpinner();\r\n      const taskconto = this.buildTaskConto();\r\n      this.taskService.saveTaskConto(taskconto).pipe(\r\n          switchMap(res => this.contoService.getConto( String(res.idContoOrig))),\r\n          tap( res => {\r\n            if (!!res) {\r\n              this.conto.flgMan = res.flgMan;\r\n              this.conto.indicatoreResidenza = res.indicatoreResidenza;\r\n              this.modificaForm.get('indicatoreResidenza').setValue(this.conto.indicatoreResidenza);\r\n              this.conto.categoriaEconomica = res.categoriaEconomica;\r\n              this.modificaForm.get('categoriaEconomica').setValue(this.conto.categoriaEconomica);\r\n              this.conto.dataApertura = res.dataApertura\r\n              this.conto.validFrom = res.validFrom;\r\n              const d = new Date(res.dataChiusura);\r\n              this.modificaForm.get('dataChiusura').setValue({year: d.getFullYear(), month: d.getUTCMonth(), day: d.getUTCDate()});\r\n            }\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - saveTaskConto', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    } else {\r\n      this.getFormValidationErrors();\r\n    }\r\n  }\r\n\r\n  private buildTaskConto (): TaskConto {\r\n\r\n    return <TaskConto> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.UPD\r\n      },\r\n\r\n      bic: this.bicConto.value,\r\n      tipoConto: {\r\n        codice: this.tipoConto.value\r\n      },\r\n      targetService: this.targetService.value,\r\n      numeroConto: this.numeroConto.value,\r\n      descrizione: this.descrizione.value,\r\n      abi: this.abi.value,\r\n      mcaDefFlag: (!!this.mcaDefFlag.value ? ((this.mcaDefFlag.value == TipoFlagEnum.SI) ? true : false) : null),\r\n      flgMan: (!!this.flgMan.value ? ((this.flgMan.value == TipoFlagEnum.SI) ? true : false) : null),\r\n      pressoBdi: (!!this.pressoBdi.value ? ((this.pressoBdi.value == TipoFlagEnum.SI) ? true : false) : null),\r\n      categoriaEconomica: (!!this.checkedcategoriaEconomica.value ? this.categoriaEconomica.value : null),\r\n      indicatoreResidenza: (!!this.checkedindicatoreResidenza.value ? this.indicatoreResidenza.value : null),\r\n      dataApertura: this.formatterUtils.dateToString(this.dataApertura.value),\r\n      dataChiusura: this.formatterUtils.dateToString((!!this.dataChiusura.value ? this.dataChiusura.value : {year: 9999, month: 12, day: 31})),\r\n      validFrom: (!!this.dataInizioValidita.value ? this.formatterUtils.dateToString(this.dataInizioValidita.value) : null),\r\n\r\n      abiToEdit: this.checkedabi.value,\r\n      //bicPartyToEdit: false,\r\n      //bicToEdit: this.checkedbicConto.value,\r\n      categoriaEconomicaToEdit: this.checkedcategoriaEconomica.value,\r\n      dataAperturaToEdit: this.checkeddataApertura.value,\r\n      //dataChiusuraToEdit: this.checkeddataChiusura.value,\r\n      descrizioneToEdit: this.checkeddescrizione.value,\r\n      flgManToEdit: this.checkedflgMan.value,\r\n      indicatoreResidenzaToEdit: this.checkedindicatoreResidenza.value,\r\n      mcaDefFlagToEdit: this.checkedmcaDefFlag.value,\r\n      numeroContoToEdit: this.checkednumeroConto.value,\r\n      pressoBdiToEdit: this.checkedpressoBdi.value,\r\n      subBicPtyAnsyToEdit: false,\r\n      subParBicDcaToEdit: false,\r\n      subParTsDcaToEdit: false,\r\n      subTipoPtyAnsyToEdit: false,\r\n      subTipoSfruttAnsyToEdit: false,\r\n      //targetServiceToEdit: this.checkedtargetService.value,\r\n      tipoContoToEdit: this.checkedtipoConto.value,\r\n      tipoPartyToEdit: false,\r\n      /*tsModificaToEdit: false,\r\n      utenteRichiestaToEdit: false,\r\n      utenteValidazioneToEdit: false,\r\n      validFromToEdit: (!!this.dataInizioValidita.value ? true : false),\r\n      validToToEdit: false*/\r\n\r\n      idContoOrig: this.conto.id\r\n    };\r\n  }\r\n\r\n  getSelectValue( list: any, field: any) {\r\n    return list.find( t => t.codice == field).descrizione;\r\n  }\r\n\r\n  getSelectValueFlgMan( list: any, field: any) {\r\n    return list.find( t => t.codice == field).descrizione;\r\n  }\r\n\r\n  getDataAperturaValue() {\r\n    return this.conto.dataApertura;\r\n  }\r\n\r\n  getDataChiusuraValue() {\r\n    return this.conto.dataChiusura;\r\n  }\r\n\r\n  getDataInizioValiditaValue() {\r\n    return this.conto.validFrom;\r\n  }\r\n\r\n  getFormValidationErrors() {\r\n    Object.keys(this.modificaForm.controls).forEach(key => {\r\n\r\n      const controlErrors: ValidationErrors = this.modificaForm.get(key).errors;\r\n      if (controlErrors != null) {\r\n        Object.keys(controlErrors).forEach(keyError => {\r\n          console.log('Key control: ' + key + ', keyError: ' + keyError + ', err value: ', controlErrors[keyError]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}