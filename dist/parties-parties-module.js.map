{"version":3,"sources":["./src/app/views/anagrafiche/parties/eliminazione-logica-party/eliminazione-logica-party.component.html","./src/app/views/anagrafiche/parties/inserimento-party/inserimento-party.component.html","./src/app/views/anagrafiche/parties/modifica-party/modifica-party.component.html","./src/app/services/infostat.service.ts","./src/app/views/anagrafiche/parties/eliminazione-logica-party/eliminazione-logica-party.component.scss","./src/app/views/anagrafiche/parties/eliminazione-logica-party/eliminazione-logica-party.component.ts","./src/app/views/anagrafiche/parties/inserimento-party/inserimento-party.component.ts","./src/app/views/anagrafiche/parties/modifica-party/modifica-party.component.scss","./src/app/views/anagrafiche/parties/modifica-party/modifica-party.component.ts","./src/app/views/anagrafiche/parties/parties-routing.module.ts","./src/app/views/anagrafiche/parties/parties.module.ts"],"names":[],"mappings":"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","file":"parties-parties-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-times-circle\\\"></i> Chiusura Party </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" *ngIf=\\\"!isActive\\\">\\r\\n                    Il party non risulta attivo e non può essere modificato.\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"eliminazioneForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">BIC: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"bic\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.bic\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"tipo\\\" class=\\\"col-2 col-form-label\\\">Tipo: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"tipo\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.tipoParty.descrizione\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nome\\\" class=\\\"col-2 col-form-label\\\">Nome: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"nome\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.nome\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">ABI: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"abi\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.defaultAbi\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"filiale\\\" class=\\\"col-2 col-form-label\\\">Filiale: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"filiale\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.filialeRiferimento.descrizione\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"mfiCode\\\" class=\\\"col-2 col-form-label\\\">MFI Code: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"mfiCode\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.mfiCode\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"indResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"indResidenza\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.indicatoreResidenza\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"catEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Ecnomica: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"catEconomica\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.categoriaEconomica\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataApertura\\\" class=\\\"col-2 col-form-label\\\">Data Apertura: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"dataApertura\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.dataApertura\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"dataChiusura\\\" class=\\\"col-2 col-form-label\\\">Data Chiusura<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else dataChiusuraT\\\">\\r\\n                                <input id=\\\"dataChiusura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusura.invalid  && (form.submitted || (dataChiusura.dirty || dataChiusura.touched))\\\"placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusura\\\"  bdiDatepicker #datepickerDIV=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIV.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!!dataChiusura.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataChiusura.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataChiusura.errors?.dateformat  && (dataChiusura.dirty || dataChiusura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataChiusura.errors?.mindate  && (dataChiusura.dirty || dataChiusura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Data inferiore al limite inferiore consentito ({{minDateField}}): {{formatterUtils.dateToString(minDate)}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #dataChiusuraT>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataChiusuraValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataInizioValidita\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"dataInizioValidita\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"party.validFrom\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-plus-square\\\"></i> Nuovo Party </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"inserimentoForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">Bic<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"bic\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bic.invalid && form.submitted\\\" formControlName=\\\"bic\\\" maxlength=\\\"11\\\" [pattern]=\\\"'^[a-zA-Z0-9]+$'\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                            <div *ngIf=\\\"bic.errors?.required\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"bic.errors?.syntax && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo non valido\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"tipo\\\" class=\\\"col-2 col-form-label\\\">Tipo Party<span>*</span>:</label>\\r\\n\\r\\n                        <div class=\\\"col-4\\\" >\\r\\n                            <select *ngIf=\\\"!readonlyForm; else inputTipo\\\" id=\\\"tipo\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipo.invalid && form.submitted\\\" formControlName=\\\"tipo\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of tipiParty\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"tipo.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputTipo>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getTipoValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nome\\\" class=\\\"col-2 col-form-label\\\">Nome<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"nome\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nome.invalid && form.submitted\\\" formControlName=\\\"nome\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                            <div *ngIf=\\\"nome.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && form.submitted\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^([0-9]){5}$'\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                            <div *ngIf=\\\"abi.errors?.pattern && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo non valido\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"abi.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"filiale\\\" class=\\\"col-2 col-form-label\\\">Filiale<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select *ngIf=\\\"!readonlyForm; else inputFiliale\\\" id=\\\"filiale\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"filiale.invalid && form.submitted\\\" formControlName=\\\"filiale\\\" >\\r\\n                                <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let f of filialiRiferimento\\\" [value]=\\\"f.codice\\\">{{f.sigla}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"filiale.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputFiliale>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getFilialeValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <label for=\\\"mfiCode\\\" class=\\\"col-2 col-form-label\\\">MFI Code<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"mfiCode\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"mfiCode.invalid && form.submitted\\\" formControlName=\\\"mfiCode\\\" maxlength=\\\"160\\\" [pattern]=\\\"'^[a-zA-Z0-9]+$'\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                            <div *ngIf=\\\"mfiCode.errors?.pattern && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo non valido\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"mfiCode.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"indResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"indResidenza\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"indResidenza.invalid && (indResidenza.dirty || indResidenza.touched)\\\" formControlName=\\\"indResidenza\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"catEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Economica:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"catEconomica\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"catEconomica.invalid && (catEconomica.dirty || catEconomica.touched)\\\" formControlName=\\\"catEconomica\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataApertura\\\" class=\\\"col-2 col-form-label\\\">Data Apertura<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputDataApertura\\\">\\r\\n                                <input id=\\\"dataApertura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataApertura.invalid && (form.submitted || (dataApertura.dirty || dataApertura.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataApertura\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataApertura.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataApertura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"dataApertura.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataApertura.errors?.dateformat && (dataApertura.dirty || dataApertura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataApertura.errors?.daterange && (dataApertura.dirty || dataApertura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputDataApertura>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataAperturaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <label for=\\\"dataChiusura\\\" class=\\\"col-2 col-form-label\\\">Data Chiusura:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputDataChiusura\\\">\\r\\n                                <input id=\\\"dataChiusura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusura.invalid && (form.submitted || (dataChiusura.dirty || dataChiusura.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusura\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataChiusura.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataChiusura.errors?.dateformat  && (dataChiusura.dirty || dataChiusura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataChiusura.errors?.daterange  && (dataChiusura.dirty || dataChiusura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataChiusura.errors?.mindate  && (dataChiusura.dirty || dataChiusura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Data inferiore al limite inferiore consentito (data odierna): {{formatterUtils.dateToString(minDate)}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputDataChiusura>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataChiusuraValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\" *ngIf=\\\"!readonlyForm\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\">Salva</button>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\" *ngIf=\\\"readonlyForm\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"resetForm()\\\">Nuovo Inserimento</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #mfiModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Attenzione!</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <p>Il codice MFI inserito non è stato riscontrato su Infostat.<br/>\\r\\n            Procedere comunque con l'inserimento?</p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirmModal()\\\">OK</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-edit\\\"></i> Modifica Party </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" *ngIf=\\\"!isActive\\\">\\r\\n                    Il party non risulta attivo e non può essere modificato.\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"modificaForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">Bic<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <input id=\\\"bic\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bic.invalid && form.submitted\\\" formControlName=\\\"bic\\\" maxlength=\\\"11\\\" [pattern]=\\\"'^[a-zA-Z0-9]+$'\\\" [readOnly]=\\\"!checkedbic.value || readonlyForm\\\"/>\\r\\n                            <div *ngIf=\\\"bic.errors?.required\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"bic.errors?.syntax && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo non valido\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedbic\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedbic\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedbic\\\"  [attr.disabled]=\\\"true\\\">\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"tipo\\\" class=\\\"col-2 col-form-label\\\">Tipo Party<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <select *ngIf=\\\"(checkedtipo.value && !readonlyForm); else inputTipo\\\" id=\\\"tipo\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipo.invalid && form.submitted\\\" formControlName=\\\"tipo\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of tipiParty\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"tipo.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputTipo>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getTipoValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedtipo\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedtipo\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedtipo\\\" [attr.disabled]=\\\"true\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nome\\\" class=\\\"col-2 col-form-label\\\">Nome<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <input id=\\\"nome\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nome.invalid && form.submitted\\\" formControlName=\\\"nome\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"!checkednome.value || readonlyForm\\\"/>\\r\\n                            <div *ngIf=\\\"nome.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkednome\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkednome\\\" type=\\\"checkbox\\\" formControlName=\\\"checkednome\\\" (click)=\\\"manageCheckBox('nome')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"defaultAbi.invalid && form.submitted\\\" formControlName=\\\"defaultAbi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^([0-9]){5}$'\\\" [readOnly]=\\\"!checkeddefaultAbi.value || readonlyForm\\\"/>\\r\\n                            <div *ngIf=\\\"defaultAbi.errors?.pattern && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo non valido\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"defaultAbi.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkeddefaultAbi\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddefaultAbi\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddefaultAbi\\\" (click)=\\\"manageCheckBox('defaultAbi')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"filiale\\\" class=\\\"col-2 col-form-label\\\">Filiale<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <select *ngIf=\\\"(checkedfiliale.value &&!readonlyForm); else inputFiliale\\\" id=\\\"filiale\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"filiale.invalid && form.submitted\\\" formControlName=\\\"filiale\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let f of filialiRiferimento\\\" [value]=\\\"f.codice\\\">{{f.sigla}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"filiale.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputFiliale>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getFilialeValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedfiliale\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedfiliale\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedfiliale\\\" (click)=\\\"manageCheckBox('filialeRiferimento')\\\" >\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"mfiCode\\\" class=\\\"col-2 col-form-label\\\">MFI Code<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <input id=\\\"mfiCode\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"mfiCode.invalid && form.submitted\\\" formControlName=\\\"mfiCode\\\" maxlength=\\\"160\\\" [pattern]=\\\"'^[a-zA-Z0-9]+$'\\\" [readOnly]=\\\"!checkedmfiCode.value || readonlyForm\\\"/>\\r\\n                            <div *ngIf=\\\"mfiCode.errors?.pattern && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo non valido\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"mfiCode.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedmfiCode\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedmfiCode\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedmfiCode\\\" (click)=\\\"manageCheckBox('mfiCode')\\\">\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"indicatoreResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <input id=\\\"indicatoreResidenza\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"indicatoreResidenza.invalid && (indicatoreResidenza.dirty || indicatoreResidenza.touched)\\\" formControlName=\\\"indicatoreResidenza\\\" [readOnly]=\\\"!checkedindicatoreResidenza.value\\\"/>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedindicatoreResidenza\\\" class=\\\"ol-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedindicatoreResidenza\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedindicatoreResidenza\\\" [attr.disabled]=\\\"true\\\">\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"categoriaEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Economica:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <input id=\\\"categoriaEconomica\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"categoriaEconomica.invalid && (categoriaEconomica.dirty || categoriaEconomica.touched)\\\" formControlName=\\\"categoriaEconomica\\\" [readOnly]=\\\"!checkedcategoriaEconomica.value\\\"/>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedcategoriaEconomica\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedcategoriaEconomica\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedcategoriaEconomica\\\" [attr.disabled]=\\\"true\\\">\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataApertura\\\" class=\\\"col-2 col-form-label\\\">Data Apertura<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"(checkeddataApertura.value && !readonlyForm); else inputDataApertura\\\">\\r\\n                                <input id=\\\"dataApertura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataApertura.invalid && (form.submitted || (dataApertura.dirty || dataApertura.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataApertura\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [maxDate]=\\\"maxDate\\\"/>\\r\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataApertura.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataApertura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataApertura.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataApertura.errors?.maxdate  && (dataApertura.dirty || dataApertura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Data superiore al limite massimo consentito (data chiusura): {{formatterUtils.dateToString(maxDate)}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputDataApertura>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataAperturaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkeddataApertura\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddataApertura\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddataApertura\\\" (click)=\\\"manageCheckBox('dataApertura', 'date')\\\">\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"dataChiusura\\\" class=\\\"col-2 col-form-label\\\">Data Chiusura:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"(checkeddataChiusura.value && !readonlyForm); else inputDataChiusura\\\">\\r\\n                                <input id=\\\"dataChiusura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusura.invalid && form.submitted\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusura\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" readOnly=\\\"true\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataChiusura.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputDataChiusura>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataChiusuraValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkeddataChiusura\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddataChiusura\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddataChiusura\\\" [attr.disabled]=\\\"true\\\">\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n                        <label for=\\\"dataInizioValidita\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else dataInizioValiditaT\\\">\\r\\n                                <input id=\\\"dataInizioValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValidita.invalid && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValidita\\\"  bdiDatepicker #datepickerDIV=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\" [maxDate]=\\\"maxDate\\\"/>\\r\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIV.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <span class=\\\"input-group-text\\\">\\r\\n                                        <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!!dataInizioValidita.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <span class=\\\"input-group-text\\\">\\r\\n                                        <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.mindate  && (dataInizioValidita.dirty || dataInizioValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Data inferiore al limite inferiore consentito (data apertura): {{formatterUtils.dateToString(minDate)}}\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.maxdate  && (dataInizioValidita.dirty || dataInizioValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Data superiore al limite massimo consentito (data chiusura): {{formatterUtils.dateToString(maxDate)}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #dataInizioValiditaT>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataInizioValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\" >\\r\\n                        <div [innerHTML]=utils.getModificaMessage()></div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #mfiModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Attenzione!</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <p>Il codice MFI inserito non è stato riscontrato su Infostat.<br/>\\r\\n            Procedere comunque con la modifica?</p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirmModal()\\\">OK</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ConfigurationService} from './configuration.service';\r\nimport {Observable, of} from 'rxjs';\r\nimport {TipoParty} from '../models/party';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {MfiCode} from '../models/mfi-code';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InfostatService {\r\n\r\n  private apiEndpoint = '';\r\n\r\n  constructor(private http: HttpClient, private configurationService: ConfigurationService) {\r\n    this.configurationService.config$.subscribe(config => {\r\n      this.apiEndpoint = config.gepaAnagraficheU2AEndpoint;\r\n    });\r\n  }\r\n\r\n  getInfostatValue(mfiCode: string): Observable<MfiCode> {\r\n    return this.http.get<MfiCode>(`${this.apiEndpoint}/soggettiInfostat/${mfiCode}`).pipe();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9wYXJ0aWVzL2VsaW1pbmF6aW9uZS1sb2dpY2EtcGFydHkvZWxpbWluYXppb25lLWxvZ2ljYS1wYXJ0eS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractPartyComponent} from '../abstract-party.component';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {IDatepickerModel} from 'scam-bdi-uikit/lib/daterangepicker/interfaces';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PartyService} from '../../../../services/party.service';\r\nimport {FilialeService} from '../../../../services/filiale.service';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {InfostatService} from '../../../../services/infostat.service';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {Party, TipoParty} from '../../../../models/party';\r\nimport {TaskParty} from '../../../../models/task';\r\nimport {TipoOperazioneEnum} from '../../../../models/enum';\r\nimport {FilialeRiferimento} from '../../../../models/filiale';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\n\r\n@Component({\r\n  selector: 'app-eliminazione-logica-party',\r\n  templateUrl: './eliminazione-logica-party.component.html',\r\n  styleUrls: ['./eliminazione-logica-party.component.scss']\r\n})\r\nexport class EliminazioneLogicaPartyComponent extends AbstractPartyComponent implements OnInit {\r\n\r\n  party: Party;\r\n  minDate: IDatepickerModel;\r\n  minDateField: string;\r\n\r\n  eliminazioneForm: FormGroup;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected partyService: PartyService,\r\n      protected filialeService: FilialeService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private taskService: TaskService,\r\n      private infostatService: InfostatService,\r\n      private modalService: ModalService,\r\n      protected route: ActivatedRoute,\r\n      protected routingService: RoutingService\r\n  ) {\r\n    super(partyService, filialeService, securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const deletePartySessionObj = this.getSession(this.routingService.PARTY_DELETE);\r\n      if (!!deletePartySessionObj) {\r\n        this.load(deletePartySessionObj.idParty);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(deletePartySessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private load (idParty: string) {\r\n    this.showSpinner();\r\n\r\n    this.partyService.getParty(idParty).pipe(\r\n        tap( res => {\r\n          this.party = res;\r\n          this.setMinDate();\r\n          this.isActive = this.isPartyActive(this.party);\r\n          const dc = new Date(this.party.dataChiusura);\r\n          this.eliminazioneForm = this.formBuilder.group({\r\n            dataChiusura: new FormControl(  {year: dc.getFullYear(), month: (dc.getUTCMonth() + 1), day: dc.getUTCDate()} , [Validators.required]),\r\n          }, { validator: dateValidator( [\r\n              {field1: 'dataChiusura', minDate1: this.minDate}\r\n            ]) });\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadParty', error);\r\n          this.setError(error);\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  get dataChiusura() { return this.eliminazioneForm.get('dataChiusura'); }\r\n\r\n  setMinDate() {\r\n    const d1 = new Date(this.party.dataApertura);\r\n    d1.setDate(d1.getDate() + 1);\r\n    const d2 = new Date(this.party.validFrom);\r\n    /*if (d1 >= d2 ) {\r\n      this.minDate =  {day: d1.getUTCDate(), month: (d1.getUTCMonth() + 1), year: d1.getFullYear()};\r\n      this.minDateField = 'data apertura';\r\n    } else {\r\n      this.minDate = {day: d2.getUTCDate(), month: (d2.getUTCMonth() + 1), year: d2.getFullYear()};\r\n      this.minDateField = 'data inizio validità';\r\n    }*/\r\n    //Poichè la data inizio validità deve essere sempre >= della data apertura allora vale il seguente\r\n    this.minDate = {day: d2.getUTCDate(), month: (d2.getUTCMonth() + 1), year: d2.getFullYear()};\r\n    this.minDateField = 'data inizio validità';\r\n  }\r\n\r\n  reset(field) {\r\n    this.eliminazioneForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.eliminazioneForm.valid) {\r\n      this.showSpinner();\r\n      const taskPartyReq = this.buildTaskParty();\r\n      this.taskService.saveTaskParty(taskPartyReq).pipe(\r\n          tap( res => {\r\n            this.eliminazioneForm.get('dataChiusura').setValue(res.dataChiusura);\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - onSubmit', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private buildTaskParty (): TaskParty {\r\n    return <TaskParty> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.DEL\r\n      },\r\n      dataChiusura: this.formatterUtils.dateToString(this.dataChiusura.value),\r\n      idPartyOrig: this.party.id\r\n    };\r\n  }\r\n\r\n  getDataChiusuraValue() {\r\n    return  this.eliminazioneForm.get('dataChiusura').value;\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {PartyService} from '../../../../services/party.service';\r\nimport {FilialeService} from '../../../../services/filiale.service';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {AbstractPartyComponent} from '../abstract-party.component';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {Task, TaskParty} from '../../../../models/task';\r\nimport {TipoOperazioneEnum} from '../../../../models/enum';\r\nimport {InfostatService} from '../../../../services/infostat.service';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {IDatepickerModel} from 'scam-bdi-uikit/lib/daterangepicker/interfaces';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\n\r\n@Component({\r\n  selector: 'app-inserimento-party',\r\n  templateUrl: './inserimento-party.component.html',\r\n  // styleUrls: ['./inserimento-party.component.scss']\r\n})\r\nexport class InserimentoPartyComponent extends AbstractPartyComponent implements OnInit {\r\n\r\n  @ViewChild('mfiModal', { static: false })\r\n  mfiModal: TemplateRef<any>;\r\n\r\n  private mfiModalReference: any;\r\n\r\n  inserimentoForm: FormGroup;\r\n  minDate: IDatepickerModel;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected partyService: PartyService,\r\n      protected filialeService: FilialeService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private taskService: TaskService,\r\n      private infostatService: InfostatService,\r\n      private modalService: ModalService,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(partyService, filialeService, securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      const insertPartySessionObj = this.getSession(this.routingService.PARTY_INSERT);\r\n      if (!!insertPartySessionObj) {\r\n        this.backUrl = this.routingService.getRouteByKey(insertPartySessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n    super.ngOnInit();\r\n    this.buildForm();\r\n  }\r\n\r\n  private buildForm() {\r\n    const today = new Date();\r\n    this.minDate =  {day: today.getUTCDate(), month: (today.getUTCMonth() + 1), year: today.getFullYear()};\r\n    this.inserimentoForm = this.formBuilder.group({\r\n      bic:  new FormControl(null,   [Validators.required, this.bic11Validator.bind(this)]),\r\n      tipo: new FormControl(null,   [Validators.required]),\r\n      nome: new FormControl(null,   [Validators.required]),\r\n      abi: new FormControl(null,    [Validators.required]),\r\n      filiale: new FormControl(null,   [Validators.required]),\r\n      mfiCode: new FormControl(null,   [Validators.required]),\r\n      indResidenza: new FormControl(null,   []),\r\n      catEconomica: new FormControl(null,   []),\r\n      dataApertura: new FormControl(null, [Validators.required]),\r\n      dataChiusura: new FormControl(null, [])\r\n    }, { validator: dateValidator( [\r\n        {field1: 'dataApertura', field2: 'dataChiusura', minDate2: this.minDate}\r\n      ]) });\r\n  }\r\n\r\n  bic11Validator (control: FormControl): {[s: string]: boolean } {\r\n    const bicRegex = new RegExp('^([a-zA-Z]){6}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$');\r\n    if (    !!control &&\r\n        !!control.value &&\r\n        !bicRegex.test(control.value)\r\n    ) {\r\n      return {'syntax': true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get bic() { return this.inserimentoForm.get('bic'); }\r\n  get tipo() { return this.inserimentoForm.get('tipo'); }\r\n  get nome() { return this.inserimentoForm.get('nome'); }\r\n  get abi() { return this.inserimentoForm.get('abi'); }\r\n  get filiale() { return this.inserimentoForm.get('filiale'); }\r\n  get mfiCode() { return this.inserimentoForm.get('mfiCode'); }\r\n  get indResidenza() { return this.inserimentoForm.get('indResidenza'); }\r\n  get catEconomica() { return this.inserimentoForm.get('catEconomica'); }\r\n  get dataApertura() { return this.inserimentoForm.get('dataApertura'); }\r\n  get dataChiusura() { return this.inserimentoForm.get('dataChiusura'); }\r\n\r\n  reset(field) {\r\n    this.inserimentoForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.inserimentoForm.valid) {\r\n      this.showSpinner();\r\n      this.infostatService.getInfostatValue(this.mfiCode.value).pipe(\r\n          tap ( res => {\r\n            if (!!res) {\r\n              this.saveParty();\r\n            }  else {\r\n              this.openModal();\r\n            }\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - getInfostatValue', error);\r\n            this.hideSpinner();\r\n            this.openModal();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private openModal() {\r\n    this.mfiModalReference = this.modalService.open(this.mfiModal);\r\n  }\r\n\r\n  closeModal() {\r\n    this.mfiModalReference.close();\r\n  }\r\n\r\n  confirmModal() {\r\n    this.mfiModalReference.close();\r\n    this.saveParty();\r\n  }\r\n\r\n  private saveParty () {\r\n    const taskParty = this.buildTaskParty();\r\n    this.taskService.saveTaskParty(taskParty).pipe(\r\n        tap( res => {\r\n          const d = new Date(res.dataChiusura);\r\n          this.inserimentoForm.get('indResidenza').setValue(res.indicatoreResidenza);\r\n          this.inserimentoForm.get('catEconomica').setValue(res.categoriaEconomica);\r\n          this.inserimentoForm.get('dataChiusura').setValue({year: d.getFullYear(), month: d.getUTCMonth() + 1, day: d.getUTCDate()});\r\n          this.isResultOk = true;\r\n          this.hideSpinner();\r\n          this.readonlyForm = true;\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - saveParty', error);\r\n          this.setError(error);\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildTaskParty (): TaskParty {\r\n\r\n    return <TaskParty> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.INS\r\n      },\r\n      bic: this.bic.value,\r\n      tipoParty: {\r\n        codice: this.tipo.value\r\n      },\r\n      defaultAbi: this.abi.value,\r\n      nome: this.nome.value,\r\n      filialeRiferimento: {\r\n        codice: this.filiale.value,\r\n      },\r\n      mfiCode: this.mfiCode.value,\r\n      categoriaEconomica: this.catEconomica.value,\r\n      indicatoreResidenza: this.indResidenza.value,\r\n      dataApertura: this.formatterUtils.dateToString(this.dataApertura.value),\r\n      dataChiusura: this.formatterUtils.dateToString((!!this.dataChiusura.value ? this.dataChiusura.value : {year: 9999, month: 12, day: 31}))\r\n    };\r\n  }\r\n\r\n  resetForm() {\r\n    this.readonlyForm = false;\r\n    this.isResultOk = false;\r\n    this.buildForm();\r\n  }\r\n\r\n  getTipoValue(): string {\r\n    return this.tipiParty.find( t => t.codice == this.tipo.value).descrizione;\r\n  }\r\n\r\n  getFilialeValue(): string {\r\n    return this.filialiRiferimento.find( f => f.codice == this.filiale.value).descrizione;\r\n  }\r\n\r\n  getDataAperturaValue() {\r\n    return this.formatterUtils.dateToString(this.dataApertura.value);\r\n  }\r\n\r\n  getDataChiusuraValue() {\r\n    return this.formatterUtils.dateToString(this.dataChiusura.value);\r\n  }\r\n}\r\n","export default \".align-center {\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3ZpZXdzL2FuYWdyYWZpY2hlL3BhcnRpZXMvbW9kaWZpY2EtcGFydHkvQzpcXFVzZXJzXFxJU0MwNzRcXERvd25sb2Fkc1xcd2V0cmFuc2Zlcl9nZXBhLWNvbnRpLWxvcm8temlwXzIwMjItMDItMDFfMTMxMlxcd2ViYXBwXFxzcmNcXGFwcFxcY29tbW9uXFx0YWIvLi5cXC4uXFx2aWV3c1xcYW5hZ3JhZmljaGVcXHBhcnRpZXNcXG1vZGlmaWNhLXBhcnR5XFxtb2RpZmljYS1wYXJ0eS5jb21wb25lbnQuc2NzcyIsIi4uLy4uL3ZpZXdzL2FuYWdyYWZpY2hlL3BhcnRpZXMvbW9kaWZpY2EtcGFydHkvbW9kaWZpY2EtcGFydHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtFQUNBLHNCQUFBO0FDQ0YiLCJmaWxlIjoiLi4vLi4vdmlld3MvYW5hZ3JhZmljaGUvcGFydGllcy9tb2RpZmljYS1wYXJ0eS9tb2RpZmljYS1wYXJ0eS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGlnbi1jZW50ZXJ7XHJcbiAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xyXG59XHJcbiIsIi5hbGlnbi1jZW50ZXIge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59Il19 */\"","import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {AbstractPartyComponent} from '../abstract-party.component';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PartyService} from '../../../../services/party.service';\r\nimport {FilialeService} from '../../../../services/filiale.service';\r\nimport {SecurityService, UserService} from '../../../../services';\r\nimport {FilterUtils} from '../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../utilities/formatterUtils';\r\nimport {TaskService} from '../../../../services/task.service';\r\nimport {InfostatService} from '../../../../services/infostat.service';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {TaskParty} from '../../../../models/task';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {Party, TipoParty} from '../../../../models/party';\r\nimport {TipoOperazioneEnum} from '../../../../models/enum';\r\nimport { get} from 'lodash';\r\nimport {IDatepickerModel} from 'scam-bdi-uikit/lib/daterangepicker/interfaces';\r\nimport {FilialeRiferimento} from '../../../../models/filiale';\r\nimport {RoutingService} from '../../../../services/routing.service';\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {Utils} from \"../../../../utilities/util\";\r\n\r\n@Component({\r\n    selector: 'app-modifica-party',\r\n    templateUrl: './modifica-party.component.html',\r\n    styleUrls: ['./modifica-party.component.scss']\r\n})\r\nexport class ModificaPartyComponent extends AbstractPartyComponent implements OnInit {\r\n\r\n    @ViewChild('mfiModal', { static: false })\r\n    mfiModal: TemplateRef<any>;\r\n\r\n    private mfiModalReference: any;\r\n\r\n    modificaForm: FormGroup;\r\n    minDate: IDatepickerModel;\r\n    maxDate: IDatepickerModel;\r\n    party: Party;\r\n\r\n    constructor(\r\n        router: Router,\r\n        protected partyService: PartyService,\r\n        protected filialeService: FilialeService,\r\n        protected securityService: SecurityService,\r\n        protected userService: UserService,\r\n        private filterUtils: FilterUtils,\r\n        protected formatterUtils: FormatterUtils,\r\n        private formBuilder: FormBuilder,\r\n        private taskService: TaskService,\r\n        private infostatService: InfostatService,\r\n        private modalService: ModalService,\r\n        protected route: ActivatedRoute,\r\n        protected routingService: RoutingService,\r\n        private utils: Utils\r\n    ) {\r\n        super(partyService, filialeService, securityService, userService, formatterUtils, routingService, route);\r\n        this.utils = utils;\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.route.queryParams.subscribe(params => {\r\n            const modifyPartySessionObj = this.getSession(this.routingService.PARTY_MODIFY);\r\n            if (!!modifyPartySessionObj) {\r\n                this.load(modifyPartySessionObj.idParty);\r\n                this.backUrl = this.backUrl = this.routingService.getRouteByKey(modifyPartySessionObj.backUrl);\r\n            } else {\r\n                this.setError();\r\n            }\r\n        });\r\n    }\r\n\r\n    private load (idParty: string) {\r\n        this.showSpinner();\r\n        this.partyService.getParty(idParty).pipe(\r\n            tap( res => {\r\n                this.party = res;\r\n                this.isActive = this.isPartyActive(this.party);\r\n                if (!this.isActive) {\r\n                    this.readonlyForm = true;\r\n                }\r\n                this.buildForm();\r\n                this.hideSpinner();\r\n            }),\r\n            catchError((error) => {\r\n                console.log ('Error - loadParty', error);\r\n                this.setError(error);\r\n                this.hideSpinner();\r\n                return of(null);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    private buildForm() {\r\n        const da = new Date(this.party.dataApertura);\r\n        const dc = new Date(this.party.dataChiusura);\r\n        const vf = new Date(this.party.validFrom);\r\n        vf.setDate(vf.getDate() + 1);\r\n        this.minDate =  {day: vf.getUTCDate(), month: (vf.getUTCMonth() + 1), year: vf.getFullYear()};\r\n        this.maxDate = {day: dc.getUTCDate(), month: (dc.getUTCMonth() + 1), year: dc.getFullYear()};\r\n        this.modificaForm = this.formBuilder.group({\r\n            bic:  new FormControl(this.party.bic,   [Validators.required, this.bic11Validator.bind(this)]),\r\n            tipo: new FormControl(this.party.tipoParty.codice,   [Validators.required]),\r\n            nome: new FormControl(this.party.nome,   [Validators.required]),\r\n            defaultAbi: new FormControl(this.party.defaultAbi,    [Validators.required]),\r\n            filiale: new FormControl(this.party.filialeRiferimento.codice,   [Validators.required]),\r\n            mfiCode: new FormControl(this.party.mfiCode,   [Validators.required]),\r\n            indicatoreResidenza: new FormControl(this.party.indicatoreResidenza,   []),\r\n            categoriaEconomica: new FormControl(this.party.categoriaEconomica,   []),\r\n            dataApertura: new FormControl( {year: da.getFullYear(), month: (da.getUTCMonth() + 1), day: da.getUTCDate()} , [Validators.required]),\r\n            dataChiusura: new FormControl(  {year: dc.getFullYear(), month: (dc.getUTCMonth() + 1), day: dc.getUTCDate()} , []),\r\n            checkedbic:  new FormControl(false,   []),\r\n            checkedtipo: new FormControl(false,   []),\r\n            checkednome: new FormControl(false,   []),\r\n            checkeddefaultAbi: new FormControl(false,   []),\r\n            checkedfiliale: new FormControl(false,   []),\r\n            checkedmfiCode: new FormControl(false,   []),\r\n            checkedindicatoreResidenza: new FormControl(false,   []),\r\n            checkedcategoriaEconomica: new FormControl(false,   []),\r\n            checkeddataApertura: new FormControl(false,   []),\r\n            checkeddataChiusura: new FormControl(false,   []),\r\n            dataInizioValidita: new FormControl(  null ,  [])\r\n        }, { validator: dateValidator( [\r\n                {field1: 'dataApertura', maxDate1: this.maxDate},\r\n                {field1: 'dataInizioValidita', minDate1: this.minDate, maxDate1: this.maxDate}\r\n            ]) });\r\n    }\r\n\r\n    bic11Validator (control: FormControl): {[s: string]: boolean } {\r\n        const bicRegex = new RegExp('^([a-zA-Z]){6}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$');\r\n        if (    !!control &&\r\n            !!control.value &&\r\n            !bicRegex.test(control.value)\r\n        ) {\r\n            return {'syntax': true};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get bic() { return this.modificaForm.get('bic'); }\r\n    get tipo() { return this.modificaForm.get('tipo'); }\r\n    get nome() { return this.modificaForm.get('nome'); }\r\n    get defaultAbi() { return this.modificaForm.get('defaultAbi'); }\r\n    get filiale() { return this.modificaForm.get('filiale'); }\r\n    get mfiCode() { return this.modificaForm.get('mfiCode'); }\r\n    get indicatoreResidenza() { return this.modificaForm.get('indicatoreResidenza'); }\r\n    get categoriaEconomica() { return this.modificaForm.get('categoriaEconomica'); }\r\n    get dataApertura() { return this.modificaForm.get('dataApertura'); }\r\n    get dataChiusura() { return this.modificaForm.get('dataChiusura'); }\r\n    get checkedbic() { return this.modificaForm.get('checkedbic'); }\r\n    get checkedtipo() { return this.modificaForm.get('checkedtipo'); }\r\n    get checkednome() { return this.modificaForm.get('checkednome'); }\r\n    get checkeddefaultAbi() { return this.modificaForm.get('checkeddefaultAbi'); }\r\n    get checkedfiliale() { return this.modificaForm.get('checkedfiliale'); }\r\n    get checkedmfiCode() { return this.modificaForm.get('checkedmfiCode'); }\r\n    get checkedindicatoreResidenza() { return this.modificaForm.get('checkedindicatoreResidenza'); }\r\n    get checkedcategoriaEconomica() { return this.modificaForm.get('checkedcategoriaEconomica'); }\r\n    get checkeddataApertura() { return this.modificaForm.get('checkeddataApertura'); }\r\n    get checkeddataChiusura() { return this.modificaForm.get('checkeddataChiusura'); }\r\n    get dataInizioValidita() { return this.modificaForm.get('dataInizioValidita'); }\r\n\r\n    reset(field) {\r\n        this.modificaForm.get(field).setValue(undefined);\r\n    }\r\n\r\n    manageCheckBox(field: string, type?: string) {\r\n        if (this.modificaForm.get('checked'.concat(field)).value) {\r\n            let val = get(this.party, field);\r\n            if (!!type && type == 'date') {\r\n                val = this.formatterUtils.getValueForDateinDatePickerFormat(val);\r\n            }\r\n            this.modificaForm.get(field).setValue(val);\r\n        } else {\r\n            //this.modificaForm.get(field).setValue(null);\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.resetError();\r\n        this.isResultOk = false;\r\n\r\n        if (this.modificaForm.valid) {\r\n            this.showSpinner();\r\n            if (!this.checkedmfiCode.value) {\r\n                this.modifyParty();\r\n            } else {\r\n                this.infostatService.getInfostatValue(this.mfiCode.value).pipe(\r\n                    tap ( res => {\r\n                        if (!!res) {\r\n                            this.modifyParty();\r\n                        }  else {\r\n                            this.openModal();\r\n                        }\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log ('Error - getInfostatValue', error);\r\n                        this.hideSpinner();\r\n                        this.openModal();\r\n                        return of(null);\r\n                    })\r\n                ).subscribe();\r\n            }\r\n        }\r\n    }\r\n\r\n    private openModal() {\r\n        this.mfiModalReference = this.modalService.open(this.mfiModal);\r\n    }\r\n\r\n    closeModal() {\r\n        this.mfiModalReference.close();\r\n    }\r\n\r\n    confirmModal() {\r\n        this.mfiModalReference.close();\r\n        this.modifyParty();\r\n    }\r\n\r\n    private modifyParty() {\r\n        const taskPartyReq = this.buildTaskParty();\r\n        console.log(taskPartyReq);\r\n        this.taskService.saveTaskParty(taskPartyReq).pipe(\r\n            tap( res => {\r\n                if (!!res) {\r\n                    this.party.dataApertura = res.dataApertura;\r\n                    this.party.dataChiusura = res.dataChiusura;\r\n                    this.party.filialeRiferimento = res.filialeRiferimento;\r\n                    this.modificaForm.get('indicatoreResidenza').setValue(res.indicatoreResidenza);\r\n                    this.modificaForm.get('categoriaEconomica').setValue(res.categoriaEconomica);\r\n                }\r\n\r\n                this.isResultOk = true;\r\n                this.hideSpinner();\r\n                this.readonlyForm = true;\r\n            }),\r\n            catchError((error) => {\r\n                console.log ('Error - modifyParty', error);\r\n                this.setError(error);\r\n                this.hideSpinner();\r\n                return of(null);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    private buildTaskParty (): TaskParty {\r\n        return <TaskParty> {\r\n            operazione: {\r\n                codice: TipoOperazioneEnum.UPD\r\n            },\r\n            tipoTask: null,\r\n            stato: null,\r\n            tsInserimento: null,\r\n            userReq: null,\r\n            tsValidate: null,\r\n            userValidate: null,\r\n            noteRifiuto: null,\r\n            bic: this.bic.value,\r\n            tipoParty: <TipoParty>{\r\n                codice: this.tipo.value\r\n            },\r\n            defaultAbi: this.defaultAbi.value,\r\n            nome: this.nome.value,\r\n            filialeRiferimento: <FilialeRiferimento>{\r\n                codice: this.filiale.value\r\n            },\r\n            mfiCode: this.mfiCode.value,\r\n            categoriaEconomica: null,\r\n            indicatoreResidenza: null,\r\n            dataApertura: this.formatterUtils.dateToString(this.dataApertura.value),\r\n            dataChiusura: this.formatterUtils.dateToString(this.dataChiusura.value),\r\n            validFrom: (!!this.dataInizioValidita.value ? this.formatterUtils.dateToString(this.dataInizioValidita.value) : null),\r\n            validTo: null,\r\n            tsModifica: null,\r\n            utenteRichiesta: null,\r\n            utenteValidazione: null,\r\n            bicToEdit: this.checkedbic.value,\r\n            tipoPartyToEdit: this.checkedtipo.value,\r\n            defaultAbiToEdit: this.checkeddefaultAbi.value,\r\n            nomeToEdit: this.checkednome.value,\r\n            filialeRiferimentoToEdit: this.checkedfiliale.value,\r\n            mfiCodeToEdit: this.checkedmfiCode.value,\r\n            categoriaEconomicaToEdit: this.checkedcategoriaEconomica.value,\r\n            indicatoreResidenzaToEdit: this.checkedindicatoreResidenza.value,\r\n            dataAperturaToEdit: this.checkeddataApertura.value,\r\n            dataChiusuraToEdit: this.checkeddataChiusura.value,\r\n            validFromToEdit: (!!this.dataInizioValidita.value ? true : false),\r\n            validToToEdit: false,\r\n            tsModificaToEdit: false,\r\n            utenteRichiestaToEdit: true,\r\n            utenteValidazioneToEdit: false,\r\n            idPartyOrig: this.party.id,\r\n            bicOrig: null,\r\n            tipoPartyOrig: null,\r\n            defaultAbiOrig: null,\r\n            nomeOrig: null,\r\n            filialeRiferimentoOrig: null,\r\n            mfiCodeOrig: null,\r\n            categoriaEconomicaOrig: null,\r\n            indicatoreResidenzaOrig: null,\r\n            dataAperturaOrig: null,\r\n            dataChiusuraOrig: null,\r\n            validFromOrig: null,\r\n            validToOrig: null,\r\n            tsModificaOrig: null,\r\n            utenteRichiestaOrig: null,\r\n            utenteValidazioneOrig: null\r\n        };\r\n    }\r\n\r\n    getTipoValue(): string {\r\n        return this.tipiParty.find( t => t.codice == this.party.tipoParty.codice).descrizione;\r\n    }\r\n\r\n    getFilialeValue(): string {\r\n        return this.filialiRiferimento.find( f => f.codice == this.party.filialeRiferimento.codice).descrizione;\r\n    }\r\n\r\n    getDataAperturaValue() {\r\n        return this.party.dataApertura;\r\n    }\r\n\r\n    getDataChiusuraValue() {\r\n        return this.party.dataChiusura;\r\n    }\r\n\r\n    getDataInizioValiditaValue() {\r\n        return this.party.validFrom;\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {RicercaPartiesComponent} from './ricerca-parties/ricerca-parties.component';\r\nimport {SecurityService} from '../../../services';\r\nimport {EUserRole} from '../../../models';\r\nimport {InserimentoPartyComponent} from './inserimento-party/inserimento-party.component';\r\nimport {DettaglioPartyComponent} from './dettaglio-party/dettaglio-party.component';\r\nimport {EliminazioneLogicaPartyComponent} from './eliminazione-logica-party/eliminazione-logica-party.component';\r\nimport {ModificaPartyComponent} from './modifica-party/modifica-party.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Anagrafiche Parties',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: RicercaPartiesComponent,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'inserimento',\r\n        component: InserimentoPartyComponent,\r\n        data: {\r\n          title: 'Nuovo Party',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'dettaglio',\r\n        loadChildren: () => import('./dettaglio-party/dettaglio-party.module').then(m => m.DettaglioPartyModule)\r\n      },\r\n      {\r\n        path: 'modifica',\r\n        component: ModificaPartyComponent,\r\n        data: {\r\n          title: 'Modifica Party',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'eliminazione-logica',\r\n        component: EliminazioneLogicaPartyComponent,\r\n        data: {\r\n          title: 'Eliminazione Logica Party',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      }]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PartiesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PartiesRoutingModule } from './parties-routing.module';\r\nimport { RicercaPartiesComponent } from './ricerca-parties/ricerca-parties.component';\r\nimport {BDIAlertModule, BDIDatagridModule, BDIDatepickerModule} from 'scam-bdi-uikit';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {GepaGuiCommonModule} from '../../../common/gepagui-common.module';\r\nimport {GenericTableModule} from '../generic-table/generic-table.module';\r\nimport {GenericActionRenderComponent} from '../generic-action-render/generic-action-render.component';\r\nimport { InserimentoPartyComponent } from './inserimento-party/inserimento-party.component';\r\nimport {InfoPanelModule} from '../info-panel/info-panel.module';\r\nimport { EliminazioneLogicaPartyComponent } from './eliminazione-logica-party/eliminazione-logica-party.component';\r\nimport { ModificaPartyComponent } from './modifica-party/modifica-party.component';\r\nimport {GenericActionRenderModule} from '../generic-action-render/generic-action-render.module';\r\nimport { BDITooltipModule, TooltipDirective } from 'scam-bdi-uikit';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RicercaPartiesComponent, InserimentoPartyComponent, /*DettaglioPartyComponent,*/ EliminazioneLogicaPartyComponent, ModificaPartyComponent],\r\n    imports: [\r\n        CommonModule,\r\n        GepaGuiCommonModule,\r\n        PartiesRoutingModule,\r\n        ReactiveFormsModule,\r\n        BDIAlertModule.forRoot(),\r\n        BDIDatepickerModule,\r\n        FormsModule,\r\n        GenericTableModule,\r\n        InfoPanelModule,\r\n        BDIDatagridModule.withComponents([\r\n            GenericActionRenderComponent,\r\n        ]),\r\n        BDITooltipModule.forRoot(),\r\n        GenericActionRenderModule\r\n    ],\r\n    entryComponents: [GenericActionRenderComponent],\r\n})\r\nexport class PartiesModule { }\r\n"],"sourceRoot":"webpack:///"}