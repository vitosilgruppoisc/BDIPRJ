{"version":3,"sources":["./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step1/inserimento-conto-step1.component.html","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step2/inserimento-conto-step2.component.html","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step3/inserimento-conto-step3.component.html","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step4/inserimento-conto-step4.component.html","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-routing.module.ts","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step1/inserimento-conto-step1.component.scss","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step1/inserimento-conto-step1.component.ts","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step2/inserimento-conto-step2.component.scss","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step2/inserimento-conto-step2.component.ts","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step3/inserimento-conto-step3.component.scss","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step3/inserimento-conto-step3.component.ts","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step4/inserimento-conto-step4.component.scss","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto-step4/inserimento-conto-step4.component.ts","./src/app/views/anagrafiche/conti/inserimento-conto/inserimento-conto.module.ts"],"names":[],"mappings":"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","file":"default~conti-inserimento-conto-inserimento-conto-module~inserimento-conto-inserimento-conto-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-plus-square\\\"></i> Nuovo Conto - Scelta Party </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"ricercaForm\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">Bic:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bic\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bic.invalid && (bic.dirty || bic.touched)\\\" formControlName=\\\"bic\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bic.errors?.wildcard && (bic.dirty || bic.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bic.errors?.syntax && (bic.dirty || bic.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"tipo\\\" class=\\\"col-2 col-form-label\\\">Tipo Party:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"tipo\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipo.invalid && (tipo.dirty || tipo.touched)\\\" formControlName=\\\"tipo\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutte</option>\\r\\n                                <option *ngFor=\\\"let t of tipiParty\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nome\\\" class=\\\"col-2 col-form-label\\\">Nome:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"nome\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nome.invalid && (nome.dirty || nome.touched)\\\" formControlName=\\\"nome\\\" maxlength=\\\"4000\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"nome.errors?.wildcard && (nome.dirty || nome.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && (abi.dirty || abi.touched)\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"abi.errors?.wildcard && (abi.dirty || abi.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"abi.errors?.pattern && (abi.dirty || abi.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"filiale\\\" class=\\\"col-2 col-form-label\\\">Filiale:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"filiale\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"filiale.invalid && (filiale.dirty || filiale.touched)\\\" formControlName=\\\"filiale\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutte</option>\\r\\n                                <option *ngFor=\\\"let f of filialiRiferimento\\\" [value]=\\\"f.codice\\\">{{f.sigla}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"mfiCode\\\" class=\\\"col-2 col-form-label\\\">MFI Code:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"mfiCode\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"mfiCode.invalid && (mfiCode.dirty || mfiCode.touched)\\\" formControlName=\\\"mfiCode\\\" maxlength=\\\"160\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"mfiCode.errors?.wildcard && (mfiCode.dirty || mfiCode.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"mfiCode.errors?.pattern && (mfiCode.dirty || mfiCode.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"indResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"indResidenza\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"indResidenza.invalid && (indResidenza.dirty || indResidenza.touched)\\\" formControlName=\\\"indResidenza\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"indResidenza.errors?.wildcard && (indResidenza.dirty || indResidenza.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"indResidenza.errors?.pattern && (indResidenza.dirty || indResidenza.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"catEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Economica:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"catEconomica\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"catEconomica.invalid && (catEconomica.dirty || catEconomica.touched)\\\" formControlName=\\\"catEconomica\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"catEconomica.errors?.wildcard && (catEconomica.dirty || catEconomica.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"catEconomica.errors?.pattern && (catEconomica.dirty || catEconomica.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--Data Apertura-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Apertura:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataAperturaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataAperturaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataAperturaDa.invalid && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataAperturaDa\\\"  bdiDatepicker #datepickerDAda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\"  style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDAda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataAperturaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataAperturaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataAperturaDa.errors?.dateformat && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataAperturaDa.errors?.daterange && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataAperturaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataAperturaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataAperturaA.invalid && (dataAperturaA.dirty || dataAperturaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataAperturaA\\\"  bdiDatepicker #datepickerDAa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDAa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataAperturaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataAperturaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataAperturaA.errors?.dateformat && (dataAperturaA.dirty || dataAperturaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataAperturaA.errors?.daterange && (dataAperturaA.dirty || dataAperturaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"utenteInserimento\\\" class=\\\"col-2 col-form-label\\\">Utente Inserimento:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteInserimento\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteInserimento.invalid && (utenteInserimento.dirty || utenteInserimento.touched)\\\" formControlName=\\\"utenteInserimento\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.wildcard && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.pattern && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"utenteApprovatore\\\" class=\\\"col-2 col-form-label\\\">Utente Approvatore:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteApprovatore\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteApprovatore.invalid && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" formControlName=\\\"utenteApprovatore\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.wildcard && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.pattern && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-2 mx-auto\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"submit(target)\\\">Cerca</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div #target>\\r\\n                    <app-generic-table *ngIf=\\\"showTable\\\" [model]=\\\"partyModel\\\" (action)=\\\"onActionEvent($event)\\\" (colToDisplay)=\\\"onColToDisplayEvent($event, this.partyService.insertContoSearchPartyModel)\\\" (paginationChanged)=\\\"onPaginationEvent($event, this.partyService.insertContoSearchPartyModel)\\\" (sortChanged)=\\\"onSortEvent($event, this.partyService.insertContoSearchPartyModel)\\\" (filterChanged)=\\\"onFilterEvent($event, this.partyService.insertContoSearchPartyModel)\\\"></app-generic-table>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <br/>\\r\\n            <div class=\\\"row mb-2\\\">\\r\\n                <div class=\\\"col-3\\\">\\r\\n                    <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-3 offset-md-6\\\">\\r\\n                    <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"goToStep2()\\\">Conto non Attestato presso Banca d'Italia</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #wildcardTooltip>\\r\\n        <div class=\\\"input-group-append\\\" bdiTooltip=\\\"{{util.getWildcardTooltip()}}\\\" placement=\\\"right\\\" >\\r\\n        <span class=\\\"input-group-text\\\" >\\r\\n            <i class=\\\"fas fa-info-circle\\\"></i>\\r\\n        </span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-plus-square\\\"></i> Nuovo Conto - Scelta Tipo Conto </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"!!infoPanelPartyModel\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Party Proprietario</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <app-info-panel [model]=\\\"infoPanelPartyModel\\\"></app-info-panel>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Tipo Conto</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <form [formGroup]=\\\"tipoContoform\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto:</label>\\r\\n                                <div class=\\\"col-10\\\">\\r\\n                                    <select id=\\\"tipoConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipoConto.invalid && form.submitted\\\" formControlName=\\\"tipoConto\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                        <option *ngFor=\\\"let t of tipiConto\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                                    </select>\\r\\n                                    <div *ngIf=\\\"tipoConto.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <!--<div class=\\\"col-3 offset-md-3\\\">\\r\\n                                    <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\">Avanti</button>\\r\\n                                </div>\\r\\n                                -->\\r\\n                            </div>\\r\\n\\r\\n                            <br/>\\r\\n                            <div class=\\\"row mb-2\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-3 offset-md-6\\\">\\r\\n                                    <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\">Avanti</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-plus-square\\\"></i> Nuovo Conto - Scelta Conto DCA Padre </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"ricercaForm\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bicParty\\\" class=\\\"col-2 col-form-label\\\">Bic Party:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicParty\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicParty.invalid && (bicParty.dirty || bicParty.touched)\\\" formControlName=\\\"bicParty\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bicParty.errors?.wildcard && (bicParty.dirty || bicParty.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicParty.errors?.syntax && (bicParty.dirty || bicParty.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"tipoParty\\\" class=\\\"col-2 col-form-label\\\">Tipo Party:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"tipoParty\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipoParty.invalid && (tipoParty.dirty || tipoParty.touched)\\\" formControlName=\\\"tipoParty\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of tipiParty\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nomeParty\\\" class=\\\"col-2 col-form-label\\\">Nome Party:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"nomeParty\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nomeParty.invalid && (nomeParty.dirty || nomeParty.touched)\\\" formControlName=\\\"nomeParty\\\" maxlength=\\\"4000\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"nomeParty.errors?.wildcard && (nomeParty.dirty || nomeParty.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"bicConto\\\" class=\\\"col-2 col-form-label\\\">Bic Conto:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicConto.invalid && (bicConto.dirty || bicConto.touched)\\\" formControlName=\\\"bicConto\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bicConto.errors?.wildcard && (bicConto.dirty || bicConto.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicConto.errors?.syntax && (bicConto.dirty || bicConto.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"targetService\\\" class=\\\"col-2 col-form-label\\\">Target Service:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"targetService\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"targetService.invalid && (targetService.dirty || targetService.touched)\\\" formControlName=\\\"targetService\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of tipiTargetService\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"idConto\\\" class=\\\"col-2 col-form-label\\\">Account Id:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"idConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"idConto.invalid && (idConto.dirty || idConto.touched)\\\" formControlName=\\\"idConto\\\" maxlength=\\\"34\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"idConto.errors?.wildcard && (idConto.dirty || idConto.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && (abi.dirty || abi.touched)\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"abi.errors?.wildcard && (abi.dirty || abi.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"abi.errors?.pattern && (abi.dirty || abi.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"tipoConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipoConto.invalid && (tipoConto.dirty || tipoConto.touched)\\\" formControlName=\\\"tipoConto\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of tipiContoDCA_CB\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"defaultMCA\\\" class=\\\"col-2 col-form-label\\\">Default MCA:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"defaultMCA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"defaultMCA.invalid && (defaultMCA.dirty || defaultMCA.touched)\\\" formControlName=\\\"defaultMCA\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of tipiDefaultMCA\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"flagPressoBDI\\\" class=\\\"col-2 col-form-label\\\">Presso BDI:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"flagPressoBDI\\\" class=\\\"form-control\\\" [value]=\\\"getPressoBDIValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"flagInserimentoManuale\\\" class=\\\"col-2 col-form-label\\\">Flag Inserimento Manuale:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"flagInserimentoManuale\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"flagInserimentoManuale.invalid && (flagInserimentoManuale.dirty || flagInserimentoManuale.touched)\\\" formControlName=\\\"flagInserimentoManuale\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of tipiManuale\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"filiale\\\" class=\\\"col-2 col-form-label\\\">Filiale:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"filiale\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"filiale.invalid && (filiale.dirty || filiale.touched)\\\" formControlName=\\\"filiale\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">Tutte</option>\\r\\n                                <option *ngFor=\\\"let f of filialiRiferimento\\\" [value]=\\\"f.codice\\\">{{f.sigla}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"indResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"indResidenza\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"indResidenza.invalid && (indResidenza.dirty || indResidenza.touched)\\\" formControlName=\\\"indResidenza\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"indResidenza.errors?.wildcard && (indResidenza.dirty || indResidenza.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"indResidenza.errors?.pattern && (indResidenza.dirty || indResidenza.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"catEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Economica:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"catEconomica\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"catEconomica.invalid && (catEconomica.dirty || catEconomica.touched)\\\" formControlName=\\\"catEconomica\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"catEconomica.errors?.wildcard && (catEconomica.dirty || catEconomica.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"catEconomica.errors?.pattern && (catEconomica.dirty || catEconomica.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--Data Apertura-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Apertura:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataAperturaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataAperturaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataAperturaDa.invalid && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataAperturaDa\\\"  bdiDatepicker #datepickerDAda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\"  style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDAda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataAperturaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataAperturaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataAperturaDa.errors?.dateformat && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataAperturaDa.errors?.daterange && (dataAperturaDa.dirty || dataAperturaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataAperturaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataAperturaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataAperturaA.invalid && (dataAperturaA.dirty || dataAperturaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataAperturaA\\\"  bdiDatepicker #datepickerDAa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDAa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataAperturaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataAperturaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataAperturaA.errors?.dateformat && (dataAperturaA.dirty || dataAperturaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataAperturaA.errors?.daterange && (dataAperturaA.dirty || dataAperturaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--Data Chiusura-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Chiusura:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataChiusuraDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataChiusuraDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusuraDa.invalid && (dataChiusuraDa.dirty || dataChiusuraDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusuraDa\\\"  bdiDatepicker #datepickerDCda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDCda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataChiusuraDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusuraDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataChiusuraDa.errors?.dateformat && (dataChiusuraDa.dirty || dataChiusuraDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataChiusuraDa.errors?.daterange && (dataChiusuraDa.dirty || dataChiusuraDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataChiusuraA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataChiusuraA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusuraA.invalid && (dataChiusuraA.dirty || dataChiusuraA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusuraA\\\"  bdiDatepicker #datepickerDCa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDCa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataChiusuraA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataChiusuraA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataChiusuraA.errors?.dateformat && (dataChiusuraA.dirty || dataChiusuraA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataChiusuraA.errors?.daterange && (dataChiusuraA.dirty || dataChiusuraA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"utenteInserimento\\\" class=\\\"col-2 col-form-label\\\">Utente Inserimento:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteInserimento\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteInserimento.invalid && (utenteInserimento.dirty || utenteInserimento.touched)\\\" formControlName=\\\"utenteInserimento\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.wildcard && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.pattern && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"utenteApprovatore\\\" class=\\\"col-2 col-form-label\\\">Utente Approvatore:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteApprovatore\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteApprovatore.invalid && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" formControlName=\\\"utenteApprovatore\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.wildcard && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.pattern && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-2 mx-auto\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"submit(target)\\\">Cerca</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <div #target>\\r\\n                    <app-generic-table *ngIf=\\\"showTable\\\" [model]=\\\"contoModel\\\" (action)=\\\"onActionEvent($event)\\\"></app-generic-table>\\r\\n                </div>\\r\\n\\r\\n                <br/>\\r\\n                <div class=\\\"row mb-2\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #wildcardTooltip>\\r\\n        <div class=\\\"input-group-append\\\" bdiTooltip=\\\"{{util.getWildcardTooltip()}}\\\" placement=\\\"right\\\" >\\r\\n        <span class=\\\"input-group-text\\\" >\\r\\n            <i class=\\\"fas fa-info-circle\\\"></i>\\r\\n        </span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-plus-square\\\"></i> Nuovo Conto - Inserimento Conto </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"!!infoPanelPartyModel\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Party Proprietario</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <app-info-panel [model]=\\\"infoPanelPartyModel\\\"></app-info-panel>\\r\\n                        <br/>\\r\\n                        <span><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"!!infoPanelContoModel\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Conto DCA Padre</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <app-info-panel [model]=\\\"infoPanelContoModel\\\"></app-info-panel>\\r\\n                        <br/>\\r\\n                        <span><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Conto</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <form [formGroup]=\\\"inserimentoForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"openModal()\\\" #form=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"bicConto\\\" class=\\\"col-2 col-form-label\\\">Bic Conto:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"bicConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicConto.invalid && form.submitted\\\" formControlName=\\\"bicConto\\\" [pattern]=\\\"'^[a-zA-Z0-9]+$'\\\" [readOnly]=\\\"checkContoIsSubAccountByTipoCod(inserimentoContoModel.tipoConto) || readonlyForm\\\"/>\\r\\n                                        <div *ngIf=\\\"bicConto.errors?.bicReq && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo obbligatorio\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"bicConto.errors?.syntax && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo sintatticamente non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto<span>*</span>:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"tipoConto\\\" class=\\\"form-control\\\" [value]=\\\"getTipoValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione<span>*</span>:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && form.submitted\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                                        <div *ngIf=\\\"descrizione.errors?.required  && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo obbligatorio\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"descrizione.errors?.pattern  && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"idConto\\\" class=\\\"col-2 col-form-label\\\">Account Id<span>*</span>:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"idConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"idConto.invalid && form.submitted\\\" formControlName=\\\"idConto\\\" maxlength=\\\"34\\\" [pattern]=\\\"'^[a-zA-Z0-9]+$'\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                                        <div *ngIf=\\\"idConto.errors?.required  && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo obbligatorio\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"idConto.errors?.pattern  && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"targetService\\\" class=\\\"col-2 col-form-label\\\">Target Service<span>*</span>:</label>\\r\\n                                <!--<div class=\\\"col-4\\\">\\r\\n                                    <select *ngIf=\\\"!readonlyForm; else inputTarget\\\" id=\\\"targetService\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"targetService.invalid && form.submitted\\\" formControlName=\\\"targetService\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                        <option *ngFor=\\\"let t of tipiTargetService\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                                    </select>\\r\\n                                    <div *ngIf=\\\"targetService.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <ng-template #inputTarget>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getTargetServiceValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n                                -->\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"targetService\\\" class=\\\"form-control\\\" [value]=\\\"getTargetServiceValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi<span>*</span>:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && form.submitted\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9]+$'\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                                        <div *ngIf=\\\"abi.errors?.required  && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo obbligatorio\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"abi.errors?.pattern  && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\" *ngIf=\\\"checkTipoConto()\\\">\\r\\n\\r\\n                                <label for=\\\"defaultMCA\\\" class=\\\"col-2 col-form-label\\\">Default MCA<span>*</span>:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <select id=\\\"defaultMCA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"defaultMCA.invalid && form.submitted\\\" formControlName=\\\"defaultMCA\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">Tutti</option>\\r\\n                                        <option *ngFor=\\\"let t of tipiDefaultMCA\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                                    </select>\\r\\n                                    <div *ngIf=\\\"defaultMCA.errors?.value  && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n\\r\\n                                <label for=\\\"flagPressoBDI\\\" class=\\\"col-2 col-form-label\\\">Presso BDI:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"flagPressoBDI\\\" class=\\\"form-control\\\" [value]=\\\"getPressoBDIValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"flagInserimentoManuale\\\" class=\\\"col-2 col-form-label\\\">Flag Inserimento Manuale:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <input id=\\\"flagInserimentoManuale\\\" class=\\\"form-control\\\" [value]=\\\"getFlagInserimentoManualeValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"indResidenza\\\" class=\\\"col-2 col-form-label\\\">Indicatore di Residenza:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"indResidenza\\\" class=\\\"form-control\\\" formControlName=\\\"indResidenza\\\" maxlength=\\\"5\\\" readonly=\\\"true\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <label for=\\\"catEconomica\\\" class=\\\"col-2 col-form-label\\\">Categoria Economica:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"catEconomica\\\" class=\\\"form-control\\\" formControlName=\\\"catEconomica\\\" readonly=\\\"true\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"dataApertura\\\" class=\\\"col-2 col-form-label\\\">Data Apertura<span>*</span>:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputDataApertuta\\\">\\r\\n                                        <input id=\\\"dataApertura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataApertura.invalid && (form.submitted || (dataApertura.dirty || dataApertura.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataApertura\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\" [maxDate]=\\\"maxDate\\\"/>\\r\\n                                        <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataApertura.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataApertura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataApertura.errors?.dateformat && (dataApertura.dirty || dataApertura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataApertura.errors?.daterange && (dataApertura.dirty || dataApertura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataApertura.errors?.mindate  && (dataApertura.dirty || dataApertura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Data inferiore al limite inferiore consentito (data apertuta Party): {{formatterUtils.dateToString(minDate)}}\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataApertura.errors?.maxdate  && (dataApertura.dirty || dataApertura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Data superiore al limite superiore consentito (data chiusura Party): {{formatterUtils.dateToString(maxDate)}}\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #inputDataApertuta>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getDataAperturaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n\\r\\n                                <label for=\\\"dataChiusura\\\" class=\\\"col-2 col-form-label\\\">Data Chiusura:</label>\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputDataChiusura\\\" >\\r\\n                                        <input id=\\\"dataChiusura\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataChiusura.invalid && (form.submitted || (dataChiusura.dirty || dataChiusura.touched))\\\"  placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataChiusura\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataChiusura.value\\\"  class=\\\"input-group-append\\\" [class.is-invalid]=\\\"dataChiusura.invalid && form.submitted\\\" (click)=\\\"reset('dataChiusura')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataChiusura.errors?.dateformat && (dataChiusura.dirty || dataChiusura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataChiusura.errors?.daterange && (dataChiusura.dirty || dataChiusura.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-template #inputDataChiusura>\\r\\n                                    <input class=\\\"form-control\\\" [value]=\\\"getDataChiusuraValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                                </ng-template>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mb-2\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" [disabled]=\\\"readonlyForm\\\">Indietro</button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #waiting>\\r\\n        <gepa-spinning-loader></gepa-spinning-loader>\\r\\n    </ng-template>\\r\\n</div>\\r\\n\\r\\n<ng-template #confirmModal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mfiModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Conferma</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        Si sta confermando l'inserimento. Procedere?\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirm()\\\">Conferma</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {RicercaContiComponent} from '../ricerca-conti/ricerca-conti.component';\r\nimport {EUserRole} from '../../../../models';\r\nimport {SecurityService} from '../../../../services';\r\nimport {InserimentoContoStep1Component} from './inserimento-conto-step1/inserimento-conto-step1.component';\r\nimport {InserimentoContoStep2Component} from './inserimento-conto-step2/inserimento-conto-step2.component';\r\nimport {InserimentoContoStep3Component} from './inserimento-conto-step3/inserimento-conto-step3.component';\r\nimport {InserimentoContoStep4Component} from './inserimento-conto-step4/inserimento-conto-step4.component';\r\nimport {ModificaContoComponent} from '../modifica-conto/modifica-conto.component';\r\nimport {EliminazioneLogicaContoComponent} from '../eliminazione-logica-conto/eliminazione-logica-conto.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Nuovo Conto',\r\n    },\r\n    children: [\r\n      {\r\n        path: 'step1',\r\n        component: InserimentoContoStep1Component,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'step2',\r\n        component: InserimentoContoStep2Component,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'step3',\r\n        component: InserimentoContoStep3Component,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'step4',\r\n        component: InserimentoContoStep4Component,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InserimentoContoRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9jb250aS9pbnNlcmltZW50by1jb250by9pbnNlcmltZW50by1jb250by1zdGVwMS9pbnNlcmltZW50by1jb250by1zdGVwMS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl} from '@angular/forms';\r\nimport {Utils} from '../../../../../utilities/util';\r\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\r\nimport {PartyService} from '../../../../../services/party.service';\r\nimport {FilialeService} from '../../../../../services/filiale.service';\r\nimport {SecurityService, UserService} from '../../../../../services';\r\nimport {FilterUtils} from '../../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../../utilities/formatterUtils';\r\nimport {RSQLUtils} from '../../../../../utilities/rsqlUtil';\r\nimport {RoutingService} from '../../../../../services/routing.service';\r\nimport {GenericActionRenderComponent} from '../../../generic-action-render/generic-action-render.component';\r\nimport {ActionRenderModel, ButtonModel} from '../../../../../models/action-render-model';\r\nimport {RicercaPartiesComponent} from '../../../parties/ricerca-parties/ricerca-parties.component';\r\nimport {InserimentoContoModel} from '../../../../../models/conto';\r\nimport {dateValidator} from \"../../../../../validators/date-validator\";\r\nimport {get} from 'lodash';\r\nimport {SearchModel} from \"../../../../../models/search\";\r\n\r\n@Component({\r\n    selector: 'app-inserimento-conto-step1',\r\n    templateUrl: './inserimento-conto-step1.component.html',\r\n    styleUrls: ['./inserimento-conto-step1.component.scss']\r\n})\r\nexport class InserimentoContoStep1Component extends RicercaPartiesComponent implements OnInit {\r\n\r\n    inserimentoContoModel: InserimentoContoModel;\r\n\r\n    constructor(\r\n        protected router: Router,\r\n        protected partyService: PartyService,\r\n        protected filialeService: FilialeService,\r\n        protected securityService: SecurityService,\r\n        protected userService: UserService,\r\n        protected filterUtils: FilterUtils,\r\n        protected formatterUtils: FormatterUtils,\r\n        protected formBuilder: FormBuilder,\r\n        protected rSQLUtils: RSQLUtils,\r\n        protected utils: Utils,\r\n        protected route: ActivatedRoute,\r\n        protected routingService: RoutingService\r\n    ) {\r\n        super ( router, partyService, filialeService, securityService, userService, filterUtils, formatterUtils, formBuilder, rSQLUtils, utils, route, routingService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n    }\r\n\r\n    protected manageNavigation() {\r\n        this.route.queryParams.subscribe(params => {\r\n\r\n            const inserimentoContoSessionObj = this.getSession(this.CONTO_INSERT_SESSION);\r\n            if (!!inserimentoContoSessionObj) {\r\n                this.inserimentoContoModel = inserimentoContoSessionObj;\r\n                this.inserimentoContoModel.wizardSteps = this.setStepForInsertConto(this.inserimentoContoModel, 'step1');\r\n                this.backUrl = this.getBackUrlForInsertConto(this.inserimentoContoModel, 'step1');\r\n            } else {\r\n                this.setError();\r\n            }\r\n\r\n            if (!!params && !!get(params, this.BACK) && !!this.getSearcModel()) {\r\n                this.ricercaForm.setValue(this.getSearcModel().form);\r\n                this.submit(null, false);\r\n            } else {\r\n                this.setSearcModel(this.initSearchModel());\r\n            }\r\n        });\r\n    }\r\n\r\n    buildForm() {\r\n        this.ricercaForm = this.formBuilder.group({\r\n            bic:  new FormControl(null,   [this.wildcard2Validator.bind(this), this.bicValidator.bind(this)]),\r\n            tipo: new FormControl(null,   []),\r\n            nome: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            abi: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            filiale: new FormControl(null,   []),\r\n            mfiCode: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            indResidenza: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            catEconomica: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            dataAperturaDa: new FormControl(null, []   ),\r\n            dataAperturaA: new FormControl(null, []   ),\r\n            utenteInserimento: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n            utenteApprovatore: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n        }, { validator: dateValidator( [\r\n                {field1: 'dataAperturaDa', field2: 'dataAperturaA'}\r\n            ]) });\r\n    }\r\n\r\n    buildModel() {\r\n        this.partyModel = {\r\n            domLayout: 'autoHeight',\r\n            gridOptions: {\r\n                rowHeight: 30,\r\n                paginationPageSize: 10,\r\n                defaultColDef: {\r\n                    sortable: true\r\n                },\r\n                context: {\r\n                    componentParent: this\r\n                },\r\n                onGridReady: () => this.initializeGrid()\r\n            },\r\n            rowData: [],\r\n            pagination: true,\r\n            columnsFitAvailable: true,\r\n            columnDefs: this.buildColumnDef(),\r\n            enableCsvExport: false,\r\n            enablePdfExport: false,\r\n            enableColumnSelection: false\r\n        };\r\n    }\r\n\r\n    protected initializeGrid(): void {\r\n        this.partyModel.gridOptions.api.sizeColumnsToFit();\r\n        this.partyModel.gridOptions.onGridSizeChanged = evt =>  this.partyModel.gridOptions.api ?  this.partyModel.gridOptions.api.sizeColumnsToFit() : null;\r\n    }\r\n\r\n    protected buildColumnDef() {\r\n        let order = 0;\r\n        return  [\r\n            {colId: ('id_' + order++), headerName: 'BIC',                    field: 'bic',           filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'TIPO',                   field: 'tipoParty.descrizione',          filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'NOME',                   field: 'nome',          filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'ABI',                    field: 'defaultAbi',    filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'CATEGORIA ECONOMICA',    field: 'categoriaEconomica',    filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'INDICATORE RESIDENZA',   field: 'indicatoreResidenza',    filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'DATA APERTURA',          field: 'dataApertura',  filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'dataApertura'), exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'DATA CHIUSURA',          field: 'dataChiusura',  filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'dataChiusura'), exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'INIZIO VALIDITA\\'',      field: 'validFrom',     filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validFrom'), exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'FINE VALIDITA\\'',        field: 'validTo',       filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validTo'), exportOptions: {skipColumn: false}},\r\n            {colId: ('id_' + order++), headerName: 'AZIONI',                 field: '',              resizable: true, cellRendererFramework: GenericActionRenderComponent, cellRendererParams: {modelFn: this.buildActionRenderModel.bind(this)}, sortable: false, exportOptions: {skipColumn: true}, pinned: 'right', minWidth: 150}\r\n        ];\r\n    }\r\n\r\n    buildActionRenderModel(data): ActionRenderModel {\r\n        const selectButton = <ButtonModel> {\r\n            label: 'Seleziona Party '.concat(data.bic),\r\n            routerLink: this.buildRouterLinkStep2(),\r\n            params: this.buildQueryParamStep2(data.id, true),\r\n            enabled: true,\r\n            sessionKey: this.CONTO_INSERT_SESSION\r\n        };\r\n\r\n        return <ActionRenderModel> {\r\n            detailButton: null,\r\n            modifyButton: null,\r\n            deleteButton: null,\r\n            selectButton: selectButton\r\n        };\r\n    }\r\n\r\n    protected buildRsqlSearchString() {\r\n\r\n        const rSQLArray: string [] = [];\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.bic.value, 'bic'));\r\n        rSQLArray.push(this.rSQLUtils.manageSelect( this.tipo.value, 'tipoParty'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.nome.value, 'nome'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.abi.value, 'defaultAbi'));\r\n        rSQLArray.push(this.rSQLUtils.manageSelect( this.filiale.value, 'filialeRiferimento'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.mfiCode.value, 'mfiCode'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.indResidenza.value, 'indicatoreResidenza'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.catEconomica.value, 'categoriaEconomica'));\r\n        rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataAperturaDa.value), this.formatterUtils.dateToString(this.dataAperturaA.value), 'dataApertura'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteInserimento.value, 'utenteRichiesta'));\r\n        rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteApprovatore.value, 'utenteValidazione'));\r\n\r\n        const searchString = this.rSQLUtils.getSearchString(rSQLArray);\r\n        console.log('RSQL searchString:' + searchString);\r\n        return searchString;\r\n    }\r\n\r\n    goToStep2() {\r\n        const route = this.buildRouterLinkStep2();\r\n        this.setSession(this.CONTO_INSERT_SESSION, this.buildQueryParamStep2(null, false));\r\n        this.router.navigate([route], {});\r\n    }\r\n\r\n    private buildRouterLinkStep2(): string {\r\n        return this.inserimentoContoModel.prefixUrl.concat('step2');\r\n    }\r\n\r\n    private buildQueryParamStep2( id: any, pressoBDI: boolean): InserimentoContoModel {\r\n        return <InserimentoContoModel> {\r\n            idParty: id,\r\n            pressoBDI: pressoBDI,\r\n            prefixUrl: this.inserimentoContoModel.prefixUrl,\r\n            wizardSteps: this.inserimentoContoModel.wizardSteps\r\n        };\r\n        //Nel wizard mantengo i valori solo sull'indietro; sull'avanti l'utente deve rifare la scelta\r\n        /*this.inserimentoContoModel.idParty = id;\r\n        this.inserimentoContoModel.pressoBDI = pressoBDI;\r\n        return this.inserimentoContoModel;*/\r\n    }\r\n\r\n    protected getSearcModel() {\r\n        return this.partyService.insertContoSearchPartyModel;\r\n    }\r\n\r\n    protected setSearcModel(searchModel: SearchModel) {\r\n        return this.partyService.insertContoSearchPartyModel = searchModel;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9jb250aS9pbnNlcmltZW50by1jb250by9pbnNlcmltZW50by1jb250by1zdGVwMi9pbnNlcmltZW50by1jb250by1zdGVwMi5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {AbstractContiComponent} from '../../abstract-conti.component';\r\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\r\nimport {PartyService} from '../../../../../services/party.service';\r\nimport {FilialeService} from '../../../../../services/filiale.service';\r\nimport {ContoService} from '../../../../../services/conto.service';\r\nimport {SecurityService, UserService} from '../../../../../services';\r\nimport {FilterUtils} from '../../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../../utilities/formatterUtils';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {RSQLUtils} from '../../../../../utilities/rsqlUtil';\r\nimport {Utils} from '../../../../../utilities/util';\r\nimport {RoutingService} from '../../../../../services/routing.service';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {Party} from '../../../../../models/party';\r\nimport {of} from 'rxjs';\r\nimport {InfoPanelModel} from '../../../../../models/info-panel-model';\r\nimport {InserimentoContoModel} from '../../../../../models/conto';\r\nimport {TipoContoEnum} from '../../../../../models/enum';\r\n\r\n@Component({\r\n    selector: 'app-inserimento-conto-step2',\r\n    templateUrl: './inserimento-conto-step2.component.html',\r\n    styleUrls: ['./inserimento-conto-step2.component.scss']\r\n})\r\nexport class InserimentoContoStep2Component extends AbstractContiComponent  implements OnInit {\r\n\r\n    inserimentoContoModel: InserimentoContoModel;\r\n    party: Party;\r\n    tipoContoform: FormGroup;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        protected partyService: PartyService,\r\n        protected filialeService: FilialeService,\r\n        protected contoService: ContoService,\r\n        protected securityService: SecurityService,\r\n        protected userService: UserService,\r\n        private filterUtils: FilterUtils,\r\n        protected formatterUtils: FormatterUtils,\r\n        private formBuilder: FormBuilder,\r\n        private rSQLUtils: RSQLUtils,\r\n        private utils: Utils,\r\n        protected routingService: RoutingService,\r\n        protected route: ActivatedRoute\r\n    ) {\r\n        super(partyService, filialeService, contoService, securityService, userService, formatterUtils, routingService, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.checkUserSpi();\r\n\r\n        this.tipoContoform = this.formBuilder.group({\r\n            tipoConto: new FormControl(null,   [Validators.required]),\r\n        });\r\n\r\n        this.route.queryParams.subscribe(params => {\r\n            const inserimentoContoSessionObj = this.getSession(this.CONTO_INSERT_SESSION);\r\n            if (!!inserimentoContoSessionObj) {\r\n                this.inserimentoContoModel = inserimentoContoSessionObj;\r\n                if (!!this.inserimentoContoModel.idParty) {\r\n                    this.loadSections(this.inserimentoContoModel.idParty);\r\n                } else {\r\n                    this.buildTipoContoSection();\r\n                }\r\n                this.inserimentoContoModel.wizardSteps = this.setStepForInsertConto(this.inserimentoContoModel, 'step2');\r\n                this.backUrl = this.getBackUrlForInsertConto(this.inserimentoContoModel, 'step2');\r\n                if (!!this.inserimentoContoModel && this.inserimentoContoModel.tipoConto) {\r\n                    return this.tipoContoform.get('tipoConto').setValue(this.inserimentoContoModel.tipoConto);\r\n                }\r\n            } else {\r\n                this.setError();\r\n            }\r\n        });\r\n    }\r\n\r\n    get tipoConto() { return this.tipoContoform.get('tipoConto'); }\r\n\r\n    private loadSections (idParty: string) {\r\n        this.showSpinner();\r\n\r\n        this.partyService.getParty(idParty).pipe(\r\n            tap ( res => {\r\n                this.party = res;\r\n            }),\r\n            tap( res => {\r\n                this.buildPartySection();\r\n                this.buildTipoContoSection();\r\n                this.hideSpinner();\r\n            }),\r\n            catchError((error) => {\r\n                console.log ('Error - loadSections', error);\r\n                this.setError();\r\n                this.hideSpinner();\r\n                return of(null);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    private buildPartySection() {\r\n        const data = [\r\n            [this.buildInfoPanelElement('Party Bic', 'string', this.party, 'bic'), this.buildInfoPanelElement('Tipo Party', 'string', this.party, 'tipoParty.descrizione')],\r\n            [this.buildInfoPanelElement('Nome Party', 'string', this.party, 'nome'), this.buildInfoPanelElement('ABI', 'string', this.party, 'defaultAbi')],\r\n            [this.buildInfoPanelElement('Filiale Riferimento', 'string', this.party, 'filialeRiferimento.descrizione'), this.buildInfoPanelElement('MFI COde', 'string', this.party, 'mfiCode' )],\r\n            [this.buildInfoPanelElement('Indicatore di Residenza', 'string', this.party, 'indicatoreResidenza'), this.buildInfoPanelElement('Categoria Economica', 'string', this.party, 'categoriaEconomica')],\r\n            [this.buildInfoPanelElement('Data Apertura Party', 'date', this.party, 'dataApertura'), this.buildInfoPanelElement('Data Chiusura Party', 'date', this.party, 'dataChiusura')],\r\n            [this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.party, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.party, 'validTo')],\r\n            [this.buildInfoPanelElement('Utente Inserimento/Modifica', 'string', this.party, 'utenteRichiesta'), this.buildInfoPanelElement('Utente Approvatore', 'string', this.party, 'utenteValidazione')]\r\n        ];\r\n\r\n        this.infoPanelPartyModel = <InfoPanelModel> {\r\n            columnNumber: 2,\r\n            data: data\r\n        };\r\n    }\r\n\r\n    private buildTipoContoSection() {\r\n        if (!!this.party) {\r\n            this.contoService.getTipiConto(this.party.tipoParty.codice).pipe(\r\n                tap( res => this.tipiConto = res)\r\n            ).subscribe();\r\n        } else {\r\n            this.tipiConto = this.buildTipoContoDCAOrCBorSubAccount();\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.tipoContoform.valid) {\r\n            this.inserimentoContoModel.tipoConto = this.tipoConto.value;\r\n            if (this.inserimentoContoModel.tipoConto == TipoContoEnum.RTGS_SA) {\r\n                this.goToStep3();\r\n            } else {\r\n                this.goToStep4();\r\n            }\r\n        }\r\n    }\r\n\r\n    goToStep3() {\r\n        const route = this.inserimentoContoModel.prefixUrl.concat('step3');\r\n        this.setSession(this.CONTO_INSERT_SESSION, this.inserimentoContoModel);\r\n        this.router.navigate([route], {});\r\n    }\r\n\r\n    goToStep4() {\r\n        const route = this.inserimentoContoModel.prefixUrl.concat('step4');\r\n        this.setSession(this.CONTO_INSERT_SESSION, this.inserimentoContoModel);\r\n        this.router.navigate([route], {});\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9jb250aS9pbnNlcmltZW50by1jb250by9pbnNlcmltZW50by1jb250by1zdGVwMy9pbnNlcmltZW50by1jb250by1zdGVwMy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {RicercaContiComponent} from '../../ricerca-conti/ricerca-conti.component';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PartyService} from '../../../../../services/party.service';\r\nimport {FilialeService} from '../../../../../services/filiale.service';\r\nimport {ContoService} from '../../../../../services/conto.service';\r\nimport {SecurityService, UserService} from '../../../../../services';\r\nimport {FilterUtils} from '../../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../../utilities/formatterUtils';\r\nimport {FormBuilder, FormControl} from '@angular/forms';\r\nimport {RSQLUtils} from '../../../../../utilities/rsqlUtil';\r\nimport {Utils} from '../../../../../utilities/util';\r\nimport {RoutingService} from '../../../../../services/routing.service';\r\nimport {InserimentoContoModel, TipoConto} from '../../../../../models/conto';\r\nimport {GenericActionRenderComponent} from '../../../generic-action-render/generic-action-render.component';\r\nimport {ActionRenderModel, ButtonModel} from '../../../../../models/action-render-model';\r\nimport {TipoContoEnum, TipoFlagEnum} from '../../../../../models/enum';\r\nimport {SearchModel} from \"../../../../../models/search\";\r\nimport {get} from 'lodash';\r\nimport {dateValidator} from \"../../../../../validators/date-validator\";\r\n\r\n@Component({\r\n  selector: 'app-inserimento-conto-step3',\r\n  templateUrl: './inserimento-conto-step3.component.html',\r\n  styleUrls: ['./inserimento-conto-step3.component.scss']\r\n})\r\nexport class InserimentoContoStep3Component extends  RicercaContiComponent implements OnInit {\r\n\r\n  inserimentoContoModel: InserimentoContoModel;\r\n  tipiContoDCA_CB: TipoConto [];\r\n  constructor(\r\n      protected router: Router,\r\n      protected partyService: PartyService,\r\n      protected filialeService: FilialeService,\r\n      protected contoService: ContoService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected formBuilder: FormBuilder,\r\n      protected rSQLUtils: RSQLUtils,\r\n      protected utils: Utils,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(router, partyService, filialeService, contoService, securityService, userService, filterUtils, formatterUtils, formBuilder, rSQLUtils, utils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildCombo();\r\n    this.checkUserSpi();\r\n    this.manageNavigation();\r\n  }\r\n\r\n  protected manageNavigation() {\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n\r\n      const inserimentoContoSessionObj = this.getSession(this.CONTO_INSERT_SESSION);\r\n      if (!!inserimentoContoSessionObj) {\r\n        this.inserimentoContoModel = inserimentoContoSessionObj;\r\n        this.tipiContoDCA_CB = this.buildTipoContoDCAOrCB();\r\n        this.buildForm();\r\n        this.buildModel();\r\n        this.inserimentoContoModel.wizardSteps = this.setStepForInsertConto(this.inserimentoContoModel, 'step3');\r\n        this.backUrl = this.getBackUrlForInsertConto(this.inserimentoContoModel, 'step3');\r\n      } else {\r\n        this.setError();\r\n      }\r\n\r\n      if (!!params && !!get(params, this.BACK) && !!this.getSearcModel() ) {\r\n        this.ricercaForm.setValue(this.getSearcModel().form);\r\n        this.submit(null, false);\r\n      } else {\r\n        this.setSearcModel(this.initSearchModel());\r\n      }\r\n    });\r\n  }\r\n\r\n  protected buildForm() {\r\n    this.ricercaForm = this.formBuilder.group({\r\n      bicParty:  new FormControl(null,   [this.wildcard2Validator.bind(this), this.bicValidator.bind(this)]),\r\n      tipoParty: new FormControl(null,   []),\r\n      nomeParty: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      bicConto:  new FormControl(null,   [this.wildcard2Validator.bind(this), this.bicValidator.bind(this)]),\r\n      targetService: new FormControl(null,   []),\r\n      idConto: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      abi: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      tipoConto: new FormControl(null,   []),\r\n      defaultMCA: new FormControl(null,   []),\r\n      flagPressoBDI: new FormControl((!!this.inserimentoContoModel.pressoBDI ? 1 : 0),   []),\r\n      flagInserimentoManuale: new FormControl(null,   []),\r\n      indResidenza: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      catEconomica: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      filiale: new FormControl(null,   []),\r\n      dataAperturaDa: new FormControl(null, []   ),\r\n      dataAperturaA: new FormControl(null, []   ),\r\n      dataChiusuraDa: new FormControl(null, []   ),\r\n      dataChiusuraA: new FormControl(null, []   ),\r\n      utenteInserimento: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      utenteApprovatore: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n    }, { validator: dateValidator( [\r\n        {field1: 'dataAperturaDa', field2: 'dataAperturaA'},\r\n        {field1: 'dataChiusuraDa', field2: 'dataChiusuraA'},\r\n        {field1: 'dataInizioValiditaDa', field2: 'dataInizioValiditaA'},\r\n        {field1: 'dataFineValiditaDa', field2: 'dataFineValiditaA'}\r\n      ]) });\r\n  }\r\n\r\n  buildModel() {\r\n    this.contoModel = {\r\n      domLayout: 'autoHeight',\r\n      gridOptions: {\r\n        rowHeight: 30,\r\n        paginationPageSize: 10,\r\n        defaultColDef: {\r\n          sortable: true\r\n        },\r\n        context: {\r\n          componentParent: this\r\n        },\r\n        onGridReady: () => this.initializeGrid()\r\n      },\r\n      rowData: [],\r\n      pagination: true,\r\n      columnsFitAvailable: true,\r\n      columnDefs: this.buildColumnDef(),\r\n      enableCsvExport: false,\r\n      enablePdfExport: false,\r\n      enableColumnSelection: false\r\n    };\r\n  }\r\n\r\n  protected initializeGrid(): void {\r\n    this.contoModel.gridOptions.api.sizeColumnsToFit();\r\n    this.contoModel.gridOptions.onGridSizeChanged = evt =>  this.contoModel.gridOptions.api ?  this.contoModel.gridOptions.api.sizeColumnsToFit() : null;\r\n  }\r\n\r\n  protected buildColumnDef() {\r\n    let order = 0;\r\n    return  [\r\n      {colId: ('id_' + order++), headerName: 'BIC CONTO',              field: 'bic',                      filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'ID_CONTO',               field: 'id',                       filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'TARGET SERVICE',         field: 'targetService',            filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'TIPO CONTO',             field: 'tipoConto.descrizione',    filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'BIC PARTY',              field: 'bicParty',                 filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'NOME PARTY',             field: 'nomeParty',                filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'DEFAULT MCA',            field: 'mcaDefFlag',               filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.getBooleanAsString(data.data, 'mcaDefFlag'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'PRESSO BDI',             field: 'pressoBDI',                filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.getBooleanAsString(data.data, 'pressoBDI'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'DATA APERTURA',          field: 'dataApertura',             filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'dataApertura'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'DATA CHIUSURA',          field: 'dataChiusura',             filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'dataChiusura'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'INIZIO VALIDITA\\'',      field: 'validFrom',                filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validFrom'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'FINE VALIDITA\\'',        field: 'validTo',                  filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validTo'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'AZIONI',                 field: '',                         resizable: true, cellRendererFramework: GenericActionRenderComponent, cellRendererParams: {modelFn: this.buildActionRenderModel.bind(this)}, sortable: false, exportOptions: {skipColumn: true}, pinned: 'right', minWidth: 150}\r\n    ];\r\n  }\r\n\r\n  buildActionRenderModel(data): ActionRenderModel {\r\n    this.inserimentoContoModel.contoDCAPadre = data.id;\r\n    const selectButton = <ButtonModel> {\r\n      label: 'Seleziona Conto '.concat(data.nunmeroConto),\r\n      routerLink: this.inserimentoContoModel.prefixUrl.concat('step4'),\r\n      params: this.inserimentoContoModel,\r\n      enabled: true,\r\n      sessionKey: this.CONTO_INSERT_SESSION\r\n    };\r\n\r\n    return <ActionRenderModel> {\r\n      detailButton: null,\r\n      modifyButton: null,\r\n      deleteButton: null,\r\n      selectButton: selectButton\r\n    };\r\n  }\r\n\r\n  protected buildRsqlSearchString() {\r\n\r\n    const today = new Date();\r\n\r\n    const rSQLArray: string [] = [];\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.bicParty.value, 'bicParty'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.tipoParty.value, 'tipoParty'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.nomeParty.value, 'nomeParty '));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.bicConto.value, 'bic'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.targetService.value, 'targetService'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.idConto.value, 'numeroConto'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.abi.value, 'abi'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.tipoConto.value, 'tipoConto'));\r\n    rSQLArray.push(this.rSQLUtils.manageBooleanSelect( this.formatterUtils.getStringAsBoolean(this.defaultMCA.value), 'mcaDefFlag'));\r\n    rSQLArray.push(this.rSQLUtils.manageBooleanSelect( this.flagPressoBDI.value, 'pressoBdi'));\r\n    rSQLArray.push(this.rSQLUtils.manageBooleanSelect( this.formatterUtils.getStringAsBoolean(this.flagInserimentoManuale.value), 'flgMan'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.filiale.value, 'filialeRiferimento'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.indResidenza.value, 'effIndicatoreRes'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.catEconomica.value, 'effCatEconomica'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataAperturaDa.value), this.formatterUtils.dateToString(this.dataAperturaA.value), 'dataApertura'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataChiusuraDa.value), this.formatterUtils.dateToString(this.dataChiusuraA.value), 'dataChiusura'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString({day: today.getUTCDate(), month: (today.getUTCMonth() + 1), year: today.getFullYear()}), this.formatterUtils.dateToString({day: 31, month: 12, year: 9999}), 'validTo'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteInserimento.value, 'utenteRichiesta'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteApprovatore.value, 'utenteValidazione'));\r\n\r\n    const searchString = this.rSQLUtils.getSearchString(rSQLArray);\r\n    console.log('RSQL searchString:' + searchString);\r\n    return searchString;\r\n  }\r\n\r\n  getTipoContoValue() {\r\n    return this.tipiConto.find( f => f.codice == this.tipoConto.value).descrizione;\r\n  }\r\n\r\n  getPressoBDIValue() {\r\n    const val = (!!this.inserimentoContoModel.pressoBDI ? TipoFlagEnum.SI : TipoFlagEnum.NO);\r\n    return this.tipiPressoBDI.find( t => t.codice ==  val).descrizione;\r\n  }\r\n\r\n  protected getSearcModel() {\r\n    return this.contoService.insertContosearchContoPadreModel;\r\n  }\r\n\r\n  protected setSearcModel(searchModel: SearchModel) {\r\n    return this.contoService.insertContosearchContoPadreModel = searchModel;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9jb250aS9pbnNlcmltZW50by1jb250by9pbnNlcmltZW50by1jb250by1zdGVwNC9pbnNlcmltZW50by1jb250by1zdGVwNC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {AbstractContiComponent} from '../../abstract-conti.component';\r\nimport {Conto, InserimentoContoModel, TipoConto} from '../../../../../models/conto';\r\nimport {GetPartiesResponse, Party, TipoParty} from '../../../../../models/party';\r\nimport {Button, InfoPanelElement, InfoPanelModel} from '../../../../../models/info-panel-model';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PartyService} from '../../../../../services/party.service';\r\nimport {FilialeService} from '../../../../../services/filiale.service';\r\nimport {ContoService} from '../../../../../services/conto.service';\r\nimport {SecurityService, UserService} from '../../../../../services';\r\nimport {FilterUtils} from '../../../../../utilities/filterUtils';\r\nimport {FormatterUtils} from '../../../../../utilities/formatterUtils';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {RSQLUtils} from '../../../../../utilities/rsqlUtil';\r\nimport {Utils} from '../../../../../utilities/util';\r\nimport {RoutingService} from '../../../../../services/routing.service';\r\nimport {catchError, filter, mergeMap, switchMap, tap, toArray} from 'rxjs/operators';\r\nimport {forkJoin, of} from 'rxjs';\r\nimport {TipoContoEnum, TipoFlagEnum, TipoOperazioneEnum} from '../../../../../models/enum';\r\nimport {IDatepickerModel} from 'scam-bdi-uikit/lib/daterangepicker/interfaces';\r\nimport {ModalService} from 'scam-bdi-uikit';\r\nimport {TaskConto, TaskParty} from '../../../../../models/task';\r\nimport {TaskService} from '../../../../../services/task.service';\r\nimport {dateValidator} from \"../../../../../validators/date-validator\";\r\n\r\n@Component({\r\n    selector: 'app-inserimento-conto-step4',\r\n    templateUrl: './inserimento-conto-step4.component.html',\r\n    styleUrls: ['./inserimento-conto-step4.component.scss']\r\n})\r\nexport class InserimentoContoStep4Component extends  AbstractContiComponent implements OnInit {\r\n\r\n    contoDCAPadre: Conto;\r\n    partyProprietario: Party;\r\n    infoPanelContoModel: InfoPanelModel;\r\n    inserimentoContoModel: InserimentoContoModel;\r\n    inserimentoForm: FormGroup;\r\n    util: Utils ;\r\n    minDate: IDatepickerModel;\r\n    maxDate: IDatepickerModel;\r\n\r\n    @ViewChild('confirmModal', { static: false })\r\n    confirmModal: TemplateRef<any>;\r\n    confirmModalReference: any;\r\n\r\n    constructor(\r\n        router: Router,\r\n        protected partyService: PartyService,\r\n        protected filialeService: FilialeService,\r\n        protected contoService: ContoService,\r\n        protected securityService: SecurityService,\r\n        protected userService: UserService,\r\n        private filterUtils: FilterUtils,\r\n        protected formatterUtils: FormatterUtils,\r\n        private formBuilder: FormBuilder,\r\n        private rSQLUtils: RSQLUtils,\r\n        private utils: Utils,\r\n        protected routingService: RoutingService,\r\n        protected route: ActivatedRoute,\r\n        protected modalService: ModalService,\r\n        protected taskService: TaskService,\r\n    ) {\r\n        super(partyService, filialeService, contoService, securityService, userService, formatterUtils, routingService, route);\r\n        this.util = utils;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.checkUserSpi();\r\n        this.route.queryParams.subscribe(params => {\r\n            const inserimentoContoSessionObj = this.getSession(this.CONTO_INSERT_SESSION);\r\n            if (!!inserimentoContoSessionObj) {\r\n                this.inserimentoContoModel = inserimentoContoSessionObj;\r\n                this.buildCombo();\r\n                this.loadSections();\r\n                this.inserimentoContoModel.wizardSteps = this.setStepForInsertConto(this.inserimentoContoModel, 'step4');\r\n                this.backUrl = this.getBackUrlForInsertConto(this.inserimentoContoModel, 'step4');\r\n            } else {\r\n                this.setError();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private loadSections () {\r\n        this.showSpinner();\r\n\r\n        const calls = [];\r\n        if (!!this.inserimentoContoModel.idParty) {\r\n            const getPartyProprietario = this.partyService.getParty(this.inserimentoContoModel.idParty).pipe(\r\n                tap( res => this.partyProprietario = res)\r\n            );\r\n            calls.push(getPartyProprietario);\r\n        }\r\n        if (!!this.inserimentoContoModel.contoDCAPadre) {\r\n            const getContoDCAPadre = this.contiService.getConto(this.inserimentoContoModel.contoDCAPadre).pipe(\r\n                tap(res => this.contoDCAPadre = <Conto>res));\r\n            calls.push(getContoDCAPadre);\r\n        }\r\n\r\n        if(!!calls && calls.length) {\r\n            const getTipiConto = this.contiService.getTipiConto().pipe(\r\n                tap( res => this.tipiConto = res))\r\n            ;\r\n            calls.push(getTipiConto);\r\n            forkJoin(calls).pipe (\r\n                tap( res => {\r\n                    this.buildPartyProprietarioSection();\r\n                    this.buildContoDCAPadreSection();\r\n                    this.buildForm();\r\n                    this.hideSpinner();\r\n                }),\r\n                catchError((error) => {\r\n                    console.log ('Error - loadSections', error);\r\n                    this.setError();\r\n                    this.hideSpinner();\r\n                    return of(null);\r\n                })\r\n            ).subscribe();\r\n        } else {\r\n            this.contiService.getTipiConto().pipe(\r\n                tap( res => this.tipiConto = res),\r\n                tap( res => {\r\n                    this.buildForm();\r\n                    this.hideSpinner();\r\n                }),\r\n                catchError((error) => {\r\n                    console.log ('Error - loadSections', error);\r\n                    this.setError();\r\n                    this.hideSpinner();\r\n                    return of(null);\r\n                })\r\n            ).subscribe();\r\n        }\r\n    }\r\n\r\n    private buildPartyProprietarioSection() {\r\n        if (!!this.partyProprietario) {\r\n            const data = [\r\n                [this.buildInfoPanelElement('Party Bic', 'string', this.partyProprietario, 'bic'), this.buildInfoPanelElement('Tipo Party', 'string', this.partyProprietario, 'tipoParty.descrizione')],\r\n                [this.buildInfoPanelElement('Nome Party', 'string', this.partyProprietario, 'nome'), this.buildInfoPanelElement('ABI', 'string', this.partyProprietario, 'defaultAbi')],\r\n                [this.buildInfoPanelElement('Filiale Riferimento', 'string', this.partyProprietario, 'filialeRiferimento.descrizione'), this.buildInfoPanelElement('MFI COde', 'string', this.partyProprietario, 'mfiCode')],\r\n                [this.buildInfoPanelElement('Indicatore di Residenza', 'string', this.partyProprietario, 'indicatoreResidenza'), this.buildInfoPanelElement('Categoria Economica', 'string', this.partyProprietario, 'categoriaEconomica')],\r\n                [this.buildInfoPanelElement('Data Apertura Party', 'date', this.partyProprietario, 'dataApertura'), this.buildInfoPanelElement('Data Chiusura Party', 'date', this.partyProprietario, 'dataChiusura')],\r\n                [this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.partyProprietario, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.partyProprietario, 'validTo')],\r\n                [this.buildInfoPanelElement('Utente Inserimento/Modifica', 'string', this.partyProprietario, 'utenteRichiesta'), this.buildInfoPanelElement('Utente Approvatore', 'string', this.partyProprietario, 'utenteValidazione')]\r\n            ];\r\n\r\n            this.infoPanelPartyModel = <InfoPanelModel>{\r\n                columnNumber: 2,\r\n                data: data\r\n            };\r\n        }\r\n    }\r\n\r\n    private buildContoDCAPadreSection() {\r\n        if (!!this.contoDCAPadre) {\r\n            const data = [\r\n                [this.buildInfoPanelElement('Bic', 'string', this.contoDCAPadre, 'bic'), this.buildInfoPanelElement('Target Service', 'string', this.contoDCAPadre, 'targetService')],\r\n                [this.buildInfoPanelElement('Account Id', 'string', this.contoDCAPadre, 'numeroConto'), this.buildInfoPanelElement('ABI', 'string', this.contoDCAPadre, 'abi')],\r\n                [this.buildInfoPanelElement('Tipo Conto', 'string', this.contoDCAPadre, 'tipoConto.descrizione'), this.buildInfoPanelElement('Descrizione', 'string', this.contoDCAPadre, 'descrizione')],\r\n                [this.buildInfoPanelElement('Default MCA', 'boolean', this.contoDCAPadre, 'mcaDefFlag'), this.buildInfoPanelElement('Presso BDI', 'boolean', this.contoDCAPadre, 'pressoBDI')],\r\n                [this.buildInfoPanelElement('Flag Inserimento Manuale', 'boolean', this.contoDCAPadre, 'flgMan'), this.buildInfoPanelElement('Indicatore di Residenza', 'string', this.contoDCAPadre, 'indicatoreResidenza')],\r\n                [this.buildInfoPanelElement('Categoria Economica', 'string', this.contoDCAPadre, 'categoriaEconomica'), this.buildInfoPanelElement('Data Apertura Party', 'date', this.contoDCAPadre, 'dataApertura')],\r\n                [this.buildInfoPanelElement('Data Chiusura Party', 'date', this.contoDCAPadre, 'dataChiusura'), this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.contoDCAPadre, 'validFrom')],\r\n                [this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.contoDCAPadre, 'validTo'), this.buildInfoPanelElement('Utente Inserimento/Modifica', 'string', this.contoDCAPadre, 'utenteRichiesta')],\r\n                [this.buildInfoPanelElement('Utente Approvatore', 'string', this.contoDCAPadre, 'utenteValidazione'), {}]\r\n            ];\r\n\r\n            this.infoPanelContoModel = <InfoPanelModel>{\r\n                columnNumber: 2,\r\n                data: data\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildForm() {\r\n\r\n        /*this.contiService.getTipiConto().pipe(\r\n            tap( res => this.tipiConto = res)\r\n        ).subscribe( res => {*/\r\n\r\n            if (!!this.partyProprietario) {\r\n                const da = new Date(this.partyProprietario.dataApertura);\r\n                const dc = new Date(this.partyProprietario.dataChiusura);\r\n                this.minDate =  {day: da.getUTCDate(), month: (da.getUTCMonth() + 1), year: da.getFullYear()};\r\n                this.maxDate = {day: dc.getUTCDate(), month: (dc.getUTCMonth() + 1), year: dc.getFullYear()};\r\n            }\r\n            this.inserimentoForm = this.formBuilder.group({\r\n                bicConto:  new FormControl(null,   [ this.requiredBicValidator.bind(this), this.bicValidator.bind(this)]),\r\n                tipoConto: new FormControl(this.inserimentoContoModel.tipoConto,   [Validators.required]),\r\n                descrizione: new FormControl( null,   [Validators.required]),\r\n                idConto: new FormControl(null,   [ Validators.required]),\r\n                abi: new FormControl((!!this.partyProprietario ? this.partyProprietario.defaultAbi : null),   [Validators.required]),\r\n                targetService: new FormControl(null,   [Validators.required]),\r\n                defaultMCA: new FormControl(null,   [this.defaultMCAValueValidator.bind(this)]),\r\n                flagPressoBDI: new FormControl((!!this.inserimentoContoModel.pressoBDI ? 1 : 0),   [Validators.required]),\r\n                flagInserimentoManuale: new FormControl(0,   [Validators.required]),\r\n                dataApertura: new FormControl(null, [Validators.required]   ),\r\n                dataChiusura: new FormControl(null, [] ),\r\n                indResidenza: new FormControl((!!this.partyProprietario ? this.partyProprietario.indicatoreResidenza : null),   []),\r\n                catEconomica: new FormControl((!!this.partyProprietario ? this.partyProprietario.categoriaEconomica : null),   []),\r\n            }, { validator: dateValidator( [\r\n                    {field1: 'dataApertura', minDate1: this.minDate, maxDate1: this.maxDate, field2: 'dataChiusura'}\r\n                ]) });\r\n\r\n            this.inserimentoForm.get('targetService').setValue(this.tipiConto.find( t => t.codice == this.inserimentoContoModel.tipoConto).targetService)\r\n        //});\r\n    }\r\n\r\n    requiredBicValidator (control: FormControl): {[s: string]: boolean } {\r\n        if (  !!this.inserimentoForm &&\r\n            !this.checkContoIsSubAccountByTipoCod(this.inserimentoContoModel.tipoConto) &&\r\n            !this.inserimentoForm.get('bicConto').value ) {\r\n            return {'bicReq': true};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    defaultMCAValueValidator (control: FormControl): {[s: string]: boolean } {\r\n        if (  !!this.inserimentoForm &&\r\n            this.checkTipoConto() &&\r\n            !this.inserimentoForm.get('defaultMCA').value  ) {\r\n            return {'value': true};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get bicConto() { return this.inserimentoForm.get('bicConto'); }\r\n    get targetService() { return this.inserimentoForm.get('targetService'); }\r\n    get descrizione() { return this.inserimentoForm.get('descrizione'); }\r\n    get idConto() { return this.inserimentoForm.get('idConto'); }\r\n    get abi() { return this.inserimentoForm.get('abi'); }\r\n    get tipoConto() { return this.inserimentoForm.get('tipoConto'); }\r\n    get defaultMCA() { return this.inserimentoForm.get('defaultMCA'); }\r\n    get flagPressoBDI() { return this.inserimentoForm.get('flagPressoBDI'); }\r\n    get flagInserimentoManuale() { return this.inserimentoForm.get('flagInserimentoManuale'); }\r\n    get indResidenza() { return this.inserimentoForm.get('indResidenza'); }\r\n    get catEconomica() { return this.inserimentoForm.get('catEconomica'); }\r\n    get dataApertura() { return this.inserimentoForm.get('dataApertura'); }\r\n    get dataChiusura() { return this.inserimentoForm.get('dataChiusura'); }\r\n\r\n    reset( field) {\r\n        this.inserimentoForm.get(field).setValue(null);\r\n    }\r\n\r\n    checkTipoConto(): boolean {\r\n        return (this.tipoConto.value == 'CLM_MCA' || this.tipoConto.value == 'CLM_CB');\r\n    }\r\n\r\n    getTipoValue(): string {\r\n        return this.tipiConto.find( t => t.codice == this.tipoConto.value).descrizione;\r\n    }\r\n\r\n    getPressoBDIValue() {\r\n        const val = (!!this.inserimentoContoModel.pressoBDI ? TipoFlagEnum.SI : TipoFlagEnum.NO);\r\n        return this.tipiPressoBDI.find( t => t.codice ==  val).descrizione;\r\n    }\r\n\r\n    getTargetServiceValue(): string {\r\n        if(!! this.targetService.value) {\r\n            return this.tipiTargetService.find(t => t.codice == this.targetService.value).descrizione;\r\n        }\r\n    }\r\n\r\n    getFlagInserimentoManualeValue() {\r\n        const val = TipoFlagEnum.NO;\r\n        return this.tipiPressoBDI.find( t => t.codice ==  val).descrizione;\r\n    }\r\n\r\n    getDataAperturaValue() {\r\n        return this.formatterUtils.dateToString(this.dataApertura.value);\r\n    }\r\n\r\n    getDataChiusuraValue() {\r\n        return this.formatterUtils.dateToString(this.dataChiusura.value);\r\n    }\r\n\r\n    openModal() {\r\n        if (!!this.inserimentoForm.valid) {\r\n            this.confirmModalReference = this.modalService.open(this.confirmModal);\r\n        }\r\n    }\r\n\r\n    protected closeModal() {\r\n        this.confirmModalReference.close();\r\n    }\r\n\r\n    confirm () {\r\n        this.confirmModalReference.close();\r\n        this.saveConto();\r\n    }\r\n\r\n    private saveConto () {\r\n        this.resetError();\r\n        this.showSpinner();\r\n        const taskConto = this.buildTaskConto();\r\n        this.taskService.saveTaskConto(taskConto).pipe(\r\n            tap( res => {\r\n                this.isResultOk = true;\r\n                const d = new Date(res.dataChiusura);\r\n                this.inserimentoForm.get('dataChiusura').setValue({year: d.getFullYear(), month: d.getUTCMonth() + 1, day: d.getUTCDate()});\r\n                this.hideSpinner();\r\n                this.readonlyForm = true;\r\n            }),\r\n            catchError((error) => {\r\n                console.log ('Error - saveConto', error);\r\n                this.setError(error);\r\n                this.hideSpinner();\r\n                return of(null);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    private buildTaskConto (): TaskConto {\r\n\r\n        //NB: i campi categoriaEconomica, indicatoreResidenza, flgMan sono valorizzati lato BE\r\n        return <TaskConto> {\r\n            operazione: {\r\n                codice: TipoOperazioneEnum.INS\r\n            },\r\n            abi: this.abi.value,\r\n            bic: this.bicConto.value,\r\n            bicParty: (!!this.partyProprietario ? this.partyProprietario.bic : null),\r\n            categoriaEconomica: null,\r\n            descrizione: this.descrizione.value,\r\n            flgMan: null,\r\n            indicatoreResidenza: null,\r\n            mcaDefFlag: (!!this.defaultMCA.value ? ((this.defaultMCA.value == TipoFlagEnum.SI) ? true : false) : null),\r\n            numeroConto: this.idConto.value,\r\n            pressoBdi: this.inserimentoContoModel.pressoBDI,\r\n            subParBicDca: (!!this.contoDCAPadre ? this.contoDCAPadre.bic : null),\r\n            subParTsDca: (!!this.contoDCAPadre ? this.contoDCAPadre.targetService : null),\r\n            targetService: this.targetService.value,\r\n            tipoConto: {\r\n                codice: this.tipoConto.value\r\n            },\r\n            tipoParty: (!!this.partyProprietario ? this.partyProprietario.tipoParty : null),\r\n            dataApertura: this.formatterUtils.dateToString(this.dataApertura.value),\r\n            dataChiusura: this.formatterUtils.dateToString((!!this.dataChiusura.value ? this.dataChiusura.value : {year: 9999, month: 12, day: 31}))\r\n        };\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InserimentoContoRoutingModule } from './inserimento-conto-routing.module';\r\nimport {RicercaContiComponent} from '../ricerca-conti/ricerca-conti.component';\r\nimport {InserimentoContoStep1Component} from './inserimento-conto-step1/inserimento-conto-step1.component';\r\nimport {InserimentoContoStep2Component} from './inserimento-conto-step2/inserimento-conto-step2.component';\r\nimport {InserimentoContoStep3Component} from './inserimento-conto-step3/inserimento-conto-step3.component';\r\nimport {InserimentoContoStep4Component} from './inserimento-conto-step4/inserimento-conto-step4.component';\r\nimport {ModificaContoComponent} from '../modifica-conto/modifica-conto.component';\r\nimport {EliminazioneLogicaContoComponent} from '../eliminazione-logica-conto/eliminazione-logica-conto.component';\r\nimport {GepaGuiCommonModule} from '../../../../common/gepagui-common.module';\r\nimport {ContiRoutingModule} from '../conti-routing.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BDIAlertModule, BDIDatagridModule, BDIDatepickerModule} from 'scam-bdi-uikit';\r\nimport {GenericTableModule} from '../../generic-table/generic-table.module';\r\nimport {InfoPanelModule} from '../../info-panel/info-panel.module';\r\nimport {GenericActionRenderComponent} from '../../generic-action-render/generic-action-render.component';\r\nimport { BDITooltipModule, TooltipDirective } from 'scam-bdi-uikit';\r\nimport {GenericActionRenderModule} from '../../generic-action-render/generic-action-render.module';\r\n\r\n@NgModule({\r\n  declarations: [InserimentoContoStep1Component, InserimentoContoStep2Component, InserimentoContoStep3Component, InserimentoContoStep4Component],\r\n  imports: [\r\n    CommonModule,\r\n    GepaGuiCommonModule,\r\n    InserimentoContoRoutingModule,\r\n    ReactiveFormsModule,\r\n    BDIAlertModule.forRoot(),\r\n    BDIDatepickerModule,\r\n    FormsModule,\r\n    GenericTableModule,\r\n    InfoPanelModule,\r\n    BDIDatagridModule.withComponents([\r\n      GenericActionRenderComponent,\r\n    ]),\r\n   BDITooltipModule.forRoot(),\r\n    GenericActionRenderModule\r\n  ]\r\n})\r\nexport class InserimentoContoModule { }\r\n"],"sourceRoot":"webpack:///"}