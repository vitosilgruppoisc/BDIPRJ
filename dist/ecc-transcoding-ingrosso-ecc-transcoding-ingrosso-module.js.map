{"version":3,"sources":["./src/app/views/anagrafiche/ecc-transcoding-ingrosso/dettaglio-ecc-transcoding-ingrosso/dettaglio-ecc-transcoding-ingrosso.component.html","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/eliminazione-logica-ecc-transcoding-ingrosso/eliminazione-logica-ecc-transcoding-ingrosso.component.html","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/inserimento-ecc-transcoding-ingrosso/inserimento-ecc-transcoding-ingrosso.component.html","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/modifica-ecc-transcoding-ingrosso/modifica-ecc-transcoding-ingrosso.component.html","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/ricerca-ecc-transcoding-ingrosso/ricerca-ecc-transcoding-ingrosso.component.html","./src/app/services/ecc-transcoding-ingrosso.service.ts","./src/app/validators/ecc-trans-ingr-cab-validator.ts","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/abstract-ecc-transcoding-ingrosso.component.ts","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/dettaglio-ecc-transcoding-ingrosso/dettaglio-ecc-transcoding-ingrosso.component.scss","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/dettaglio-ecc-transcoding-ingrosso/dettaglio-ecc-transcoding-ingrosso.component.ts","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/ecc-transcoding-ingrosso-routing.module.ts","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/ecc-transcoding-ingrosso.module.ts","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/eliminazione-logica-ecc-transcoding-ingrosso/eliminazione-logica-ecc-transcoding-ingrosso.component.scss","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/eliminazione-logica-ecc-transcoding-ingrosso/eliminazione-logica-ecc-transcoding-ingrosso.component.ts","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/inserimento-ecc-transcoding-ingrosso/inserimento-ecc-transcoding-ingrosso.component.scss","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/inserimento-ecc-transcoding-ingrosso/inserimento-ecc-transcoding-ingrosso.component.ts","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/modifica-ecc-transcoding-ingrosso/modifica-ecc-transcoding-ingrosso.component.scss","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/modifica-ecc-transcoding-ingrosso/modifica-ecc-transcoding-ingrosso.component.ts","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/ricerca-ecc-transcoding-ingrosso/ricerca-ecc-transcoding-ingrosso.component.scss","./src/app/views/anagrafiche/ecc-transcoding-ingrosso/ricerca-ecc-transcoding-ingrosso/ricerca-ecc-transcoding-ingrosso.component.ts"],"names":[],"mappings":"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","file":"ecc-transcoding-ingrosso-ecc-transcoding-ingrosso-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Eccezione Transcodifica Ingrosso </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Eccezione Transcodifica Ingrosso</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row mb-2\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\"class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-times-circle\\\"></i> Chiusura Eccezione Transcodifica Ingrosso </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" *ngIf=\\\"!isActive\\\">\\r\\n                    L'eccezione non risulta attiva e non può essere modificata.\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"eliminazioneForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"abi\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"eccTransIngr.abi\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"cab\\\" class=\\\"col-2 col-form-label\\\">Cab:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"cab\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"eccTransIngr.cab\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"tipoConto\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"eccTransIngr.tipoConto\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"bicConto\\\" class=\\\"col-2 col-form-label\\\">Bic Conto<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicConto\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"eccTransIngr.bicConto\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"verso\\\" class=\\\"col-2 col-form-label\\\">Verso:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"verso\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"eccTransIngr.verso\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"eccTransIngr.descrizione\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataInizioValidita\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità: </label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <input id=\\\"dataInizioValidita\\\" class=\\\"form-control\\\" [readOnly]=\\\"true\\\" [value]=\\\"eccTransIngr.validFrom\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"dataFineValidita\\\" class=\\\"col-2 col-form-label\\\">Data Fine Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else dataFineValiditaTempl\\\">\\r\\n                                <input id=\\\"dataFineValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValidita.invalid  && (form.submitted || (dataFineValidita.dirty || dataFineValidita.touched))\\\"placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValidita\\\"  bdiDatepicker #datepickerDIV=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIV.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!!dataFineValidita.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.required && form.submitted\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.dateformat  && (dataFineValidita.dirty || dataFineValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <!--<div *ngIf=\\\"dataFineValidita.errors?.mindate  && (dataFineValidita.dirty || dataFineValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Data inferiore al limite inferiore consentito (data inizio validità): {{formatterUtils.dateToString(minDate)}}\\r\\n                                </div>\\r\\n                                -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #dataFineValiditaTempl>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataFineValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-plus-square\\\"></i> Nuova Eccezione Transcodifica Ingrosso </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"inserimentoForm\\\" (ngSubmit)=\\\"saveEccTranscodingIngrosso()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && (form.submitted || (abi.dirty || abi.touched))\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]{5}$'\\\" [readOnly]=\\\"readonlyForm \\\"/>\\r\\n                                <div *ngIf=\\\"abi.errors?.required && (form.submitted || (abi.dirty || abi.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"abi.errors?.pattern && (form.submitted || (abi.dirty || abi.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"cab\\\" class=\\\"col-2 col-form-label\\\">Cab<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"cab\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"cab.invalid && (form.submitted || (cab.dirty || cab.touched))\\\" formControlName=\\\"cab\\\" maxlength=\\\"5\\\" [readOnly]=\\\"readonlyForm || readonlyCab\\\"/>\\r\\n                                <div *ngIf=\\\"cab.errors?.required && (form.submitted || (cab.dirty || cab.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"cab.errors?.pattern && (form.submitted || (cab.dirty || cab.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"cab.errors?.ruleCab && (form.submitted || (cab.dirty || cab.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Il valore del Cab può essere diverso da zero se il verso è AB e il tipoConto è RTGS.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select *ngIf=\\\"!readonlyForm; else inputTipo\\\" id=\\\"tipoConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipoConto.invalid && (form.submitted || (tipoConto.dirty || tipoConto.touched))\\\" formControlName=\\\"tipoConto\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of tipiConto\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"tipoConto.errors?.required && (form.submitted || (tipoConto.dirty || tipoConto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <ng-template #inputTipo>\\r\\n                                <input class=\\\"form-control\\\" [value]=\\\"getTipoValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <label for=\\\"bicConto\\\" class=\\\"col-2 col-form-label\\\">Bic Conto<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicConto.invalid && (form.submitted || (bicConto.dirty || bicConto.touched))\\\" formControlName=\\\"bicConto\\\" [readOnly]=\\\"readonlyForm\\\" toUppercase/>\\r\\n                                <div *ngIf=\\\"bicConto.errors?.required && (form.submitted || (bicConto.dirty || bicConto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicConto.errors?.syntax && (form.submitted || (bicConto.dirty || bicConto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"verso\\\" class=\\\"col-2 col-form-label\\\">Verso<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select *ngIf=\\\"!readonlyForm; else inputVerso\\\" id=\\\"verso\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"verso.invalid && (form.submitted || (verso.dirty || verso.touched))\\\" formControlName=\\\"verso\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of tipiVerso\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"verso.errors?.required && (form.submitted || (verso.dirty || verso.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <ng-template #inputVerso>\\r\\n                                <input class=\\\"form-control\\\" [value]=\\\"getVersoValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataInizioValidita\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputdataInizioValidita\\\">\\r\\n                                <input id=\\\"dataInizioValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValidita.invalid && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValidita\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataInizioValidita.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.required && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.dateformat && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.daterange && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputdataInizioValidita>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataInizioValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <label for=\\\"dataFineValidita\\\" class=\\\"col-2 col-form-label\\\">Data Fine Validità:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputdataFineValidita\\\">\\r\\n                                <input id=\\\"dataFineValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValidita.invalid && (form.submitted || (dataFineValidita.dirty || dataFineValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValidita\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataFineValidita.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.dateformat  && (dataFineValidita.dirty || dataFineValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.daterange  && (dataFineValidita.dirty || dataFineValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputdataFineValidita>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataFineValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\" *ngIf=\\\"!readonlyForm\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\">Salva</button>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\" *ngIf=\\\"readonlyForm\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"resetForm()\\\">Nuovo Inserimento</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-edit\\\"></i> Modifica Eccezione Transcodifica Ingrosso </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" *ngIf=\\\"!isActive\\\">\\r\\n                    L'eccezione non risulta attiva e non può essere modificata.\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"modificaForm\\\" (ngSubmit)=\\\"modifyEccTranscodingIngrosso()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && (form.submitted || (abi.dirty || abi.touched))\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]{5}$'\\\" [readOnly]=\\\"!checkedabi.value || readonlyForm \\\"/>\\r\\n                                <div *ngIf=\\\"abi.errors?.required && (form.submitted || (abi.dirty || abi.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"abi.errors?.pattern && (form.submitted || (abi.dirty || abi.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedabi\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedabi\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedabi\\\" (click)=\\\"manageCheckBox('abi')\\\" [attr.disabled]=\\\"(verso.value === tipoVersoEnum.AB)?true:null\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"cab\\\" class=\\\"col-2 col-form-label\\\">Cab<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"cab\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"cab.invalid && (form.submitted || (cab.dirty || cab.touched))\\\" formControlName=\\\"cab\\\" maxlength=\\\"5\\\" [readOnly]=\\\"!checkedcab.value || readonlyForm\\\"/>\\r\\n                                <div *ngIf=\\\"cab.errors?.required && (form.submitted || (cab.dirty || cab.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"cab.errors?.pattern && (form.submitted || (cab.dirty || cab.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"cab.errors?.ruleCab && (form.submitted || (cab.dirty || cab.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Il valore del Cab può essere diverso da zero se il verso è AB e il tipoConto è RTGS.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedcab\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedcab\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedcab\\\" (click)=\\\"manageCheckBox('cab')\\\" [attr.disabled]=\\\"(verso.value === tipoVersoEnum.AB)?true:null\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <select *ngIf=\\\"checkedtipoConto.value && !readonlyForm; else inputTipo\\\" id=\\\"tipoConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipoConto.invalid && (form.submitted || (tipoConto.dirty || tipoConto.touched))\\\" formControlName=\\\"tipoConto\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of tipiConto\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"tipoConto.errors?.required && (form.submitted || (tipoConto.dirty || tipoConto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <ng-template #inputTipo>\\r\\n                                <input class=\\\"form-control\\\" [value]=\\\"getTipoValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedtipoConto\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedtipoConto\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedtipoConto\\\" (click)=\\\"manageCheckBox('tipoConto')\\\" [attr.disabled]=\\\"true\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"bicConto\\\" class=\\\"col-2 col-form-label\\\">Bic Conto<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicConto.invalid && (form.submitted || (bicConto.dirty || bicConto.touched))\\\" formControlName=\\\"bicConto\\\" [readOnly]=\\\"!checkedbicConto.value || readonlyForm\\\" toUppercase/>\\r\\n                                <div *ngIf=\\\"bicConto.errors?.required && (form.submitted || (bicConto.dirty || bicConto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicConto.errors?.syntax && (form.submitted || (bicConto.dirty || bicConto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedbicConto\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedbicConto\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedbicConto\\\" (click)=\\\"manageCheckBox('bicConto')\\\" [attr.disabled]=\\\"(verso.value === tipoVersoEnum.BA)?true:null\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"verso\\\" class=\\\"col-2 col-form-label\\\">Verso<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <select *ngIf=\\\"checkedverso.value && !readonlyForm; else inputVerso\\\" id=\\\"verso\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"verso.invalid && (form.submitted || (verso.dirty || verso.touched))\\\" formControlName=\\\"verso\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of tipiVerso\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"verso.errors?.required && (form.submitted || (verso.dirty || verso.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <ng-template #inputVerso>\\r\\n                                <input class=\\\"form-control\\\" [value]=\\\"getVersoValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedverso\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedverso\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedverso\\\" (click)=\\\"manageCheckBox('verso')\\\" [attr.disabled]=\\\"true\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"!checkeddescrizione.value || readonlyForm\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkeddescrizione\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddescrizione\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddescrizione\\\" (click)=\\\"manageCheckBox('descrizione')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataInizioValidita\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"(checkeddataInizioValidita.value && !readonlyForm); else inputdataInizioValidita\\\">\\r\\n                                <input id=\\\"dataInizioValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValidita.invalid && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValidita\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataInizioValidita.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.required && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.dateformat && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.mindate && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Data inferiore al limite minimo consentito (valore precedente di data inizio validità del record): {{formatterUtils.dateToString(minDate)}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputdataInizioValidita>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataInizioValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkeddataInizioValidita\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddataInizioValidita\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddataInizioValidita\\\" (click)=\\\"manageCheckBox('dataInizioValidita', 'date')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"dataFineValidita\\\" class=\\\"col-2 col-form-label\\\">Data Fine Validità:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"(checkeddataFineValidita.value && !readonlyForm); else inputdataFineValidita\\\">\\r\\n                                <input id=\\\"dataFineValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValidita.invalid && (form.submitted || (dataFineValidita.dirty || dataFineValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValidita\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataFineValidita.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputdataFineValidita>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataFineValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkeddataFineValidita\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddataFineValidita\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddataFineValidita\\\" [attr.disabled]=\\\"true\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\" >\\r\\n                        <div [innerHTML]=utils.getModificaMessage()></div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fa fa-users\\\"></i> Anagrafica Eccezioni Transcodifica Ingrosso </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row mb-2\\\" *ngIf=\\\"userIsSpi\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"goToInsertEccTranscodingIngrosso()\\\">Nuova Eccezione Transcodifica Ingrosso</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"ricercaForm\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Abi:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"abi\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"abi.invalid && (abi.dirty || abi.touched)\\\" formControlName=\\\"abi\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"abi.errors?.wildcard && (abi.dirty || abi.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"abi.errors?.pattern && (abi.dirty || abi.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"abi\\\" class=\\\"col-2 col-form-label\\\">Cab:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"cab\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"cab.invalid && (cab.dirty || cab.touched)\\\" formControlName=\\\"cab\\\" maxlength=\\\"5\\\" [pattern]=\\\"'^[0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"cab.errors?.wildcard && (cab.dirty || cab.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"cab.errors?.pattern && (cab.dirty || cab.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Tipo Conto:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"tipoConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipoConto.invalid && (tipoConto.dirty || tipoConto.touched)\\\" formControlName=\\\"tipoConto\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutte</option>\\r\\n                                <option *ngFor=\\\"let t of tipiConto\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"bicConto\\\" class=\\\"col-2 col-form-label\\\">Bic Conto:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicConto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicConto.invalid && (bicConto.dirty || bicConto.touched)\\\" formControlName=\\\"bicConto\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bicConto.errors?.wildcard && (bicConto.dirty || bicConto.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicConto.errors?.syntax && (bicConto.dirty || bicConto.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"tipoConto\\\" class=\\\"col-2 col-form-label\\\">Verso:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"verso\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"verso.invalid && (verso.dirty || verso.touched)\\\" formControlName=\\\"verso\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutte</option>\\r\\n                                <option *ngFor=\\\"let t of tipiVerso\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"descrizione.errors?.wildcard && (descrizione.dirty || descrizione.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--Data Inizio Validita-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Inizio Validità:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataInizioValiditaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataInizioValiditaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValiditaDa.invalid && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValiditaDa\\\"  bdiDatepicker #datepickerDIVda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIVda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataInizioValiditaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValiditaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaDa.errors?.dateformat && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaDa.errors?.daterange && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataInizioValiditaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataInizioValiditaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValiditaA.invalid && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValiditaA\\\"  bdiDatepicker #datepickerDIVa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIVa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataInizioValiditaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValiditaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaA.errors?.dateformat && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaA.errors?.daterange && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--Data Fine Validità:-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Fine Validità:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataFineValiditaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataFineValiditaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValiditaDa.invalid && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValiditaDa\\\"  bdiDatepicker #datepickerDFVda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDFVda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataFineValiditaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValiditaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataFineValiditaDa.errors?.dateformat && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataFineValiditaDa.errors?.daterange && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataFineValiditaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataFineValiditaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValiditaA.invalid && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValiditaA\\\"  bdiDatepicker #datepickerDFVa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDFVa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataFineValiditaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValiditaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataFineValiditaA.errors?.dateformat && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataFineValiditaA.errors?.daterange && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"utenteInserimento\\\" class=\\\"col-2 col-form-label\\\">Utente Inserimento:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteInserimento\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteInserimento.invalid && (utenteInserimento.dirty || utenteInserimento.touched)\\\" formControlName=\\\"utenteInserimento\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.wildcard && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.pattern && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"utenteApprovatore\\\" class=\\\"col-2 col-form-label\\\">Utente Approvatore:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteApprovatore\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteApprovatore.invalid && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" formControlName=\\\"utenteApprovatore\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.wildcard && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.pattern && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-2 mx-auto\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"submit(target, true)\\\">Cerca</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </form>\\r\\n\\r\\n                <div #target>\\r\\n                    <app-generic-table *ngIf=\\\"showTable\\\" [model]=\\\"eccTranscodingIngrossoModel\\\" (action)=\\\"onActionEvent($event)\\\" (colToDisplay)=\\\"onColToDisplayEvent($event, this.eccTranscodingIngrossoService.searchModel)\\\" (paginationChanged)=\\\"onPaginationEvent($event, this.eccTranscodingIngrossoService.searchModel)\\\" (sortChanged)=\\\"onSortEvent($event, this.eccTranscodingIngrossoService.searchModel)\\\" (filterChanged)=\\\"onFilterEvent($event, this.eccTranscodingIngrossoService.searchModel)\\\"></app-generic-table>\\r\\n                </div>\\r\\n\\r\\n            </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #wildcardTooltip>\\r\\n        <div class=\\\"input-group-append\\\" bdiTooltip=\\\"{{util.getWildcardTooltip()}}\\\" placement=\\\"right\\\">\\r\\n        <span class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fas fa-info-circle\\\"></i>\\r\\n        </span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport {SearchModel} from \"../models/search\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ConfigurationService} from \"./configuration.service\";\r\nimport {RSQLUtils} from \"../utilities/rsqlUtil\";\r\nimport {FormatterUtils} from \"../utilities/formatterUtils\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {GetPartiesResponse, Party} from \"../models/party\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {\r\n  EccTranscondingIngrosso,\r\n  GetEccTranscondingIngrossoResponse,\r\n  TipoVerso\r\n} from \"../models/ecc-transcoding-ingrosso\";\r\nimport {TipoConto} from \"../models/conto\";\r\nimport {TipoContoEccTranscodingIngrossoEnum, TipoFlagEnum, TipoVersoEnum} from \"../models/enum\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EccTranscodingIngrossoService {\r\n\r\n  private apiEndpoint = '';\r\n\r\n  public searchModel: SearchModel;\r\n\r\n  constructor(private http: HttpClient, private configurationService: ConfigurationService, private rSQLUtils: RSQLUtils, private formatterUtils: FormatterUtils) {\r\n    this.configurationService.config$.subscribe(config => {\r\n      this.apiEndpoint = config.gepaAnagraficheU2AEndpoint;\r\n    });\r\n  }\r\n\r\n  getEccezioniTranscodingIngrosso(searchString: string): Observable<GetEccTranscondingIngrossoResponse> {\r\n    return this.http.get<GetEccTranscondingIngrossoResponse>(`${this.apiEndpoint}/eccTranscodingIngrosso?${searchString}`).pipe(\r\n        tap(res => console.log(res))\r\n    );\r\n  }\r\n\r\n  getEccezioneTranscodingIngrosso(idEcc: string): Observable<EccTranscondingIngrosso> {\r\n    return this.http.get<EccTranscondingIngrosso>(`${this.apiEndpoint}/eccTranscodingIngrosso/${idEcc}`).pipe(\r\n        tap(res => console.log(res)),\r\n        catchError((error) => {\r\n              console.log('Error - getEccezioneTranscodingIngrosso', error);\r\n              return of(null);\r\n            }\r\n        )\r\n    );\r\n  }\r\n\r\n  getTipiConto(): Observable<TipoConto[]> {\r\n    return of ( [ {codice: TipoContoEccTranscodingIngrossoEnum.RTGS.valueOf(), descrizione: 'RTGS'}, {codice: TipoContoEccTranscodingIngrossoEnum.MCAD.valueOf(), descrizione: 'MCAD'}, {codice: TipoContoEccTranscodingIngrossoEnum.MCA.valueOf(), descrizione: 'MCA'}]);\r\n  }\r\n\r\n  getTipiVerso(): Observable<TipoVerso[]> {\r\n    return of ( [ {codice: TipoVersoEnum.AB.valueOf(), descrizione: 'AB'}, {codice: TipoVersoEnum.BA.valueOf(), descrizione: 'BA'}]);\r\n  }\r\n}\r\n","import {FormControl, FormGroup, ValidationErrors, ValidatorFn} from '@angular/forms';\r\nimport {FormatterUtils} from \"../utilities/formatterUtils\";\r\nimport {TipoContoEccTranscodingIngrossoEnum, TipoVersoEnum} from \"../models/enum\";\r\n\r\nexport function eccTranscodingIngrossoVersoValidator(): ValidatorFn {\r\n\r\n    return (form: FormGroup): ValidationErrors | null => {\r\n\r\n        const verso = form.controls['verso'];\r\n        const cab = form.controls['cab'];\r\n        const tipoConto = form.controls['tipoConto'];\r\n\r\n        if (!!cab && !!cab.value) {\r\n            if (cab.value !== '0') {\r\n                const pattern = '^[0-9%]{5}$';\r\n                if (!new RegExp(pattern).test(cab.value)) {\r\n                    cab.setErrors({pattern: true});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!!verso && !!verso.value && !!cab && !!cab.value && !!tipoConto && !!tipoConto.value) {\r\n            //Vedi mail del 3/09 da Ernesto ricci con oggetto Constraint su tabella ECC_INGROSSO\r\n            if ( !(\r\n                (cab.value === '0') ||\r\n                (verso.value === TipoVersoEnum.AB.valueOf() && tipoConto.value === TipoContoEccTranscodingIngrossoEnum.RTGS.valueOf())\r\n            )) {\r\n                cab.setErrors({ ruleCab: true});\r\n            }\r\n        }\r\n        return;\r\n    };\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TipoParty} from '../../../models/party';\r\nimport {FilialeRiferimento} from '../../../models/filiale';\r\nimport {tap} from 'rxjs/operators';\r\nimport {PartyService} from '../../../services/party.service';\r\nimport {FilialeService} from '../../../services/filiale.service';\r\nimport {SecurityService, UserService} from '../../../services';\r\nimport {FormatterUtils} from '../../../utilities/formatterUtils';\r\nimport {RoutingService} from '../../../services/routing.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {AbstractAnagraficheComponent} from '../abstract-anagrafiche.component';\r\nimport {EccTranscodingIngrossoService} from \"../../../services/ecc-transcoding-ingrosso.service\";\r\nimport {TipoConto} from \"../../../models/conto\";\r\nimport {ContoService} from \"../../../services/conto.service\";\r\nimport {TipoFlagEnum} from \"../../../models/enum\";\r\nimport {TipoVerso} from \"../../../models/ecc-transcoding-ingrosso\";\r\n\r\n\r\nexport abstract class AbstractEccTranscodingIngrossoComponent extends  AbstractAnagraficheComponent implements OnInit {\r\n\r\n    tipiConto: TipoConto[];\r\n    tipiVerso: TipoVerso[];\r\n    isActive: boolean = false;\r\n\r\n    constructor( protected eccTranscodingIngrossoService: EccTranscodingIngrossoService,\r\n                 protected securityService: SecurityService,\r\n                 protected userService: UserService,\r\n                 protected formatterUtils: FormatterUtils,\r\n                 protected routingService: RoutingService,\r\n                 protected route: ActivatedRoute) {\r\n\r\n        super(securityService, userService, formatterUtils, routingService, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.buildCombo();\r\n    }\r\n\r\n    protected buildCombo() {\r\n\r\n        this.eccTranscodingIngrossoService.getTipiConto().pipe(\r\n            tap( res => this.tipiConto = res)\r\n        ).subscribe();\r\n\r\n        this.eccTranscodingIngrossoService.getTipiVerso().pipe(\r\n            tap( res => this.tipiVerso = res)\r\n        ).subscribe();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28vZGV0dGFnbGlvLWVjYy10cmFuc2NvZGluZy1pbmdyb3Nzby9kZXR0YWdsaW8tZWNjLXRyYW5zY29kaW5nLWluZ3Jvc3NvLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {InfoPanelModel} from \"../../../../models/info-panel-model\";\r\nimport {GenericTableModel} from \"../../../../models/generic-table-model\";\r\nimport {Party} from \"../../../../models/party\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {PartyService} from \"../../../../services/party.service\";\r\nimport {FilialeService} from \"../../../../services/filiale.service\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {ContoService} from \"../../../../services/conto.service\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {FormBuilder} from \"@angular/forms\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {ModalService} from \"scam-bdi-uikit\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {AbstractAnagraficheComponent} from \"../../abstract-anagrafiche.component\";\r\nimport {AbstractEccTranscodingIngrossoComponent} from \"../abstract-ecc-transcoding-ingrosso.component\";\r\nimport {EccTranscodingIngrossoService} from \"../../../../services/ecc-transcoding-ingrosso.service\";\r\nimport {forkJoin, of} from \"rxjs\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {Conto} from \"../../../../models/conto\";\r\nimport {ContoAsSettlmentBank} from \"../../../../models/sfruttamento-dca\";\r\nimport {TipoPartyEnum} from \"../../../../models/enum\";\r\nimport {EccTranscondingIngrosso} from \"../../../../models/ecc-transcoding-ingrosso\";\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-ecc-transcoding-ingrosso',\r\n  templateUrl: './dettaglio-ecc-transcoding-ingrosso.component.html',\r\n  styleUrls: ['./dettaglio-ecc-transcoding-ingrosso.component.scss']\r\n})\r\nexport class DettaglioEccTranscodingIngrossoComponent extends  AbstractEccTranscodingIngrossoComponent implements OnInit {\r\n\r\n  infoPanelModel: InfoPanelModel;\r\n  eccTransIngr: EccTranscondingIngrosso;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      protected eccTranscodingIngrossoService: EccTranscodingIngrossoService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected route: ActivatedRoute,\r\n      protected routingService: RoutingService\r\n  ) {\r\n    super(eccTranscodingIngrossoService, securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkUserSpi();\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailEccSessionObj = this.getSession(this.routingService.ECC_TRANS_INGR_DETAIL);\r\n      if (!!detailEccSessionObj) {\r\n        this.loadSections(detailEccSessionObj.idEccTransIng);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(detailEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadSections (idEccTransIng: string) {\r\n    this.showSpinner();\r\n\r\n    this.eccTranscodingIngrossoService.getEccezioneTranscodingIngrosso(idEccTransIng).pipe (\r\n        tap( res => {\r\n          this.eccTransIngr = res;\r\n          this.buildEccTransIngrSection();\r\n\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildEccTransIngrSection() {\r\n    const data = [\r\n      [this.buildInfoPanelElement('Abi', 'string',  this.eccTransIngr, 'abi'), this.buildInfoPanelElement('Cab', 'string',  this.eccTransIngr, 'cab')],\r\n      [this.buildInfoPanelElement('Tipo Conto', 'string',  this.eccTransIngr, 'tipoConto'), this.buildInfoPanelElement('Bic Conto', 'string',  this.eccTransIngr, 'bicConto')],\r\n      [this.buildInfoPanelElement('Verso', 'string',  this.eccTransIngr, 'verso'), this.buildInfoPanelElement('Descrizione', 'string',  this.eccTransIngr, 'descrizione')],\r\n      [this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.eccTransIngr, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.eccTransIngr, 'validTo')],\r\n      [this.buildInfoPanelElement('Utente Inserimento/Modifica', 'string', this.eccTransIngr, 'utenteRichiesta'), this.buildInfoPanelElement('Utente Approvatore', 'string', this.eccTransIngr, 'utenteValidazione')]\r\n    ];\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {EUserRole} from \"../../../models\";\r\nimport {SecurityService} from \"../../../services\";\r\nimport {RicercaEccTranscodingIngrossoComponent} from \"./ricerca-ecc-transcoding-ingrosso/ricerca-ecc-transcoding-ingrosso.component\";\r\nimport {InserimentoPartyComponent} from \"../parties/inserimento-party/inserimento-party.component\";\r\nimport {InserimentoEccTranscodingIngrossoComponent} from \"./inserimento-ecc-transcoding-ingrosso/inserimento-ecc-transcoding-ingrosso.component\";\r\nimport {DettaglioEccTranscodingIngrossoComponent} from \"./dettaglio-ecc-transcoding-ingrosso/dettaglio-ecc-transcoding-ingrosso.component\";\r\nimport {ModificaContoComponent} from \"../conti/modifica-conto/modifica-conto.component\";\r\nimport {EliminazioneLogicaContoComponent} from \"../conti/eliminazione-logica-conto/eliminazione-logica-conto.component\";\r\nimport {ModificaEccTranscodingIngrossoComponent} from \"./modifica-ecc-transcoding-ingrosso/modifica-ecc-transcoding-ingrosso.component\";\r\nimport {EliminazioneLogicaEccTranscodingIngrossoComponent} from \"./eliminazione-logica-ecc-transcoding-ingrosso/eliminazione-logica-ecc-transcoding-ingrosso.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Anagrafiche Eccezioni Transcodifica Ingrosso',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: RicercaEccTranscodingIngrossoComponent,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio',\r\n        component: DettaglioEccTranscodingIngrossoComponent,\r\n        data: {\r\n          title: 'Dettaglio Eccezione Transcodifica Ingrosso',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'inserimento',\r\n        component: InserimentoEccTranscodingIngrossoComponent,\r\n        data: {\r\n          title: 'Nuova Eccezione Transcodifica Ingrosso',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'modifica',\r\n        component: ModificaEccTranscodingIngrossoComponent,\r\n        data: {\r\n          title: 'Modifica Eccezione Transcodifica Ingrosso',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'eliminazione-logica',\r\n        component: EliminazioneLogicaEccTranscodingIngrossoComponent,\r\n        data: {\r\n          title: 'Eliminazione Logica Eccezione Transcodifica Ingrosso',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI]\r\n        },\r\n        canActivate: [SecurityService],\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EccTranscodingIngrossoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EccTranscodingIngrossoRoutingModule } from './ecc-transcoding-ingrosso-routing.module';\r\nimport { RicercaEccTranscodingIngrossoComponent } from './ricerca-ecc-transcoding-ingrosso/ricerca-ecc-transcoding-ingrosso.component';\r\nimport {GepaGuiCommonModule} from \"../../../common/gepagui-common.module\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {BDIAlertModule, BDIDatagridModule, BDIDatepickerModule, BDITooltipModule} from \"scam-bdi-uikit\";\r\nimport {GenericTableModule} from \"../generic-table/generic-table.module\";\r\nimport {InfoPanelModule} from \"../info-panel/info-panel.module\";\r\nimport {GenericActionRenderComponent} from \"../generic-action-render/generic-action-render.component\";\r\nimport {GenericActionRenderModule} from \"../generic-action-render/generic-action-render.module\";\r\nimport { DettaglioEccTranscodingIngrossoComponent } from './dettaglio-ecc-transcoding-ingrosso/dettaglio-ecc-transcoding-ingrosso.component';\r\nimport {InserimentoEccTranscodingIngrossoComponent} from \"./inserimento-ecc-transcoding-ingrosso/inserimento-ecc-transcoding-ingrosso.component\";\r\nimport { ModificaEccTranscodingIngrossoComponent } from './modifica-ecc-transcoding-ingrosso/modifica-ecc-transcoding-ingrosso.component';\r\nimport { EliminazioneLogicaEccTranscodingIngrossoComponent } from './eliminazione-logica-ecc-transcoding-ingrosso/eliminazione-logica-ecc-transcoding-ingrosso.component';\r\nimport {DirectiveModule} from \"../../../directive/directive.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [RicercaEccTranscodingIngrossoComponent, DettaglioEccTranscodingIngrossoComponent, InserimentoEccTranscodingIngrossoComponent, ModificaEccTranscodingIngrossoComponent, EliminazioneLogicaEccTranscodingIngrossoComponent],\r\n    imports: [\r\n        CommonModule,\r\n        GepaGuiCommonModule,\r\n        EccTranscodingIngrossoRoutingModule,\r\n        ReactiveFormsModule,\r\n        BDIAlertModule.forRoot(),\r\n        BDIDatepickerModule,\r\n        FormsModule,\r\n        GenericTableModule,\r\n        InfoPanelModule,\r\n        BDIDatagridModule.withComponents([\r\n            GenericActionRenderComponent,\r\n        ]),\r\n        BDITooltipModule.forRoot(),\r\n        GenericActionRenderModule,\r\n        DirectiveModule\r\n    ],\r\n  entryComponents: [GenericActionRenderComponent],\r\n})\r\nexport class EccTranscodingIngrossoModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28vZWxpbWluYXppb25lLWxvZ2ljYS1lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28vZWxpbWluYXppb25lLWxvZ2ljYS1lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractEccTranscodingIngrossoComponent} from \"../abstract-ecc-transcoding-ingrosso.component\";\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {IDatepickerModel} from \"scam-bdi-uikit/lib/daterangepicker/interfaces\";\r\nimport {EccTranscondingIngrosso} from \"../../../../models/ecc-transcoding-ingrosso\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {EccTranscodingIngrossoService} from \"../../../../services/ecc-transcoding-ingrosso.service\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {TaskEccTranscodingIngrosso, TaskParty} from \"../../../../models/task\";\r\nimport {TipoOperazioneEnum} from \"../../../../models/enum\";\r\n\r\n@Component({\r\n    selector: 'app-eliminazione-logica-ecc-transcoding-ingrosso',\r\n    templateUrl: './eliminazione-logica-ecc-transcoding-ingrosso.component.html',\r\n    styleUrls: ['./eliminazione-logica-ecc-transcoding-ingrosso.component.scss']\r\n})\r\nexport class EliminazioneLogicaEccTranscodingIngrossoComponent extends AbstractEccTranscodingIngrossoComponent implements OnInit {\r\n\r\n    eccTransIngr: EccTranscondingIngrosso;\r\n    minDate: IDatepickerModel;\r\n\r\n    eliminazioneForm: FormGroup;\r\n\r\n    constructor(\r\n        router: Router,\r\n        protected eccTranscodingIngrossoService: EccTranscodingIngrossoService,\r\n        protected securityService: SecurityService,\r\n        protected userService: UserService,\r\n        private filterUtils: FilterUtils,\r\n        protected formatterUtils: FormatterUtils,\r\n        private formBuilder: FormBuilder,\r\n        private taskService: TaskService,\r\n        protected routingService: RoutingService,\r\n        protected route: ActivatedRoute\r\n    ) {\r\n        super(eccTranscodingIngrossoService, securityService, userService, formatterUtils, routingService, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.route.queryParams.subscribe(params => {\r\n            const deleteEccSessionObj = this.getSession(this.routingService.ECC_TRANS_INGR_DELETE);\r\n            if (!!deleteEccSessionObj) {\r\n                this.load(deleteEccSessionObj.idEccTransIng);\r\n                this.backUrl = this.backUrl = this.routingService.getRouteByKey(deleteEccSessionObj.backUrl);\r\n            } else {\r\n                this.setError();\r\n            }\r\n        });\r\n    }\r\n\r\n    private load (idEcc: string) {\r\n        this.showSpinner();\r\n        this.eccTranscodingIngrossoService.getEccezioneTranscodingIngrosso(idEcc).pipe(\r\n            tap( res => {\r\n                this.eccTransIngr = res;\r\n                this.isActive = this.isEccTranscodingIngrossoActive(this.eccTransIngr);\r\n                if (!this.isActive) {\r\n                    this.readonlyForm = true;\r\n                }\r\n                const validFrom = new Date(this.eccTransIngr.validFrom);\r\n                const validTo = new Date(this.eccTransIngr.validTo);\r\n                //this.minDate = {day: validFrom.getUTCDate(), month: (validFrom.getUTCMonth() + 1), year: validFrom.getFullYear()};\r\n                this.eliminazioneForm = this.formBuilder.group({\r\n                    dataFineValidita: new FormControl(  {year: validTo.getFullYear(), month: (validTo.getUTCMonth() + 1), day: validTo.getUTCDate()} , [Validators.required]),\r\n                }, { validator: dateValidator( [\r\n                        {field1: 'dataFineValidita', /*minDate1: this.minDate,*/ required1: true}\r\n                    ]) });\r\n                this.hideSpinner();\r\n            }),\r\n            catchError((error) => {\r\n                console.log ('Error - load', error);\r\n                this.setError(error);\r\n                this.hideSpinner();\r\n                return of(null);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    get dataFineValidita() { return this.eliminazioneForm.get('dataFineValidita'); }\r\n\r\n    reset(field) {\r\n        this.eliminazioneForm.get(field).setValue(undefined);\r\n    }\r\n\r\n    onSubmit() {\r\n        this.resetError();\r\n        this.isResultOk = false;\r\n\r\n        if (this.eliminazioneForm.valid) {\r\n            this.showSpinner();\r\n            const taskEccTranscodingIngrossoReq = this.buildTaskEccTranscodingIngrosso();\r\n            this.taskService.saveTaskEccTranscodingIngrosso(taskEccTranscodingIngrossoReq).pipe(\r\n                tap( res => {\r\n                    this.eliminazioneForm.get('dataFineValidita').setValue(res.validTo);\r\n                    this.isResultOk = true;\r\n                    this.hideSpinner();\r\n                    this.readonlyForm = true;\r\n                }),\r\n                catchError((error) => {\r\n                    console.log ('Error - onSubmit', error);\r\n                    this.setError(error);\r\n                    this.hideSpinner();\r\n                    return of(null);\r\n                })\r\n            ).subscribe();\r\n        }\r\n    }\r\n\r\n    private buildTaskEccTranscodingIngrosso (): TaskEccTranscodingIngrosso {\r\n        return <TaskEccTranscodingIngrosso> {\r\n            operazione: {\r\n                codice: TipoOperazioneEnum.DEL\r\n            },\r\n            validTo: this.formatterUtils.dateToString(this.dataFineValidita.value),\r\n            idEccOrig: this.eccTransIngr.id\r\n        };\r\n    }\r\n\r\n     getDataFineValiditaValue() {\r\n        return  this.eliminazioneForm.get('dataFineValidita').value;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28vaW5zZXJpbWVudG8tZWNjLXRyYW5zY29kaW5nLWluZ3Jvc3NvL2luc2VyaW1lbnRvLWVjYy10cmFuc2NvZGluZy1pbmdyb3Nzby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {IDatepickerModel} from \"scam-bdi-uikit/lib/daterangepicker/interfaces\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {PartyService} from \"../../../../services/party.service\";\r\nimport {FilialeService} from \"../../../../services/filiale.service\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {InfostatService} from \"../../../../services/infostat.service\";\r\nimport {ModalService} from \"scam-bdi-uikit\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {AbstractEccTranscodingIngrossoComponent} from \"../abstract-ecc-transcoding-ingrosso.component\";\r\nimport {EccTranscodingIngrossoService} from \"../../../../services/ecc-transcoding-ingrosso.service\";\r\nimport {\r\n  TipoContoEccTranscodingIngrossoEnum,\r\n  TipoContoEnum,\r\n  TipoOperazioneEnum,\r\n  TipoVersoEnum\r\n} from \"../../../../models/enum\";\r\nimport {eccTranscodingIngrossoVersoValidator} from \"../../../../validators/ecc-trans-ingr-cab-validator\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\nimport {TaskEccTranscodingIngrosso, TaskParty} from \"../../../../models/task\";\r\n\r\n@Component({\r\n  selector: 'app-inserimento-ecc-transcoding-ingrosso',\r\n  templateUrl: './inserimento-ecc-transcoding-ingrosso.component.html',\r\n  styleUrls: ['./inserimento-ecc-transcoding-ingrosso.component.scss']\r\n})\r\nexport class InserimentoEccTranscodingIngrossoComponent extends AbstractEccTranscodingIngrossoComponent implements OnInit {\r\n\r\n  inserimentoForm: FormGroup;\r\n  readonlyCab = false;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected eccTranscodingIngrossoService: EccTranscodingIngrossoService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private taskService: TaskService,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(eccTranscodingIngrossoService, securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      const insertEccSessionObj = this.getSession(this.routingService.ECC_TRANS_INGR_INSERT);\r\n      if (!!insertEccSessionObj) {\r\n        this.backUrl = this.routingService.getRouteByKey(insertEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n    super.ngOnInit();\r\n    this.buildForm();\r\n  }\r\n\r\n  private buildForm() {\r\n    this.inserimentoForm = this.formBuilder.group({\r\n      abi:  new FormControl(null,   [Validators.required]),\r\n      cab: new FormControl(null,   [Validators.required]),\r\n      tipoConto: new FormControl(null,   [Validators.required]),\r\n      bicConto: new FormControl(null,    [Validators.required, this.bicValidator.bind(this)]),\r\n      verso: new FormControl(null,   [Validators.required]),\r\n      descrizione: new FormControl(null,   []),\r\n      dataInizioValidita: new FormControl(null, [Validators.required]),\r\n      dataFineValidita: new FormControl(null, [])\r\n    }, {validator: Validators.compose(          [\r\n            dateValidator( [{field1: 'dataInizioValidita', required1: true,  field2: 'dataFineValidita'}]),\r\n            eccTranscodingIngrossoVersoValidator()\r\n          ]\r\n      )});\r\n\r\n    this.verso.valueChanges.subscribe(\r\n        () => {\r\n          this.manageVerso();\r\n        }\r\n    );\r\n\r\n    this.tipoConto.valueChanges.subscribe(\r\n        () => {\r\n          this.manageVerso();\r\n        }\r\n    );\r\n  }\r\n\r\n  private manageVerso(){\r\n    //this.manageRuleOnCab();\r\n    this.cab.updateValueAndValidity();\r\n  }\r\n\r\n  private manageRuleOnCab() {\r\n    this.readonlyCab = false;\r\n    if ( !!this.verso && !!this.verso.value && !!this.tipoConto && !!this.tipoConto.value) {\r\n      if (! (this.verso.value === TipoVersoEnum.AB.valueOf() && this.tipoConto.value === TipoContoEccTranscodingIngrossoEnum.RTGS.valueOf())) {\r\n        this.cab.setValue(0);\r\n        this.readonlyCab = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  get abi() { return this.inserimentoForm.get('abi'); }\r\n  get cab() { return this.inserimentoForm.get('cab'); }\r\n  get bicConto() { return this.inserimentoForm.get('bicConto'); }\r\n  get tipoConto() { return this.inserimentoForm.get('tipoConto'); }\r\n  get verso() { return this.inserimentoForm.get('verso'); }\r\n  get descrizione() { return this.inserimentoForm.get('descrizione'); }\r\n  get dataInizioValidita() { return this.inserimentoForm.get('dataInizioValidita'); }\r\n  get dataFineValidita() { return this.inserimentoForm.get('dataFineValidita'); }\r\n\r\n  reset(field) {\r\n    this.inserimentoForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  saveEccTranscodingIngrosso() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.inserimentoForm.valid) {\r\n      this.showSpinner();\r\n      const taskEccTranscodingIngrosso = this.buildTaskEccTranscodingIngrosso();\r\n      this.taskService.saveTaskEccTranscodingIngrosso(taskEccTranscodingIngrosso).pipe(\r\n          tap( res => {\r\n            const d = new Date(res.validTo);\r\n            this.inserimentoForm.get('dataFineValidita').setValue({year: d.getFullYear(), month: d.getUTCMonth() + 1, day: d.getUTCDate()});\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - saveEccTranscodingIngrosso', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private buildTaskEccTranscodingIngrosso (): TaskEccTranscodingIngrosso {\r\n\r\n    return <TaskEccTranscodingIngrosso> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.INS\r\n      },\r\n\r\n      abi: this.abi.value,\r\n      cab: this.cab.value,\r\n      bicConto: this.bicConto.value,\r\n      tipoConto: this.tipoConto.value,\r\n      verso: this.verso.value,\r\n      descrizione: this.descrizione.value,\r\n      validFrom: this.formatterUtils.dateToString(this.dataInizioValidita.value),\r\n      validTo: this.formatterUtils.dateToString((!!this.dataFineValidita.value ? this.dataFineValidita.value : {year: 9999, month: 12, day: 31}))\r\n    };\r\n  }\r\n\r\n  resetForm() {\r\n    this.readonlyForm = false;\r\n    this.isResultOk = false;\r\n    this.readonlyCab = false;\r\n    this.buildForm();\r\n  }\r\n\r\n  getTipoValue(): string {\r\n    return this.tipiConto.find( t => t.codice == this.tipoConto.value).descrizione;\r\n  }\r\n\r\n  getVersoValue(): string {\r\n    return this.tipiVerso.find( f => f.codice == this.verso.value).descrizione;\r\n  }\r\n\r\n  getDataInizioValiditaValue() {\r\n    return this.formatterUtils.dateToString(this.dataInizioValidita.value);\r\n  }\r\n\r\n  getDataFineValiditaValue() {\r\n    return this.formatterUtils.dateToString(this.dataFineValidita.value);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28vbW9kaWZpY2EtZWNjLXRyYW5zY29kaW5nLWluZ3Jvc3NvL21vZGlmaWNhLWVjYy10cmFuc2NvZGluZy1pbmdyb3Nzby5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {IDatepickerModel} from \"scam-bdi-uikit/lib/daterangepicker/interfaces\";\r\nimport {Party, TipoParty} from \"../../../../models/party\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {PartyService} from \"../../../../services/party.service\";\r\nimport {FilialeService} from \"../../../../services/filiale.service\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {InfostatService} from \"../../../../services/infostat.service\";\r\nimport {ModalService} from \"scam-bdi-uikit\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {AbstractEccTranscodingIngrossoComponent} from \"../abstract-ecc-transcoding-ingrosso.component\";\r\nimport {EccTranscodingIngrossoService} from \"../../../../services/ecc-transcoding-ingrosso.service\";\r\nimport {TaskEccTranscodingIngrosso, TaskParty} from \"../../../../models/task\";\r\nimport {EccTranscondingIngrosso} from \"../../../../models/ecc-transcoding-ingrosso\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {eccTranscodingIngrossoVersoValidator} from \"../../../../validators/ecc-trans-ingr-cab-validator\";\r\nimport {TipoContoEccTranscodingIngrossoEnum, TipoOperazioneEnum, TipoVersoEnum} from \"../../../../models/enum\";\r\nimport { get} from 'lodash';\r\nimport {FilialeRiferimento} from \"../../../../models/filiale\";\r\nimport {Utils} from \"../../../../utilities/util\";\r\n\r\n@Component({\r\n  selector: 'app-modifica-ecc-transcoding-ingrosso',\r\n  templateUrl: './modifica-ecc-transcoding-ingrosso.component.html',\r\n  styleUrls: ['./modifica-ecc-transcoding-ingrosso.component.scss']\r\n})\r\nexport class ModificaEccTranscodingIngrossoComponent extends AbstractEccTranscodingIngrossoComponent implements OnInit {\r\n\r\n  modificaForm: FormGroup;\r\n  minDate: IDatepickerModel;\r\n  eccTransIngr: EccTranscondingIngrosso;\r\n  tipoVersoEnum = TipoVersoEnum;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected eccTranscodingIngrossoService: EccTranscodingIngrossoService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private taskService: TaskService,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute,\r\n      private utils: Utils,\r\n  ) {\r\n    super(eccTranscodingIngrossoService, securityService, userService, formatterUtils, routingService, route);\r\n    this.utils = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const modifyEccSessionObj = this.getSession(this.routingService.ECC_TRANS_INGR_MODIFY);\r\n      if (!!modifyEccSessionObj) {\r\n        this.load(modifyEccSessionObj.idEccTransIng);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(modifyEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private load (idEcc: string) {\r\n    this.showSpinner();\r\n    this.eccTranscodingIngrossoService.getEccezioneTranscodingIngrosso(idEcc).pipe(\r\n        tap( res => {\r\n          this.eccTransIngr = res;\r\n          this.isActive = this.isEccTranscodingIngrossoActive(this.eccTransIngr);\r\n          if (!this.isActive) {\r\n            this.readonlyForm = true;\r\n          }\r\n          this.buildForm();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - load', error);\r\n          this.setError(error);\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildForm() {\r\n    const validFrom = new Date(this.eccTransIngr.validFrom);\r\n    const validTo = new Date(this.eccTransIngr.validTo);\r\n    this.minDate =  {day: validFrom.getUTCDate(), month: (validFrom.getUTCMonth() + 1), year: validFrom.getFullYear()};\r\n    this.modificaForm = this.formBuilder.group({\r\n      abi:  new FormControl(this.eccTransIngr.abi,   [Validators.required]),\r\n      cab: new FormControl(this.eccTransIngr.cab,   [Validators.required]),\r\n      tipoConto: new FormControl(this.eccTransIngr.tipoConto,   [Validators.required]),\r\n      bicConto: new FormControl(this.eccTransIngr.bicConto,    [Validators.required, this.bicValidator.bind(this)]),\r\n      verso: new FormControl(this.eccTransIngr.verso,   [Validators.required]),\r\n      descrizione: new FormControl(this.eccTransIngr.descrizione,   []),\r\n      dataInizioValidita: new FormControl({year: validFrom.getFullYear(), month: (validFrom.getUTCMonth() + 1), day: validFrom.getUTCDate()}, [Validators.required]),\r\n      dataFineValidita: new FormControl({year: validTo.getFullYear(), month: (validTo.getUTCMonth() + 1), day: validTo.getUTCDate()}, []),\r\n      checkedabi:  new FormControl(false,   []),\r\n      checkedcab:  new FormControl(false,   []),\r\n      checkedtipoConto:  new FormControl(false,   []),\r\n      checkedbicConto:  new FormControl(false,   []),\r\n      checkedverso:  new FormControl(false,   []),\r\n      checkeddescrizione:  new FormControl(false,   []),\r\n      checkeddataInizioValidita:  new FormControl(false,   []),\r\n      checkeddataFineValidita:  new FormControl(false,   [])\r\n    }, {validator: Validators.compose(          [\r\n            dateValidator( [{field1: 'dataInizioValidita', minDate1: this.minDate}]),\r\n            eccTranscodingIngrossoVersoValidator()\r\n          ]\r\n      )});\r\n\r\n    this.verso.valueChanges.subscribe(\r\n        () => {\r\n          this.manageVerso();\r\n        }\r\n    );\r\n\r\n    this.tipoConto.valueChanges.subscribe(\r\n        () => {\r\n          this.manageVerso();\r\n        }\r\n    );\r\n  }\r\n\r\n  private manageVerso() {\r\n    this.cab.updateValueAndValidity();\r\n  }\r\n\r\n  get abi() { return this.modificaForm.get('abi'); }\r\n  get cab() { return this.modificaForm.get('cab'); }\r\n  get bicConto() { return this.modificaForm.get('bicConto'); }\r\n  get tipoConto() { return this.modificaForm.get('tipoConto'); }\r\n  get verso() { return this.modificaForm.get('verso'); }\r\n  get descrizione() { return this.modificaForm.get('descrizione'); }\r\n  get dataInizioValidita() { return this.modificaForm.get('dataInizioValidita'); }\r\n  get dataFineValidita() { return this.modificaForm.get('dataFineValidita'); }\r\n  get checkedabi() { return this.modificaForm.get('checkedabi'); }\r\n  get checkedcab() { return this.modificaForm.get('checkedcab'); }\r\n  get checkedbicConto() { return this.modificaForm.get('checkedbicConto'); }\r\n  get checkedtipoConto() { return this.modificaForm.get('checkedtipoConto'); }\r\n  get checkedverso() { return this.modificaForm.get('checkedverso'); }\r\n  get checkeddescrizione() { return this.modificaForm.get('checkeddescrizione'); }\r\n  get checkeddataInizioValidita() { return this.modificaForm.get('checkeddataInizioValidita'); }\r\n  get checkeddataFineValidita() { return this.modificaForm.get('checkeddataFineValidita'); }\r\n\r\n  reset(field) {\r\n    this.modificaForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  manageCheckBox(field: string, type?: string) {\r\n    if (this.modificaForm.get('checked'.concat(field)).value) {\r\n      let val = get(this.eccTransIngr, field);\r\n      if (!!type && type == 'date') {\r\n        val = this.formatterUtils.getValueForDateinDatePickerFormat(val);\r\n      }\r\n      this.modificaForm.get(field).setValue(val);\r\n    } else {\r\n      //this.modificaForm.get(field).setValue(null);\r\n    }\r\n  }\r\n\r\n  public modifyEccTranscodingIngrosso() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.modificaForm.valid) {\r\n      this.showSpinner();\r\n      const taskEccTranscodingIngrossoReq = this.buildTaskEccTranscodingIngrosso();\r\n      this.taskService.saveTaskEccTranscodingIngrosso(taskEccTranscodingIngrossoReq).pipe(\r\n          tap( res => {\r\n            if (!!res) {\r\n              this.eccTransIngr.validFrom = res.validFrom;\r\n              this.eccTransIngr.verso = res.verso;\r\n              this.eccTransIngr.tipoConto = res.tipoConto;\r\n            }\r\n\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - modifyEccTranscodingIngrosso', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private  buildTaskEccTranscodingIngrosso (): TaskEccTranscodingIngrosso {\r\n    return <TaskEccTranscodingIngrosso> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.UPD\r\n      },\r\n      tipoTask: null,\r\n      stato: null,\r\n      tsInserimento: null,\r\n      userReq: null,\r\n      tsValidate: null,\r\n      userValidate: null,\r\n      noteRifiuto: null,\r\n\r\n      abi: this.abi.value,\r\n      cab: this.cab.value,\r\n      bicConto: this.bicConto.value,\r\n      tipoConto: this.tipoConto.value,\r\n      verso: this.verso.value,\r\n      descrizione: this.descrizione.value,\r\n      validFrom: (!!this.dataInizioValidita.value ? this.formatterUtils.dateToString(this.dataInizioValidita.value) : null),\r\n      validTo: null,\r\n      tsModifica: null,\r\n      utenteRichiesta: null,\r\n      utenteValidazione: null,\r\n\r\n      abiToEdit: this.checkedabi.value,\r\n      cabToEdit: this.checkedcab.value,\r\n      bicContoToEdit: this.checkedbicConto.value,\r\n      tipoContoToEdit: this.checkedtipoConto.value,\r\n      versoToEdit: this.checkedverso.value,\r\n      descrizioneToEdit: this.checkeddescrizione.value,\r\n      validFromToEdit: (!!this.dataInizioValidita.value ? true : false),\r\n      validToToEdit: false,\r\n      tsModificaToEdit: false,\r\n      utenteRichiestaToEdit: true,\r\n      utenteValidazioneToEdit: false,\r\n\r\n      idEccOrig: this.eccTransIngr.id,\r\n      abiOrig: null,\r\n      cabOrig: null,\r\n      bicOrig: null,\r\n      tipoOrig: null,\r\n      versoOrig: null,\r\n      descrizioneOrig: null,\r\n      validFromOrig: null,\r\n      validToOrig: null,\r\n      tsModificaOrig: null,\r\n      utenteRichiestaOrig: null,\r\n      utenteValidazioneOrig: null\r\n    };\r\n  }\r\n\r\n  getTipoValue(): string {\r\n    return this.tipiConto.find( t => t.codice == this.tipoConto.value).descrizione;\r\n  }\r\n\r\n  getVersoValue(): string {\r\n    return this.tipiVerso.find( f => f.codice == this.verso.value).descrizione;\r\n  }\r\n\r\n  getDataInizioValiditaValue() {\r\n    return this.formatterUtils.dateToString(this.dataInizioValidita.value);\r\n  }\r\n\r\n  getDataFineValiditaValue() {\r\n    return this.formatterUtils.dateToString(this.dataFineValidita.value);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28vcmljZXJjYS1lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28vcmljZXJjYS1lY2MtdHJhbnNjb2RpbmctaW5ncm9zc28uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {EccTranscodingIngrossoService} from \"../../../../services/ecc-transcoding-ingrosso.service\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {AbstractEccTranscodingIngrossoComponent} from \"../abstract-ecc-transcoding-ingrosso.component\";\r\nimport {GenericTableModel} from \"../../../../models/generic-table-model\";\r\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\r\nimport {Utils} from \"../../../../utilities/util\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {get} from 'lodash';\r\nimport {RSQLUtils} from \"../../../../utilities/rsqlUtil\";\r\nimport {SearchModel} from \"../../../../models/search\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {ContoService} from \"../../../../services/conto.service\";\r\nimport {GenericActionRenderComponent} from \"../../generic-action-render/generic-action-render.component\";\r\nimport {ActionRenderModel, ButtonModel} from \"../../../../models/action-render-model\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-ricerca-ecc-transcoding-ingrosso',\r\n  templateUrl: './ricerca-ecc-transcoding-ingrosso.component.html',\r\n  styleUrls: ['./ricerca-ecc-transcoding-ingrosso.component.scss']\r\n})\r\nexport class RicercaEccTranscodingIngrossoComponent extends AbstractEccTranscodingIngrossoComponent implements OnInit {\r\n\r\n  eccTranscodingIngrossoModel: GenericTableModel;\r\n  showTable = false;\r\n  ricercaForm: FormGroup;\r\n  util: Utils ;\r\n\r\n  constructor( protected eccTranscodingIngrossoService: EccTranscodingIngrossoService,\r\n               protected securityService: SecurityService,\r\n               protected userService: UserService,\r\n               protected filterUtils: FilterUtils,\r\n               protected formatterUtils: FormatterUtils,\r\n               protected formBuilder: FormBuilder,\r\n               protected rSQLUtils: RSQLUtils,\r\n               protected utils: Utils,\r\n               protected routingService: RoutingService,\r\n               protected route: ActivatedRoute,\r\n               protected router: Router) {\r\n\r\n    super(eccTranscodingIngrossoService, securityService, userService, formatterUtils, routingService, route);\r\n    this.util = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.buildForm();\r\n    this.buildModel();\r\n    this.manageNavigation();\r\n  }\r\n\r\n  protected manageNavigation() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (!!params && !!get(params, this.BACK) && !!this.getSearcModel()) {\r\n        this.ricercaForm.setValue(this.getSearcModel().form);\r\n        this.submit(null, false);\r\n      } else {\r\n        this.setSearcModel(this.initSearchModel());\r\n      }\r\n    });\r\n  }\r\n\r\n  protected getSearcModel() {\r\n    return this.eccTranscodingIngrossoService.searchModel;\r\n  }\r\n\r\n  protected setSearcModel(searchModel: SearchModel) {\r\n    return this.eccTranscodingIngrossoService.searchModel = searchModel;\r\n  }\r\n\r\n  protected buildForm() {\r\n    this.ricercaForm = this.formBuilder.group({\r\n      abi: new FormControl(null, [this.wildcard2Validator.bind(this)]   ),\r\n      cab: new FormControl(null, [this.wildcard2Validator.bind(this)]   ),\r\n      bicConto: new FormControl(null, [this.wildcard2Validator.bind(this), this.bicValidator.bind(this)] ),\r\n      tipoConto: new FormControl(null, []   ),\r\n      verso: new FormControl(null, [] ),\r\n      descrizione: new FormControl(null, [this.wildcard2Validator.bind(this)] ),\r\n      dataInizioValiditaDa: new FormControl(null, []   ),\r\n      dataInizioValiditaA: new FormControl(null, []   ),\r\n      dataFineValiditaDa: new FormControl(null, []   ),\r\n      dataFineValiditaA: new FormControl(null, []   ),\r\n      utenteInserimento: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      utenteApprovatore: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n    }, { validator: dateValidator( [\r\n        {field1: 'dataInizioValiditaDa', field2: 'dataInizioValiditaA'},\r\n        {field1: 'dataFineValiditaDa', field2: 'dataFineValiditaA'}\r\n      ]) });\r\n  }\r\n\r\n  get abi() { return this.ricercaForm.get('abi'); }\r\n  get cab() { return this.ricercaForm.get('cab'); }\r\n  get bicConto() { return this.ricercaForm.get('bicConto'); }\r\n  get tipoConto() { return this.ricercaForm.get('tipoConto'); }\r\n  get verso() { return this.ricercaForm.get('verso'); }\r\n  get descrizione() { return this.ricercaForm.get('descrizione'); }\r\n  get dataInizioValiditaDa() { return this.ricercaForm.get('dataInizioValiditaDa'); }\r\n  get dataInizioValiditaA() { return this.ricercaForm.get('dataInizioValiditaA'); }\r\n  get dataFineValiditaDa() { return this.ricercaForm.get('dataFineValiditaDa'); }\r\n  get dataFineValiditaA() { return this.ricercaForm.get('dataFineValiditaA'); }\r\n  get utenteInserimento() { return this.ricercaForm.get('utenteInserimento'); }\r\n  get utenteApprovatore() { return this.ricercaForm.get('utenteApprovatore'); }\r\n\r\n  reset( field) {\r\n    this.ricercaForm.get(field).setValue(null);\r\n  }\r\n\r\n  buildModel() {\r\n    this.eccTranscodingIngrossoModel = {\r\n      domLayout: 'autoHeight',\r\n      gridOptions: {\r\n        rowHeight: 30,\r\n        paginationPageSize: 10,\r\n        defaultColDef: {\r\n          sortable: true\r\n        },\r\n        context: {\r\n          componentParent: this\r\n        },\r\n        onGridReady: () => this.initializeGrid()\r\n      },\r\n      rowData: [],\r\n      pagination: true,\r\n      columnsFitAvailable: true,\r\n      columnDefs: this.buildColumnDef(),\r\n      enableCsvExport: true,\r\n      enablePdfExport: true,\r\n      enableColumnSelection: true\r\n    };\r\n  }\r\n\r\n  protected initializeGrid(): void {\r\n    this.eccTranscodingIngrossoModel.gridOptions.api.sizeColumnsToFit();\r\n    this.eccTranscodingIngrossoModel.gridOptions.onGridSizeChanged = evt =>  this.eccTranscodingIngrossoModel.gridOptions.api ?  this.eccTranscodingIngrossoModel.gridOptions.api.sizeColumnsToFit() : null;\r\n  }\r\n\r\n  protected buildColumnDef() {\r\n    let order = 0;\r\n    return  [\r\n      {colId: ('id_' + order++), headerName: 'ABI',                    field: 'abi',              filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'CAB',                    field: 'cab',              filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'VERSO',                  field: 'verso',            filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'BIC CONTO',              field: 'bicConto',         filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'TIPO CONTO',             field: 'tipoConto',        filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'INIZIO VALIDITA\\'',      field: 'validFrom',        filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validFrom'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'FINE VALIDITA\\'',        field: 'validTo',          filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validTo'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'AZIONI',                 field: '',                 resizable: true, cellRendererFramework: GenericActionRenderComponent, cellRendererParams: {modelFn: this.buildActionRenderModel.bind(this)}, sortable: false, exportOptions: {skipColumn: true}, pinned: 'right', minWidth: 150}\r\n    ];\r\n  }\r\n\r\n  public buildActionRenderModel(data): ActionRenderModel {\r\n    let detailButton =  null;\r\n\r\n    if (this.userIsSpi || this.userIsBil || this.userIsVis) {\r\n      detailButton = <ButtonModel>{\r\n        label: 'Visualizza dettaglio Eccezione ',\r\n        routerLink: this.routingService.getRouteByKey(this.routingService.ECC_TRANS_INGR_DETAIL),\r\n        params: {idEccTransIng: data.id, backUrl: this.routingService.ECC_TRANS_INGR_SEARCH},\r\n        enabled: true,\r\n        sessionKey: this.routingService.ECC_TRANS_INGR_DETAIL\r\n      };\r\n    }\r\n\r\n    let modifyButton =  null;\r\n    let deleteButton =  null;\r\n\r\n    if (this.userIsSpi && this.isEccTranscodingIngrossoActive(data)) {\r\n      modifyButton = <ButtonModel> {\r\n        label: 'Modifica Eccezione ',\r\n        routerLink: this.routingService.getRouteByKey(this.routingService.ECC_TRANS_INGR_MODIFY),\r\n        params: {idEccTransIng: data.id, backUrl: this.routingService.ECC_TRANS_INGR_SEARCH},\r\n        enabled: true,\r\n        sessionKey : this.routingService.ECC_TRANS_INGR_MODIFY\r\n      };\r\n      deleteButton = <ButtonModel> {\r\n        label: 'Cancellazione Logica Eccezione ',\r\n        routerLink: this.routingService.getRouteByKey(this.routingService.ECC_TRANS_INGR_DELETE),\r\n        params: {idEccTransIng: data.id, backUrl: this.routingService.ECC_TRANS_INGR_SEARCH},\r\n        enabled: true,\r\n        sessionKey : this.routingService.ECC_TRANS_INGR_DELETE\r\n      };\r\n    }\r\n    return <ActionRenderModel> {\r\n      detailButton: detailButton,\r\n      modifyButton: modifyButton,\r\n      deleteButton: deleteButton\r\n    };\r\n  }\r\n\r\n  submit(targetEl: HTMLElement, resetPage: boolean) {\r\n\r\n    this.showTable = false;\r\n    this.resetError();\r\n    this.eccTranscodingIngrossoModel.rowData = [];\r\n    this.eccTranscodingIngrossoModel.enableMessageOnSizeResultLimit = false;\r\n\r\n    this.manageSearchModel( this.eccTranscodingIngrossoModel, this.getSearcModel(), resetPage);\r\n\r\n    if (!!this.ricercaForm.valid) {\r\n      this.showSpinner();\r\n\r\n      if (!this.getSearcModel()) {\r\n        this.setSearcModel(this.initSearchModel());\r\n      }\r\n      this.getSearcModel().form = this.ricercaForm.value;\r\n      const searchString = this.buildRsqlSearchString();\r\n\r\n      this.eccTranscodingIngrossoService.getEccezioniTranscodingIngrosso(searchString).pipe(\r\n\r\n          tap( res => {\r\n            this.eccTranscodingIngrossoModel.enableMessageEmptyResult = true;\r\n            if (!!res && res.content.length > 0 ) {\r\n              this.eccTranscodingIngrossoModel.enableMessageEmptyResult = false;\r\n              this.eccTranscodingIngrossoModel.rowData = res.content;\r\n              this.eccTranscodingIngrossoModel.enableMessageOnSizeResultLimit = false;\r\n              this.eccTranscodingIngrossoModel.searchRecordLenght = res.content.length;\r\n              if ( res.totalElements > res.content.length) {\r\n                this.eccTranscodingIngrossoModel.enableMessageOnSizeResultLimit = true;\r\n                this.eccTranscodingIngrossoModel.searchRecordLenght = res.totalElements;\r\n              }\r\n            }\r\n          }),\r\n\r\n          tap ( res => {\r\n            this.showTable = true;\r\n            if (!!targetEl) {\r\n              this.scrollToResult(targetEl);\r\n            }\r\n            this.hideSpinner();\r\n          }),\r\n\r\n          catchError((error) => {\r\n            console.log ('Error - submit', error);\r\n            this.showTable = false;\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  protected scrollToResult(targetEl: HTMLElement) {\r\n    setTimeout(function() {\r\n      console.log('Scrolling to table');\r\n      targetEl.scrollIntoView({behavior: 'smooth'});\r\n    }, 500);\r\n  }\r\n\r\n  protected buildRsqlSearchString() {\r\n\r\n    const rSQLArray: string [] = [];\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.abi.value, 'abi'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.cab.value, 'cab'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.tipoConto.value, 'tipoConto'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.bicConto.value, 'bicConto'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.verso.value, 'verso'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.descrizione.value, 'descrizione'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataInizioValiditaDa.value), this.formatterUtils.dateToString(this.dataInizioValiditaA.value), 'validFrom'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataFineValiditaDa.value), this.formatterUtils.dateToString(this.dataFineValiditaA.value), 'validTo'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteInserimento.value, 'utenteRichiesta'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteApprovatore.value, 'utenteValidazione'));\r\n\r\n    const searchString = this.rSQLUtils.getSearchString(rSQLArray);\r\n    console.log('RSQL searchString:' + searchString);\r\n    return searchString;\r\n  }\r\n\r\n  goToInsertEccTranscodingIngrosso(){\r\n    this.setSession(this.routingService.ECC_TRANS_INGR_INSERT, {backUrl: this.routingService.ECC_TRANS_INGR_SEARCH});\r\n    this.router.navigate(['/anagrafiche/ecctranscodingingrosso/inserimento'], {});\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}