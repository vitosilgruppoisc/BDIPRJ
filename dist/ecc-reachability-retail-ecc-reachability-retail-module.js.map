{"version":3,"sources":["./src/app/views/anagrafiche/ecc-reachability-retail/dettaglio-ecc-reachability-retail/dettaglio-ecc-reachability-retail.component.html","./src/app/views/anagrafiche/ecc-reachability-retail/inserimento-ecc-reachability-retail/inserimento-ecc-reachability-retail.component.html","./src/app/views/anagrafiche/ecc-reachability-retail/modifica-ecc-reachability-retail/modifica-ecc-reachability-retail.component.html","./src/app/views/anagrafiche/ecc-reachability-retail/ricerca-ecc-reachability-retail/ricerca-ecc-reachability-retail.component.html","./src/app/services/ecc-reachability-retail.service.ts","./src/app/validators/ecc-rag-ret-bic-validator.ts","./src/app/views/anagrafiche/ecc-reachability-retail/abstract-ecc-reachability-retail.component.ts","./src/app/views/anagrafiche/ecc-reachability-retail/dettaglio-ecc-reachability-retail/dettaglio-ecc-reachability-retail.component.scss","./src/app/views/anagrafiche/ecc-reachability-retail/dettaglio-ecc-reachability-retail/dettaglio-ecc-reachability-retail.component.ts","./src/app/views/anagrafiche/ecc-reachability-retail/ecc-reachability-retail-routing.module.ts","./src/app/views/anagrafiche/ecc-reachability-retail/ecc-reachability-retail.module.ts","./src/app/views/anagrafiche/ecc-reachability-retail/inserimento-ecc-reachability-retail/inserimento-ecc-reachability-retail.component.scss","./src/app/views/anagrafiche/ecc-reachability-retail/inserimento-ecc-reachability-retail/inserimento-ecc-reachability-retail.component.ts","./src/app/views/anagrafiche/ecc-reachability-retail/modifica-ecc-reachability-retail/modifica-ecc-reachability-retail.component.scss","./src/app/views/anagrafiche/ecc-reachability-retail/modifica-ecc-reachability-retail/modifica-ecc-reachability-retail.component.ts","./src/app/views/anagrafiche/ecc-reachability-retail/ricerca-ecc-reachability-retail/ricerca-ecc-reachability-retail.component.scss","./src/app/views/anagrafiche/ecc-reachability-retail/ricerca-ecc-reachability-retail/ricerca-ecc-reachability-retail.component.ts"],"names":[],"mappings":"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","file":"ecc-reachability-retail-ecc-reachability-retail-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Eccezione Raggiungibilità Dettaglio </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Eccezione Transcodifica Dettaglio</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row mb-2\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\"class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-plus-square\\\"></i> Nuova Eccezione Raggiungibilità Dettaglio </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"inserimentoForm\\\" (ngSubmit)=\\\"saveEccReachabilityRetail()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bicInput\\\" class=\\\"col-2 col-form-label\\\">Bic Input<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicInput\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicInput.invalid && (form.submitted || (bicInput.dirty || bicInput.touched))\\\" formControlName=\\\"bicInput\\\" [readOnly]=\\\"readonlyForm\\\" toUppercase/>\\r\\n                                <div *ngIf=\\\"bicInput.errors?.required && (form.submitted || (bicInput.dirty || bicInput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicInput.errors?.bicInputSyntax && (form.submitted || (bicInput.dirty || bicInput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"canale\\\" class=\\\"col-2 col-form-label\\\">Canale<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select *ngIf=\\\"!readonlyForm; else canaleTemp\\\" id=\\\"canale\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"canale.invalid && (form.submitted || (canale.dirty || canale.touched))\\\" formControlName=\\\"canale\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let c of canaliList\\\" [value]=\\\"c.codice\\\">{{c.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"canale.errors?.required && (form.submitted || (canale.dirty || canale.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <ng-template #canaleTemp>\\r\\n                                <input class=\\\"form-control\\\" [value]=\\\"getCanaleValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n\\r\\n                        <label for=\\\"raggiungibile\\\" class=\\\"col-2 col-form-label\\\">Raggiungibile<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select *ngIf=\\\"!readonlyForm; else raggiungibileTemp\\\" id=\\\"raggiungibile\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"raggiungibile.invalid &&  (form.submitted || (raggiungibile.dirty || raggiungibile.touched))\\\" formControlName=\\\"raggiungibile\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of raggiungibileList\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"raggiungibile.errors?.required && (form.submitted || (raggiungibile.dirty || raggiungibile.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <ng-template #raggiungibileTemp>\\r\\n                                <input class=\\\"form-control\\\" [value]=\\\"getRaggiungibileValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n\\r\\n                       <!--\\r\\n                       <label for=\\\"bicOutput\\\" class=\\\"col-2 col-form-label\\\">Bic Output:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicOutput\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicOutput.invalid && (form.submitted || (bicOutput.dirty || bicOutput.touched))\\\" formControlName=\\\"bicOutput\\\" [readOnly]=\\\"readonlyForm\\\" />\\r\\n                                <div *ngIf=\\\"bicOutput.errors?.required && (form.submitted || (bicOutput.dirty || bicOutput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicOutput.errors?.syntax && (form.submitted || (bicOutput.dirty || bicOutput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        -->\\r\\n                        <label for=\\\"bicDiretto\\\" class=\\\"col-2 col-form-label\\\">Bic Diretto:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicDiretto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicDiretto.invalid && (form.submitted || (bicDiretto.dirty || bicDiretto.touched))\\\" formControlName=\\\"bicDiretto\\\" [readOnly]=\\\"readonlyForm\\\" toUppercase/>\\r\\n                                <div *ngIf=\\\"bicDiretto.errors?.required && (form.submitted || (bicDiretto.dirty || bicDiretto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicDiretto.errors?.syntax && (form.submitted || (bicDiretto.dirty || bicDiretto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataInizioValidita\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputdataInizioValidita\\\">\\r\\n                                <input id=\\\"dataInizioValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValidita.invalid && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValidita\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataInizioValidita.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.required && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.dateformat && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.daterange && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputdataInizioValidita>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataInizioValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <label for=\\\"dataFineValidita\\\" class=\\\"col-2 col-form-label\\\">Data Fine Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputdataFineValidita\\\">\\r\\n                                <input id=\\\"dataFineValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValidita.invalid && (form.submitted || (dataFineValidita.dirty || dataFineValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValidita\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataFineValidita.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.required && (form.submitted || (dataFineValidita.dirty || dataFineValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.dateformat  && (dataFineValidita.dirty || dataFineValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.daterange  && (dataFineValidita.dirty || dataFineValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputdataFineValidita>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataFineValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\" *ngIf=\\\"!readonlyForm\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\">Salva</button>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\" *ngIf=\\\"readonlyForm\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"resetForm()\\\">Nuovo Inserimento</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-edit\\\"></i> Modifica Eccezione Raggiungibilità Dettaglio </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"modificaForm\\\" (ngSubmit)=\\\"modifyEccReachabilityRetail()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bicInput\\\" class=\\\"col-2 col-form-label\\\">Bic Input<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicInput\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicInput.invalid && (form.submitted || (bicInput.dirty || bicInput.touched))\\\" formControlName=\\\"bicInput\\\" [readOnly]=\\\"!checkedbicInput.value || readonlyForm\\\" toUppercase/>\\r\\n                                <div *ngIf=\\\"bicInput.errors?.required && (form.submitted || (bicInput.dirty || bicInput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicInput.errors?.pattern && (form.submitted || (bicInput.dirty || bicInput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicInput.errors?.bicInputSyntax && (form.submitted || (bicInput.dirty || bicInput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedbicInput\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedbicInput\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedbicInput\\\" (click)=\\\"manageCheckBox('bicInput')\\\" [attr.disabled]=\\\"true\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"canale\\\" class=\\\"col-2 col-form-label\\\">Canale<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"canale\\\" class=\\\"form-control\\\" [value]=\\\"getCanaleValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedcanale\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedcanale\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedcanale\\\" (click)=\\\"manageCheckBox('canale')\\\" [attr.disabled]=\\\"true\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"raggiungibile\\\" class=\\\"col-2 col-form-label\\\">Raggiungibile<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <select *ngIf=\\\"(checkedraggiungibile.value && !readonlyForm); else raggiungibileTemp\\\" id=\\\"raggiungibile\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"raggiungibile.invalid &&  (form.submitted || (raggiungibile.dirty || raggiungibile.touched))\\\" formControlName=\\\"raggiungibile\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of raggiungibileList\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"raggiungibile.errors?.required && (form.submitted || (raggiungibile.dirty || raggiungibile.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <ng-template #raggiungibileTemp>\\r\\n                                <input class=\\\"form-control\\\" [value]=\\\"getRaggiungibileValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedraggiungibile\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedraggiungibile\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedraggiungibile\\\" (click)=\\\"manageCheckBox('raggiungibile')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"!checkeddescrizione.value || readonlyForm\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkeddescrizione\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddescrizione\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddescrizione\\\" (click)=\\\"manageCheckBox('descrizione')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--\\r\\n                        <label for=\\\"bicOutput\\\" class=\\\"col-2 col-form-label\\\">Bic Output:</label>\\r\\n                            <div class=\\\"col-3\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input id=\\\"bicOutput\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicOutput.invalid && (form.submitted || (bicOutput.dirty || bicOutput.touched))\\\" formControlName=\\\"bicOutput\\\" [readOnly]=\\\"!checkedbicOutput.value || readonlyForm\\\" />\\r\\n                                    <div *ngIf=\\\"bicOutput.errors?.required && (form.submitted || (bicOutput.dirty || bicOutput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo obbligatorio\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"bicOutput.errors?.syntax && (form.submitted || (bicOutput.dirty || bicOutput.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        Campo sintatticamente non valido\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-1\\\">\\r\\n                                <label for=\\\"checkedbicOutput\\\" class=\\\"col-form-label\\\">\\r\\n                                    <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedbicOutput\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedbicOutput\\\" (click)=\\\"manageCheckBox('bicOutput')\\\"/>\\r\\n                                </label>\\r\\n                            </div>\\r\\n    -->\\r\\n                        <label for=\\\"bicDiretto\\\" class=\\\"col-2 col-form-label\\\">Bic Diretto:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicDiretto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicDiretto.invalid && (form.submitted || (bicDiretto.dirty || bicDiretto.touched))\\\" formControlName=\\\"bicDiretto\\\" [readOnly]=\\\"!checkedbicDiretto.value || readonlyForm\\\" toUppercase/>\\r\\n                                <div *ngIf=\\\"bicDiretto.errors?.required && (form.submitted || (bicDiretto.dirty || bicDiretto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicDiretto.errors?.syntax && (form.submitted || (bicDiretto.dirty || bicDiretto.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedbicDiretto\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedbicDiretto\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedbicDiretto\\\" (click)=\\\"manageCheckBox('bicDiretto')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"validFrom\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"(checkedvalidFrom.value && !readonlyForm); else inputvalidFrom\\\">\\r\\n                                <input id=\\\"validFrom\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"validFrom.invalid && (form.submitted || (validFrom.dirty || validFrom.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"validFrom\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!validFrom.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('validFrom')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"validFrom.errors?.required && (form.submitted || (validFrom.dirty || validFrom.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"validFrom.errors?.dateformat && (form.submitted || (validFrom.dirty || validFrom.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"validFrom.errors?.daterange  && (validFrom.dirty || validFrom.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputvalidFrom>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getvalidFromValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedvalidFrom\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedvalidFrom\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedvalidFrom\\\" (click)=\\\"manageCheckBox('validFrom', 'date')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"validTo\\\" class=\\\"col-2 col-form-label\\\">Data Fine Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"(checkedvalidTo.value && !readonlyForm); else inputvalidTo\\\">\\r\\n                                <input id=\\\"validTo\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"validTo.invalid && (form.submitted || (validTo.dirty || validTo.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"validTo\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" />\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!validTo.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('validTo')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"validTo.errors?.required && (form.submitted || (validTo.dirty || validTo.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"validTo.errors?.dateformat && (form.submitted || (validTo.dirty || validTo.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"validTo.errors?.daterange  && (validTo.dirty || validTo.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputvalidTo>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getvalidToValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedvalidTo\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedvalidTo\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedvalidTo\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fa fa-users\\\"></i> Anagrafica Eccezioni Raggiungibilità Dettaglio </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row mb-2\\\" *ngIf=\\\"userIsDet\\\">\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"goToInsertEccReachabilityRetail()\\\">Nuova Eccezione Raggiungibilità Dettaglio</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"ricercaForm\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bicInput\\\" class=\\\"col-2 col-form-label\\\">Bic Input:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicInput\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicInput.invalid && (bicInput.dirty || bicInput.touched)\\\" formControlName=\\\"bicInput\\\" maxlength=\\\"11\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bicInput.errors?.wildcard && (bicInput.dirty || bicInput.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicInput.errors?.pattern && (bicInput.dirty || bicInput.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"canale\\\" class=\\\"col-2 col-form-label\\\">Canale:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"canale\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"canale.invalid && (canale.dirty || canale.touched)\\\" formControlName=\\\"canale\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of canaliList\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"raggiungibile\\\" class=\\\"col-2 col-form-label\\\">Raggiungibile:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"raggiungibile\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"raggiungibile.invalid && (raggiungibile.dirty || canale.touched)\\\" formControlName=\\\"raggiungibile\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of raggiungibileList\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"descrizione.errors?.wildcard && (descrizione.dirty || descrizione.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--\\r\\n                        <label for=\\\"bicOutput\\\" class=\\\"col-2 col-form-label\\\">Bic Ouput:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicOutput\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicOutput.invalid && (bicOutput.dirty || bicOutput.touched)\\\" formControlName=\\\"bicOutput\\\" maxlength=\\\"11\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bicOutput.errors?.wildcard && (bicOutput.dirty || bicOutput.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicOutput.errors?.pattern && (bicOutput.dirty || bicOutput.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        -->\\r\\n                        <label for=\\\"bicDiretto\\\" class=\\\"col-2 col-form-label\\\">Bic Diretto:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bicDiretto\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bicDiretto.invalid && (bicDiretto.dirty || bicDiretto.touched)\\\" formControlName=\\\"bicDiretto\\\" maxlength=\\\"11\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bicDiretto.errors?.wildcard && (bicDiretto.dirty || bicDiretto.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bicDiretto.errors?.pattern && (bicDiretto.dirty || bicDiretto.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--Data Inizio Validita-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Inizio Validità:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataInizioValiditaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataInizioValiditaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValiditaDa.invalid && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValiditaDa\\\"  bdiDatepicker #datepickerDIVda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIVda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataInizioValiditaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValiditaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaDa.errors?.dateformat && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaDa.errors?.daterange && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataInizioValiditaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataInizioValiditaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValiditaA.invalid && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValiditaA\\\"  bdiDatepicker #datepickerDIVa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIVa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataInizioValiditaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValiditaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaA.errors?.dateformat && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaA.errors?.daterange && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--Data Fine Validità:-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Fine Validità:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataFineValiditaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataFineValiditaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValiditaDa.invalid && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValiditaDa\\\"  bdiDatepicker #datepickerDFVda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDFVda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataFineValiditaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValiditaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataFineValiditaDa.errors?.dateformat && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataFineValiditaDa.errors?.daterange && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataFineValiditaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataFineValiditaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValiditaA.invalid && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValiditaA\\\"  bdiDatepicker #datepickerDFVa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDFVa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataFineValiditaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValiditaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataFineValiditaA.errors?.dateformat && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataFineValiditaA.errors?.daterange && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"utenteInserimento\\\" class=\\\"col-2 col-form-label\\\">Utente Inserimento:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteInserimento\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteInserimento.invalid && (utenteInserimento.dirty || utenteInserimento.touched)\\\" formControlName=\\\"utenteInserimento\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.wildcard && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.pattern && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"utenteApprovatore\\\" class=\\\"col-2 col-form-label\\\">Utente Approvatore:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteApprovatore\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteApprovatore.invalid && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" formControlName=\\\"utenteApprovatore\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.wildcard && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.pattern && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-2 mx-auto\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"submit(target, true)\\\">Cerca</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </form>\\r\\n\\r\\n                <div #target>\\r\\n                    <app-generic-table *ngIf=\\\"showTable\\\" [model]=\\\"eccReachabilityRetailModel\\\" (action)=\\\"onActionEvent($event)\\\" (colToDisplay)=\\\"onColToDisplayEvent($event, this.eccReachabilityRetailService.searchModel)\\\" (paginationChanged)=\\\"onPaginationEvent($event, this.eccReachabilityRetailService.searchModel)\\\" (sortChanged)=\\\"onSortEvent($event, this.eccReachabilityRetailService.searchModel)\\\" (filterChanged)=\\\"onFilterEvent($event, this.eccReachabilityRetailService.searchModel)\\\"></app-generic-table>\\r\\n                </div>\\r\\n\\r\\n            </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #wildcardTooltip>\\r\\n        <div class=\\\"input-group-append\\\" bdiTooltip=\\\"{{util.getWildcardTooltip()}}\\\" placement=\\\"right\\\">\\r\\n        <span class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fas fa-info-circle\\\"></i>\\r\\n        </span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport {SearchModel} from \"../models/search\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ConfigurationService} from \"./configuration.service\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {CommonService} from \"./common.service\";\r\nimport {EccReachabilityRetail, GetEccReachabilityRetailResponse} from \"../models/ecc-reachability-retail\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EccReachabilityRetailService extends CommonService {\r\n\r\n    public searchModel: SearchModel;\r\n\r\n    constructor(protected http: HttpClient, protected configurationService: ConfigurationService) {\r\n        super(http, configurationService );\r\n    }\r\n\r\n    getEccezioniReachabilityRetail(searchString: string): Observable<GetEccReachabilityRetailResponse> {\r\n        return this.http.get<GetEccReachabilityRetailResponse>(`${this.apiEndpointU2A}/eccReachabilityRetail?${searchString}`).pipe(\r\n            tap(res => console.log(res))\r\n        );\r\n    }\r\n\r\n    getEccezioneReachabilityRetail(idEcc: string): Observable<EccReachabilityRetail> {\r\n        return this.http.get<EccReachabilityRetail>(`${this.apiEndpointU2A}/eccReachabilityRetail/${idEcc}`).pipe(\r\n            tap(res => console.log(res)),\r\n            catchError((error) => {\r\n                    console.log('Error - getEccezioneReachabilityRetail', error);\r\n                    return of(null);\r\n                }\r\n            )\r\n        );\r\n    }\r\n}\r\n","import {FormGroup, ValidationErrors, ValidatorFn} from '@angular/forms';\r\nimport {CountryCodeForNscRuleValidationEnum, TipoFlagEnum} from \"../models/enum\";\r\n\r\nexport function eccReachabilityRetailBicValidator(): ValidatorFn {\r\n\r\n    return (form: FormGroup): ValidationErrors | null => {\r\n\r\n        const bicInput = form.controls['bicInput'];\r\n        const raggiungibile = form.controls['raggiungibile'];\r\n\r\n\r\n        if (!!bicInput && !!bicInput.value) {\r\n            const pattern = '^([a-zA-Z]){6}([0-9a-zA-Z]){2}(([0-9a-zA-Z]{3})||([*]))?$';\r\n            if (!new RegExp(pattern).test(bicInput.value)) {\r\n                bicInput.setErrors({bicInputSyntax: true});\r\n            }\r\n        }\r\n\r\n        if (!!raggiungibile && raggiungibile.value){\r\n\r\n            if ( raggiungibile.value == TipoFlagEnum.SI ) {\r\n                //modifica a valle di mail del 21/10\r\n                /*const bicOutput = form.controls['bicOutput'];\r\n                if (!bicOutput || !bicOutput.value) {\r\n                    bicOutput.setErrors({required: true});\r\n                }*/\r\n                const bicDiretto = form.controls['bicDiretto'];\r\n                if (!bicDiretto || !bicDiretto.value) {\r\n                    bicDiretto.setErrors({required: true});\r\n                }\r\n            }\r\n        }\r\n\r\n        return;\r\n    };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {tap} from 'rxjs/operators';\r\nimport {SecurityService, UserService} from '../../../services';\r\nimport {FormatterUtils} from '../../../utilities/formatterUtils';\r\nimport {RoutingService} from '../../../services/routing.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {AbstractAnagraficheComponent} from '../abstract-anagrafiche.component';\r\nimport {EccReachabilityRetailService} from \"../../../services/ecc-reachability-retail.service\";\r\nimport {Canale} from \"../../../models/ecc-reachability-retail\";\r\nimport {TipoFlagEnum} from \"../../../models/enum\";\r\nimport {TipoFlag} from \"../../../models/conto\";\r\n\r\n\r\nexport abstract class AbstractEccReachabilityRetailComponent extends  AbstractAnagraficheComponent implements OnInit {\r\n\r\n    isActive: boolean = false;\r\n    canaliList: Canale [];\r\n    raggiungibileList: TipoFlag [];\r\n\r\n    constructor( protected eccReachabilityRetailService: EccReachabilityRetailService,\r\n                 protected securityService: SecurityService,\r\n                 protected userService: UserService,\r\n                 protected formatterUtils: FormatterUtils,\r\n                 protected routingService: RoutingService,\r\n                 protected route: ActivatedRoute) {\r\n\r\n        super(securityService, userService, formatterUtils, routingService, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.buildCombo();\r\n    }\r\n\r\n    protected buildCombo() {\r\n        this.eccReachabilityRetailService.getCanali().pipe(\r\n            tap( res => this.canaliList = res)\r\n        ).subscribe();\r\n\r\n        this.raggiungibileList  = [ {codice: TipoFlagEnum.SI.valueOf(), descrizione: 'SI'}, {codice: TipoFlagEnum.NO.valueOf(), descrizione: 'NO' }];\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtcmVhY2hhYmlsaXR5LXJldGFpbC9kZXR0YWdsaW8tZWNjLXJlYWNoYWJpbGl0eS1yZXRhaWwvZGV0dGFnbGlvLWVjYy1yZWFjaGFiaWxpdHktcmV0YWlsLmNvbXBvbmVudC5zY3NzIn0= */\"","import {AbstractEccReachabilityRetailComponent} from \"../abstract-ecc-reachability-retail.component\";\r\nimport {InfoPanelModel} from \"../../../../models/info-panel-model\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {EccReachabilityRetail} from \"../../../../models/ecc-reachability-retail\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {EccReachabilityRetailService} from \"../../../../services/ecc-reachability-retail.service\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {of} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-ecc-reachability-retail',\r\n  templateUrl: './dettaglio-ecc-reachability-retail.component.html',\r\n  styleUrls: ['./dettaglio-ecc-reachability-retail.component.scss']\r\n})\r\nexport class DettaglioEccReachabilityRetailComponent extends  AbstractEccReachabilityRetailComponent implements OnInit {\r\n\r\n  infoPanelModel: InfoPanelModel;\r\n  eccRaggRet: EccReachabilityRetail;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      protected eccReachabilityRetailService: EccReachabilityRetailService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected route: ActivatedRoute,\r\n      protected routingService: RoutingService\r\n  ) {\r\n    super(eccReachabilityRetailService, securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkUserDet();\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailEccSessionObj = this.getSession(this.routingService.ECC_RAGG_RET_DETAIL);\r\n      if (!!detailEccSessionObj) {\r\n        this.loadSections(detailEccSessionObj.idEccRaggRet);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(detailEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadSections (idEccRaggRet: string) {\r\n    this.showSpinner();\r\n\r\n    this.eccReachabilityRetailService.getEccezioneReachabilityRetail(idEccRaggRet).pipe (\r\n        tap( res => {\r\n          this.eccRaggRet = res;\r\n          this.buildeccRaggRetSection();\r\n\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildeccRaggRetSection() {\r\n    const data = [\r\n      [this.buildInfoPanelElement('Bic Input', 'string',  this.eccRaggRet, 'bicInput'), this.buildInfoPanelElement('Canale', 'string',  this.eccRaggRet, 'canale.descrizione')],\r\n      [this.buildInfoPanelElement('Raggiungibile', 'boolean',  this.eccRaggRet, 'raggiungibile'), this.buildInfoPanelElement('Descrizione', 'string',  this.eccRaggRet, 'descrizione')],\r\n      [/*this.buildInfoPanelElement('Bic Output', 'string',  this.eccRaggRet, 'bicOutput'),*/  this.buildInfoPanelElement('Bic Diretto', 'string',  this.eccRaggRet, 'bicDiretto'), {}],\r\n      [this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.eccRaggRet, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.eccRaggRet, 'validTo')],\r\n      [this.buildInfoPanelElement('Utente Inserimento/Modifica', 'string', this.eccRaggRet, 'utenteRichiesta'), this.buildInfoPanelElement('Utente Approvatore', 'string', this.eccRaggRet, 'utenteValidazione')]\r\n    ];\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n  }\r\n}\r\n","import {RicercaEccReachabilityRetailComponent} from \"./ricerca-ecc-reachability-retail/ricerca-ecc-reachability-retail.component\";\r\nimport {InserimentoEccReachabilityRetailComponent} from \"./inserimento-ecc-reachability-retail/inserimento-ecc-reachability-retail.component\";\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {SecurityService} from \"../../../services\";\r\nimport {ModificaEccReachabilityRetailComponent} from \"./modifica-ecc-reachability-retail/modifica-ecc-reachability-retail.component\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {DettaglioEccReachabilityRetailComponent} from \"./dettaglio-ecc-reachability-retail/dettaglio-ecc-reachability-retail.component\";\r\nimport {EUserRole} from \"../../../models\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Anagrafiche Eccezioni Raggiungibilità Dettaglio',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: RicercaEccReachabilityRetailComponent,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_DET, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio',\r\n        component: DettaglioEccReachabilityRetailComponent,\r\n        data: {\r\n          title: 'Dettaglio Eccezione Raggiungibilità Dettaglio',\r\n          roles: [EUserRole.ANAGRAFICHE_DET]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'inserimento',\r\n        component: InserimentoEccReachabilityRetailComponent,\r\n        data: {\r\n          title: 'Nuova Eccezione Raggiungibilità Dettaglio',\r\n          roles: [EUserRole.ANAGRAFICHE_DET]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'modifica',\r\n        component: ModificaEccReachabilityRetailComponent,\r\n        data: {\r\n          title: 'Modifica Eccezione Raggiungibilità Dettaglio',\r\n          roles: [EUserRole.ANAGRAFICHE_DET]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EccReachabilityRetailRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EccReachabilityRetailRoutingModule } from './ecc-reachability-retail-routing.module';\r\nimport { RicercaEccReachabilityRetailComponent } from './ricerca-ecc-reachability-retail/ricerca-ecc-reachability-retail.component';\r\nimport { DettaglioEccReachabilityRetailComponent } from './dettaglio-ecc-reachability-retail/dettaglio-ecc-reachability-retail.component';\r\nimport { InserimentoEccReachabilityRetailComponent } from './inserimento-ecc-reachability-retail/inserimento-ecc-reachability-retail.component';\r\nimport { ModificaEccReachabilityRetailComponent } from './modifica-ecc-reachability-retail/modifica-ecc-reachability-retail.component';\r\nimport {GepaGuiCommonModule} from \"../../../common/gepagui-common.module\";\r\nimport {EccTranscodingRetailRoutingModule} from \"../ecc-transcoding-retail/ecc-transcoding-retail-routing.module\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {BDIAlertModule, BDIDatagridModule, BDIDatepickerModule, BDITooltipModule} from \"scam-bdi-uikit\";\r\nimport {GenericTableModule} from \"../generic-table/generic-table.module\";\r\nimport {InfoPanelModule} from \"../info-panel/info-panel.module\";\r\nimport {GenericActionRenderComponent} from \"../generic-action-render/generic-action-render.component\";\r\nimport {GenericActionRenderModule} from \"../generic-action-render/generic-action-render.module\";\r\nimport {DirectiveModule} from \"../../../directive/directive.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [RicercaEccReachabilityRetailComponent, DettaglioEccReachabilityRetailComponent, InserimentoEccReachabilityRetailComponent, ModificaEccReachabilityRetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GepaGuiCommonModule,\r\n    EccReachabilityRetailRoutingModule,\r\n    ReactiveFormsModule,\r\n    BDIAlertModule.forRoot(),\r\n    BDIDatepickerModule,\r\n    FormsModule,\r\n    GenericTableModule,\r\n    InfoPanelModule,\r\n    BDIDatagridModule.withComponents([\r\n      GenericActionRenderComponent,\r\n    ]),\r\n    BDITooltipModule.forRoot(),\r\n    GenericActionRenderModule,\r\n    DirectiveModule\r\n  ],\r\n  entryComponents: [GenericActionRenderComponent],\r\n})\r\nexport class EccReachabilityRetailModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtcmVhY2hhYmlsaXR5LXJldGFpbC9pbnNlcmltZW50by1lY2MtcmVhY2hhYmlsaXR5LXJldGFpbC9pbnNlcmltZW50by1lY2MtcmVhY2hhYmlsaXR5LXJldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AbstractEccReachabilityRetailComponent} from \"../abstract-ecc-reachability-retail.component\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {TipoFlagEnum, TipoOperazioneEnum} from \"../../../../models/enum\";\r\nimport {TaskEccReachabilityRetail} from \"../../../../models/task\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {EccReachabilityRetailService} from \"../../../../services/ecc-reachability-retail.service\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {of} from \"rxjs\";\r\nimport {eccReachabilityRetailBicValidator} from \"../../../../validators/ecc-rag-ret-bic-validator\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-inserimento-ecc-reachability-retail',\r\n  templateUrl: './inserimento-ecc-reachability-retail.component.html',\r\n  styleUrls: ['./inserimento-ecc-reachability-retail.component.scss']\r\n})\r\nexport class InserimentoEccReachabilityRetailComponent extends AbstractEccReachabilityRetailComponent implements OnInit {\r\n\r\n  inserimentoForm: FormGroup;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected eccReachabilityRetailService: EccReachabilityRetailService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private taskService: TaskService,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(eccReachabilityRetailService, securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      const insertEccSessionObj = this.getSession(this.routingService.ECC_RAGG_RET_INSERT);\r\n      if (!!insertEccSessionObj) {\r\n        this.backUrl = this.routingService.getRouteByKey(insertEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n    super.ngOnInit();\r\n    this.buildForm();\r\n  }\r\n\r\n  private buildForm() {\r\n    this.inserimentoForm = this.formBuilder.group({\r\n      bicInput:  new FormControl(null,   [Validators.required]),\r\n      canale: new FormControl(null,   [Validators.required]),\r\n      raggiungibile: new FormControl(null, [Validators.required]   ),\r\n      //bicOutput: new FormControl(null,    [this.bicValidator.bind(this)]),\r\n      bicDiretto: new FormControl(null,    [this.bicValidator.bind(this)]),\r\n      descrizione: new FormControl(null,   []),\r\n      dataInizioValidita: new FormControl(null, [Validators.required]),\r\n      dataFineValidita: new FormControl(null, [])\r\n    }, {validator: Validators.compose(          [\r\n            dateValidator( [{field1: 'dataInizioValidita', required1: true,  field2: 'dataFineValidita', required2: true}]),\r\n            eccReachabilityRetailBicValidator()]\r\n      )});\r\n\r\n    this.raggiungibile.valueChanges.subscribe(\r\n        () => {\r\n          this.manageRaggiungibile();\r\n        }\r\n    );\r\n  }\r\n\r\n  private manageRaggiungibile(){\r\n    //this.bicOutput.updateValueAndValidity();\r\n    this.bicDiretto.updateValueAndValidity();\r\n  }\r\n\r\n  get bicInput() { return this.inserimentoForm.get('bicInput'); }\r\n  get canale() { return this.inserimentoForm.get('canale'); }\r\n  get raggiungibile() { return this.inserimentoForm.get('raggiungibile'); }\r\n  //get bicOutput() { return this.inserimentoForm.get('bicOutput'); }\r\n  get bicDiretto() { return this.inserimentoForm.get('bicDiretto'); }\r\n  get descrizione() { return this.inserimentoForm.get('descrizione'); }\r\n  get dataInizioValidita() { return this.inserimentoForm.get('dataInizioValidita'); }\r\n  get dataFineValidita() { return this.inserimentoForm.get('dataFineValidita'); }\r\n\r\n  reset(field) {\r\n    this.inserimentoForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  saveEccReachabilityRetail() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.inserimentoForm.valid) {\r\n      this.showSpinner();\r\n      const taskEccReachabilityRetail = this.buildTaskEccReachabilityRetail();\r\n      this.taskService.saveTaskEccReachabilityRetail(taskEccReachabilityRetail).pipe(\r\n          tap( res => {\r\n            const d = new Date(res.validTo);\r\n            this.inserimentoForm.get('dataFineValidita').setValue({year: d.getFullYear(), month: d.getUTCMonth() + 1, day: d.getUTCDate()});\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - saveEccReachabilityRetail', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private buildTaskEccReachabilityRetail (): TaskEccReachabilityRetail {\r\n\r\n    return <TaskEccReachabilityRetail> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.INS\r\n      },\r\n\r\n      bicInput: this.bicInput.value,\r\n      canale: {\r\n        codice: this.canale.value\r\n      },\r\n      raggiungibile: (!!this.raggiungibile.value ? ((this.raggiungibile.value == TipoFlagEnum.SI) ? true : false) : null),\r\n      //bicOutput: this.bicOutput.value,\r\n      bicDiretto: this.bicDiretto.value,\r\n      descrizione: this.descrizione.value,\r\n      validFrom: this.formatterUtils.dateToString(this.dataInizioValidita.value),\r\n      validTo: this.formatterUtils.dateToString((!!this.dataFineValidita.value ? this.dataFineValidita.value : {year: 9999, month: 12, day: 31}))\r\n    };\r\n  }\r\n\r\n  resetForm() {\r\n    this.readonlyForm = false;\r\n    this.isResultOk = false;\r\n    this.buildForm();\r\n  }\r\n\r\n  getCanaleValue(): string {\r\n    return this.canaliList.find( t => t.codice == this.canale.value).descrizione;\r\n  }\r\n\r\n  getRaggiungibileValue(): string {\r\n    const val = ((this.raggiungibile.value == TipoFlagEnum.SI) ? TipoFlagEnum.SI : TipoFlagEnum.NO);\r\n    return this.raggiungibileList.find( t => t.codice ==  val).descrizione;\r\n  }\r\n\r\n  getDataInizioValiditaValue() {\r\n    return this.formatterUtils.dateToString(this.dataInizioValidita.value);\r\n  }\r\n\r\n  getDataFineValiditaValue() {\r\n    return this.formatterUtils.dateToString(this.dataFineValidita.value);\r\n  }\r\n\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtcmVhY2hhYmlsaXR5LXJldGFpbC9tb2RpZmljYS1lY2MtcmVhY2hhYmlsaXR5LXJldGFpbC9tb2RpZmljYS1lY2MtcmVhY2hhYmlsaXR5LXJldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { get} from 'lodash';\r\nimport {EccReachabilityRetail} from \"../../../../models/ecc-reachability-retail\";\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {eccReachabilityRetailBicValidator} from \"../../../../validators/ecc-rag-ret-bic-validator\";\r\nimport {TipoFlagEnum, TipoOperazioneEnum} from \"../../../../models/enum\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {EccReachabilityRetailService} from \"../../../../services/ecc-reachability-retail.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {of} from \"rxjs\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {AbstractEccReachabilityRetailComponent} from \"../abstract-ecc-reachability-retail.component\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {TaskEccReachabilityRetail} from \"../../../../models/task\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {Utils} from \"../../../../utilities/util\";\r\n\r\n@Component({\r\n  selector: 'app-modifica-ecc-reachability-retail',\r\n  templateUrl: './modifica-ecc-reachability-retail.component.html',\r\n  styleUrls: ['./modifica-ecc-reachability-retail.component.scss']\r\n})\r\nexport class ModificaEccReachabilityRetailComponent extends AbstractEccReachabilityRetailComponent implements OnInit {\r\n\r\n  modificaForm: FormGroup;\r\n  eccRaggRet: EccReachabilityRetail;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected eccReachabilityRetailService: EccReachabilityRetailService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private taskService: TaskService,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute,\r\n      private utils: Utils,\r\n  ) {\r\n    super(eccReachabilityRetailService, securityService, userService, formatterUtils, routingService, route);\r\n    this.utils = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const modifyEccSessionObj = this.getSession(this.routingService.ECC_RAGG_RET_MODIFY);\r\n      if (!!modifyEccSessionObj) {\r\n        this.load(modifyEccSessionObj.idEccRaggRet);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(modifyEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private load (idEcc: string) {\r\n    this.showSpinner();\r\n    this.eccReachabilityRetailService.getEccezioneReachabilityRetail(idEcc).pipe(\r\n        tap( res => {\r\n          this.eccRaggRet = res;\r\n          this.buildForm();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - load', error);\r\n          this.setError(error);\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildForm() {\r\n    const validFrom = new Date(this.eccRaggRet.validFrom);\r\n    const validTo = new Date(this.eccRaggRet.validTo);\r\n    this.modificaForm = this.formBuilder.group({\r\n      bicInput:  new FormControl(this.eccRaggRet.bicInput,   [Validators.required]),\r\n      canale: new FormControl(this.eccRaggRet.canale.codice,   [Validators.required]),\r\n      raggiungibile: new FormControl(this.formatterUtils.getBooleanAsString(this.eccRaggRet, 'raggiungibile'),    [Validators.required]),\r\n      //bicOutput: new FormControl(this.eccRaggRet.bicOutput,    [this.bicValidator.bind(this)]),\r\n      bicDiretto: new FormControl(this.eccRaggRet.bicDiretto,    [this.bicValidator.bind(this)]),\r\n      descrizione: new FormControl(this.eccRaggRet.descrizione,   []),\r\n      validFrom: new FormControl({year: validFrom.getFullYear(), month: (validFrom.getUTCMonth() + 1), day: validFrom.getUTCDate()}, [Validators.required]),\r\n      validTo: new FormControl({year: validTo.getFullYear(), month: (validTo.getUTCMonth() + 1), day: validTo.getUTCDate()}, []),\r\n\r\n      checkedbicInput:  new FormControl(false,   []),\r\n      checkedcanale:  new FormControl(false,   []),\r\n      checkedraggiungibile:  new FormControl(false,   []),\r\n      //checkedbicOutput:  new FormControl(false,   []),\r\n      checkedbicDiretto:  new FormControl(false,   []),\r\n      checkeddescrizione:  new FormControl(false,   []),\r\n      checkedvalidFrom:  new FormControl(false,   []),\r\n      checkedvalidTo:  new FormControl(false,   [])\r\n    }, {validator: Validators.compose(          [\r\n        dateValidator( [{field1: 'validFrom', required1: true,  field2: 'validTo', required2: true}]),\r\n        eccReachabilityRetailBicValidator()]\r\n      )});\r\n\r\n    this.raggiungibile.valueChanges.subscribe(\r\n        () => {\r\n          this.manageRaggiungibile();\r\n        }\r\n    );\r\n  }\r\n\r\n  private manageRaggiungibile(){\r\n    //this.bicOutput.updateValueAndValidity();\r\n    this.bicDiretto.updateValueAndValidity();\r\n  }\r\n\r\n  get bicInput() { return this.modificaForm.get('bicInput'); }\r\n  get canale() { return this.modificaForm.get('canale'); }\r\n  get raggiungibile() { return this.modificaForm.get('raggiungibile'); }\r\n  //get bicOutput() { return this.modificaForm.get('bicOutput'); }\r\n  get bicDiretto() { return this.modificaForm.get('bicDiretto'); }\r\n  get descrizione() { return this.modificaForm.get('descrizione'); }\r\n  get validFrom() { return this.modificaForm.get('validFrom'); }\r\n  get validTo() { return this.modificaForm.get('validTo'); }\r\n  get checkedbicInput() { return this.modificaForm.get('checkedbicInput'); }\r\n  get checkedcanale() { return this.modificaForm.get('checkedcanale'); }\r\n  get checkedraggiungibile() { return this.modificaForm.get('checkedraggiungibile'); }\r\n  //get checkedbicOutput() { return this.modificaForm.get('checkedbicOutput'); }\r\n  get checkedbicDiretto() { return this.modificaForm.get('checkedbicDiretto'); }\r\n  get checkeddescrizione() { return this.modificaForm.get('checkeddescrizione'); }\r\n  get checkedvalidFrom() { return this.modificaForm.get('checkedvalidFrom'); }\r\n  get checkedvalidTo() { return this.modificaForm.get('checkedvalidTo'); }\r\n\r\n  reset(field) {\r\n    this.modificaForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  manageCheckBox(field: string, type?: string) {\r\n    if (this.modificaForm.get('checked'.concat(field)).value) {\r\n      let val = get(this.eccRaggRet, field);\r\n      if (!!type && type == 'date') {\r\n        val = this.formatterUtils.getValueForDateinDatePickerFormat(val);\r\n      }\r\n      this.modificaForm.get(field).setValue(val);\r\n    } else {\r\n      //this.modificaForm.get(field).setValue(null);\r\n    }\r\n  }\r\n\r\n  public modifyEccReachabilityRetail() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.modificaForm.valid) {\r\n      this.showSpinner();\r\n      const taskEccReachabilityReatilReq = this.buildTaskEccReachabilityRetail();\r\n      this.taskService.saveTaskEccReachabilityRetail(taskEccReachabilityReatilReq).pipe(\r\n          tap( res => {\r\n            if (!!res) {\r\n              this.eccRaggRet.validFrom = res.validFrom;\r\n              this.eccRaggRet.canale = res.canale;\r\n            }\r\n\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - modifyEccReachabilityRetail', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private  buildTaskEccReachabilityRetail (): TaskEccReachabilityRetail {\r\n    return <TaskEccReachabilityRetail> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.UPD\r\n      },\r\n      tipoTask: null,\r\n      stato: null,\r\n      tsInserimento: null,\r\n      userReq: null,\r\n      tsValidate: null,\r\n      userValidate: null,\r\n      noteRifiuto: null,\r\n\r\n      bicInput: this.bicInput.value,\r\n      canale: {\r\n        codice: this.canale.value,\r\n      },\r\n      raggiungibile: (!!this.raggiungibile.value ? ((this.raggiungibile.value == TipoFlagEnum.SI) ? true : false) : null),\r\n      //bicOutput: this.bicOutput.value,\r\n      bicDiretto: this.bicDiretto.value,\r\n      descrizione: this.descrizione.value,\r\n      validFrom: this.formatterUtils.dateToString(this.validFrom.value),\r\n      validTo: this.formatterUtils.dateToString(this.validTo.value),\r\n      tsModifica: null,\r\n      utenteRichiesta: null,\r\n      utenteValidazione: null,\r\n\r\n      bicInputToEdit: this.checkedbicInput.value,\r\n      canaleToEdit: this.checkedcanale.value,\r\n      raggiungibileToEdit: this.checkedraggiungibile.value,\r\n      //bicOutputToEdit: this.checkedbicOutput.value,\r\n      bicDirettoToEdit: this.checkedbicDiretto.value,\r\n      descrizioneToEdit: this.checkeddescrizione.value,\r\n      validFromToEdit: this.checkedvalidFrom.value,\r\n      validToToEdit: this.checkedvalidTo.value,\r\n      tsModificaToEdit: false,\r\n      utenteRichiestaToEdit: true,\r\n      utenteValidazioneToEdit: false,\r\n\r\n      idEccOrig: this.eccRaggRet.id,\r\n      bicOrig: null,\r\n      canaleOrig: null,\r\n      raggiungibileOrig: null,\r\n      //bicOutputOrig: null,\r\n      bicDirettoOrig: null,\r\n      descrizioneOrig: null,\r\n      validFromOrig: null,\r\n      validToOrig: null,\r\n      tsModificaOrig: null,\r\n      utenteRichiestaOrig: null,\r\n      utenteValidazioneOrig: null\r\n    };\r\n  }\r\n\r\n  getCanaleValue(): string {\r\n    return this.canaliList.find( t => t.codice == this.canale.value).descrizione;\r\n  }\r\n\r\n  getRaggiungibileValue(): string {\r\n    const val = ((this.raggiungibile.value == TipoFlagEnum.SI) ? TipoFlagEnum.SI : TipoFlagEnum.NO);\r\n    return this.raggiungibileList.find( t => t.codice == val).descrizione;\r\n  }\r\n\r\n  getvalidFromValue() {\r\n    return this.formatterUtils.dateToString(this.validFrom.value);\r\n  }\r\n\r\n  getvalidToValue() {\r\n    return this.formatterUtils.dateToString(this.validTo.value);\r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtcmVhY2hhYmlsaXR5LXJldGFpbC9yaWNlcmNhLWVjYy1yZWFjaGFiaWxpdHktcmV0YWlsL3JpY2VyY2EtZWNjLXJlYWNoYWJpbGl0eS1yZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {SearchModel} from \"../../../../models/search\";\r\nimport {ActionRenderModel, ButtonModel} from \"../../../../models/action-render-model\";\r\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {EccReachabilityRetailService} from \"../../../../services/ecc-reachability-retail.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {of} from \"rxjs\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {GenericActionRenderComponent} from \"../../generic-action-render/generic-action-render.component\";\r\nimport {AbstractEccReachabilityRetailComponent} from \"../abstract-ecc-reachability-retail.component\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {GenericTableModel} from \"../../../../models/generic-table-model\";\r\nimport {RSQLUtils} from \"../../../../utilities/rsqlUtil\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {get} from 'lodash';\r\nimport {Utils} from \"../../../../utilities/util\";\r\n\r\n@Component({\r\n  selector: 'app-ricerca-ecc-reachability-retail',\r\n  templateUrl: './ricerca-ecc-reachability-retail.component.html',\r\n  styleUrls: ['./ricerca-ecc-reachability-retail.component.scss']\r\n})\r\nexport class RicercaEccReachabilityRetailComponent extends AbstractEccReachabilityRetailComponent implements OnInit {\r\n\r\n  eccReachabilityRetailModel: GenericTableModel;\r\n  showTable = false;\r\n  ricercaForm: FormGroup;\r\n  util: Utils ;\r\n\r\n  constructor( protected eccReachabilityRetailService: EccReachabilityRetailService,\r\n               protected securityService: SecurityService,\r\n               protected userService: UserService,\r\n               protected filterUtils: FilterUtils,\r\n               protected formatterUtils: FormatterUtils,\r\n               protected formBuilder: FormBuilder,\r\n               protected rSQLUtils: RSQLUtils,\r\n               protected utils: Utils,\r\n               protected routingService: RoutingService,\r\n               protected route: ActivatedRoute,\r\n               protected router: Router) {\r\n\r\n    super(eccReachabilityRetailService, securityService, userService, formatterUtils, routingService, route);\r\n    this.util = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.buildForm();\r\n    this.buildModel();\r\n    this.manageNavigation();\r\n  }\r\n\r\n  protected manageNavigation() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (!!params && !!get(params, this.BACK) && !!this.getSearcModel()) {\r\n        this.ricercaForm.setValue(this.getSearcModel().form);\r\n        this.submit(null, false);\r\n      } else {\r\n        this.setSearcModel(this.initSearchModel());\r\n      }\r\n    });\r\n  }\r\n\r\n  protected getSearcModel() {\r\n    return this.eccReachabilityRetailService.searchModel;\r\n  }\r\n\r\n  protected setSearcModel(searchModel: SearchModel) {\r\n    return this.eccReachabilityRetailService.searchModel = searchModel;\r\n  }\r\n\r\n  protected buildForm() {\r\n    this.ricercaForm = this.formBuilder.group({\r\n      bicInput: new FormControl(null, [this.wildcard2Validator.bind(this)]   ),\r\n      canale: new FormControl(null, []   ),\r\n      raggiungibile: new FormControl(null, []   ),\r\n      //bicOutput: new FormControl(null, [this.wildcard2Validator.bind(this), this.bicValidator.bind(this)] ),\r\n      bicDiretto: new FormControl(null, [this.wildcard2Validator.bind(this), this.bicValidator.bind(this)] ),\r\n      descrizione: new FormControl(null, [this.wildcard2Validator.bind(this)] ),\r\n      dataInizioValiditaDa: new FormControl(null, []   ),\r\n      dataInizioValiditaA: new FormControl(null, []   ),\r\n      dataFineValiditaDa: new FormControl(null, []   ),\r\n      dataFineValiditaA: new FormControl(null, []   ),\r\n      utenteInserimento: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      utenteApprovatore: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n    }, { validator: dateValidator( [\r\n        {field1: 'dataInizioValiditaDa', field2: 'dataInizioValiditaA'},\r\n        {field1: 'dataFineValiditaDa', field2: 'dataFineValiditaA'}\r\n      ]) });\r\n  }\r\n\r\n  get bicInput() { return this.ricercaForm.get('bicInput'); }\r\n  get canale() { return this.ricercaForm.get('canale'); }\r\n  get raggiungibile() { return this.ricercaForm.get('raggiungibile'); }\r\n  //get bicOutput() { return this.ricercaForm.get('bicOutput'); }\r\n  get bicDiretto() { return this.ricercaForm.get('bicDiretto'); }\r\n  get descrizione() { return this.ricercaForm.get('descrizione'); }\r\n  get dataInizioValiditaDa() { return this.ricercaForm.get('dataInizioValiditaDa'); }\r\n  get dataInizioValiditaA() { return this.ricercaForm.get('dataInizioValiditaA'); }\r\n  get dataFineValiditaDa() { return this.ricercaForm.get('dataFineValiditaDa'); }\r\n  get dataFineValiditaA() { return this.ricercaForm.get('dataFineValiditaA'); }\r\n  get utenteInserimento() { return this.ricercaForm.get('utenteInserimento'); }\r\n  get utenteApprovatore() { return this.ricercaForm.get('utenteApprovatore'); }\r\n\r\n  reset( field) {\r\n    this.ricercaForm.get(field).setValue(null);\r\n  }\r\n\r\n  buildModel() {\r\n    this.eccReachabilityRetailModel = {\r\n      domLayout: 'autoHeight',\r\n      gridOptions: {\r\n        rowHeight: 30,\r\n        paginationPageSize: 10,\r\n        defaultColDef: {\r\n          sortable: true\r\n        },\r\n        context: {\r\n          componentParent: this\r\n        },\r\n        onGridReady: () => this.initializeGrid()\r\n      },\r\n      rowData: [],\r\n      pagination: true,\r\n      columnsFitAvailable: true,\r\n      columnDefs: this.buildColumnDef(),\r\n      enableCsvExport: true,\r\n      enablePdfExport: true,\r\n      enableColumnSelection: true\r\n    };\r\n  }\r\n\r\n  protected initializeGrid(): void {\r\n    this.eccReachabilityRetailModel.gridOptions.api.sizeColumnsToFit();\r\n    this.eccReachabilityRetailModel.gridOptions.onGridSizeChanged = evt =>  this.eccReachabilityRetailModel.gridOptions.api ?  this.eccReachabilityRetailModel.gridOptions.api.sizeColumnsToFit() : null;\r\n  }\r\n\r\n  protected buildColumnDef() {\r\n    let order = 0;\r\n    return  [\r\n      {colId: ('id_' + order++), headerName: 'BIC INPUT',              field: 'bicInput',               filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'CANALE',                 field: 'canale.descrizione',     filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'RAGGIUNGIBILE',          field: 'raggiungibile',          filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.getBooleanAsString(data.data, 'raggiungibile'), exportOptions: {skipColumn: false}},\r\n      //{colId: ('id_' + order++), headerName: 'BIC OUTPUT',             field: 'bicOutput',              filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'BIC DIRETTO',            field: 'bicDiretto',             filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'INIZIO VALIDITA\\'',      field: 'validFrom',              filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validFrom'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'FINE VALIDITA\\'',        field: 'validTo',                filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validTo'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'AZIONI',                 field: '',                       resizable: true, cellRendererFramework: GenericActionRenderComponent, cellRendererParams: {modelFn: this.buildActionRenderModel.bind(this)}, sortable: false, exportOptions: {skipColumn: true}, pinned: 'right', minWidth: 150}\r\n    ];\r\n  }\r\n\r\n  public buildActionRenderModel(data): ActionRenderModel {\r\n    let detailButton =  null;\r\n\r\n    if (this.userIsDet || this.userIsVis) {\r\n      detailButton = <ButtonModel> {\r\n        label: 'Visualizza dettaglio Eccezione ',\r\n        routerLink: this.routingService.getRouteByKey(this.routingService.ECC_RAGG_RET_DETAIL),\r\n        params: {idEccRaggRet: data.id, backUrl: this.routingService.ECC_RAGG_RET_SEARCH},\r\n        enabled: true,\r\n        sessionKey : this.routingService.ECC_RAGG_RET_DETAIL\r\n      };\r\n    }\r\n\r\n    let modifyButton =  null;\r\n    const deleteButton =  null;\r\n\r\n    //La condizione che il record debba essere attivo è statta modificata da Ernesto sul DRF: cfr mail del 20/09/21\r\n    if (this.userIsDet /*&& this.isEccReachabilityRetailActive(data)*/) {\r\n      modifyButton = <ButtonModel> {\r\n        label: 'Modifica Eccezione ',\r\n        routerLink: this.routingService.getRouteByKey(this.routingService.ECC_RAGG_RET_MODIFY),\r\n        params: {idEccRaggRet: data.id, backUrl: this.routingService.ECC_RAGG_RET_SEARCH},\r\n        enabled: true,\r\n        sessionKey : this.routingService.ECC_RAGG_RET_MODIFY\r\n      };\r\n    }\r\n    return <ActionRenderModel> {\r\n      detailButton: detailButton,\r\n      modifyButton: modifyButton,\r\n      deleteButton: deleteButton\r\n    };\r\n  }\r\n\r\n  submit(targetEl: HTMLElement, resetPage: boolean) {\r\n\r\n    this.showTable = false;\r\n    this.resetError();\r\n    this.eccReachabilityRetailModel.rowData = [];\r\n    this.eccReachabilityRetailModel.enableMessageOnSizeResultLimit = false;\r\n\r\n    this.manageSearchModel( this.eccReachabilityRetailModel, this.getSearcModel(), resetPage);\r\n\r\n    if (!!this.ricercaForm.valid) {\r\n      this.showSpinner();\r\n\r\n      if (!this.getSearcModel()) {\r\n        this.setSearcModel(this.initSearchModel());\r\n      }\r\n      this.getSearcModel().form = this.ricercaForm.value;\r\n      const searchString = this.buildRsqlSearchString();\r\n\r\n      this.eccReachabilityRetailService.getEccezioniReachabilityRetail(searchString).pipe(\r\n\r\n          tap( res => {\r\n            this.eccReachabilityRetailModel.enableMessageEmptyResult = true;\r\n            if (!!res && res.content.length > 0 ) {\r\n              this.eccReachabilityRetailModel.enableMessageEmptyResult = false;\r\n              this.eccReachabilityRetailModel.rowData = res.content;\r\n              this.eccReachabilityRetailModel.enableMessageOnSizeResultLimit = false;\r\n              this.eccReachabilityRetailModel.searchRecordLenght = res.content.length;\r\n              if ( res.totalElements > res.content.length) {\r\n                this.eccReachabilityRetailModel.enableMessageOnSizeResultLimit = true;\r\n                this.eccReachabilityRetailModel.searchRecordLenght = res.totalElements;\r\n              }\r\n            }\r\n          }),\r\n\r\n          tap ( res => {\r\n            this.showTable = true;\r\n            if (!!targetEl) {\r\n              this.scrollToResult(targetEl);\r\n            }\r\n            this.hideSpinner();\r\n          }),\r\n\r\n          catchError((error) => {\r\n            console.log ('Error - submit', error);\r\n            this.showTable = false;\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  protected scrollToResult(targetEl: HTMLElement) {\r\n    setTimeout(function() {\r\n      console.log('Scrolling to table');\r\n      targetEl.scrollIntoView({behavior: 'smooth'});\r\n    }, 500);\r\n  }\r\n\r\n  protected buildRsqlSearchString() {\r\n\r\n    const rSQLArray: string [] = [];\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.bicInput.value, 'bicInput'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.canale.value, 'canale'));\r\n    rSQLArray.push(this.rSQLUtils.manageBooleanSelect( this.formatterUtils.getStringAsBoolean(this.raggiungibile.value), 'raggiungibile'));\r\n    //rSQLArray.push(this.rSQLUtils.manageWildcard( this.bicOutput.value, 'bicOutput'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.bicDiretto.value, 'bicDiretto'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.descrizione.value, 'descrizione'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataInizioValiditaDa.value), this.formatterUtils.dateToString(this.dataInizioValiditaA.value), 'validFrom'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataFineValiditaDa.value), this.formatterUtils.dateToString(this.dataFineValiditaA.value), 'validTo'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteInserimento.value, 'utenteRichiesta'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteApprovatore.value, 'utenteValidazione'));\r\n\r\n    const searchString = this.rSQLUtils.getSearchString(rSQLArray);\r\n    console.log('RSQL searchString:' + searchString);\r\n    return searchString;\r\n  }\r\n\r\n  goToInsertEccReachabilityRetail() {\r\n    this.setSession(this.routingService.ECC_RAGG_RET_INSERT, {backUrl: this.routingService.ECC_RAGG_RET_SEARCH});\r\n    this.router.navigate(['/anagrafiche/eccreachabilityretail/inserimento'], {});\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}