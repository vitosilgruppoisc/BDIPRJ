{"version":3,"sources":["./src/app/views/anagrafiche/reachability/reachability/reachability.component.html","./src/app/services/reachability.service.ts","./src/app/views/anagrafiche/reachability/reachability-routing.module.ts","./src/app/views/anagrafiche/reachability/reachability.module.ts","./src/app/views/anagrafiche/reachability/reachability/reachability.component.scss","./src/app/views/anagrafiche/reachability/reachability/reachability.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,gZAAiV,iIAAiI,gBAAgB,iwBAAiwB,eAAe,w/BAAw/B,8YAA8Y,u2DAAu2D,uYAAuY,eAAe,msFAAmsF,eAAe,68BAA68B,aAAa,oQ;;;;;;;;;;;;;;;;;;;;ACArgR;AACI;AAEC;AACa;AAQ7D,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,6DAAa;IAIlD,YAAsB,IAAgB,EAAY,oBAA0C;QACxF,KAAK,CAAC,IAAI,EAAE,oBAAoB,CAAE,CAAC;QADjB,SAAI,GAAJ,IAAI,CAAY;QAAY,yBAAoB,GAApB,oBAAoB,CAAsB;IAE5F,CAAC;IAED,eAAe,CAAC,mBAAwC;QACpD,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,2BAA2B,CAAC;QAC9D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAuB,GAAG,EAAE,mBAAmB,CAAC,CAAC;IAC1E,CAAC;CACJ;;YAR+B,+DAAU;YAAkC,2EAAoB;;AAJnF,mBAAmB;IAH/B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;2EAK8B,+DAAU,EAAkC,2EAAoB;GAJnF,mBAAmB,CAY/B;AAZ+B;;;;;;;;;;;;;;;;;;;;;;ACZS;AACc;AACb;AACQ;AAC0B;AAG5E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACJ,KAAK,EAAE,iBAAiB;SACzB;QACD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,0FAAqB;gBAChC,IAAI,EAAE;oBACJ,KAAK,EAAE,EAAE;oBACT,KAAK,EAAE,CAAC,iDAAS,CAAC,eAAe,EAAE,iDAAS,CAAC,eAAe,EAAE,iDAAS,CAAC,0BAA0B,EAAE,iDAAS,CAAC,eAAe,CAAC;iBAC/H;gBACD,WAAW,EAAE,CAAC,yDAAe,CAAC;aAC/B;SACF;KACF;CACF,CAAC;AAMF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAAI;AAA7B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BG;AACM;AAE2B;AACI;AACJ;AACV;AACwC;AAC/B;AACT;AACsC;AACN;AAsBhG,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAI;AAAtB,kBAAkB;IAnB9B,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,0FAAqB,CAAC;QACrC,OAAO,EAAE;YACP,4DAAY;YACZ,iFAAmB;YACnB,sFAAyB;YACzB,kEAAmB;YACnB,6DAAc,CAAC,OAAO,EAAE;YACxB,kEAAmB;YACnB,0DAAW;YACX,sFAAkB;YAClB,6EAAe;YACf,gEAAiB,CAAC,cAAc,CAAC;gBAC/B,oHAA4B;aAC7B,CAAC;YACF,+DAAgB,CAAC,OAAO,EAAE;YAC1B,8GAAyB;SAC1B;KACF,CAAC;GACW,kBAAkB,CAAI;AAAJ;;;;;;;;;;;;;ACjC/B;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACgC;AAIH;AACb;AACE;AACA;AACrB;AACA;AACkC;AACb;AAC4C;AACxF;AACsD;AAS2B;AAOzG,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAS,4FAA4B;IAatE,YAAqB,mBAAwC,EACtC,eAAgC,EAChC,WAAwB,EAC1B,WAAwB,EACtB,cAA8B,EAC9B,cAA8B,EAC9B,KAAqB;QAG1C,KAAK,CAAE,eAAe,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;QATzD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QAb5C,cAAS,GAAG,KAAK,CAAC;QAGlB,kBAAa,GAAG,IAAI,CAAC;QACrB,iBAAY,GAAG,IAAI,CAAC;QACpB,gBAAW,GAAG,IAAI,CAAC;IAYnB,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAES,UAAU;QAClB,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC,IAAI,CAC3C,0DAAG,CAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,CAC1C,CAAC,SAAS,EAAE,CAAC;QAEd,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC,IAAI,CACvC,0DAAG,CAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CACvC,CAAC,SAAS,EAAE,CAAC;QAEd,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAC5C,0DAAG,CAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,CACxC,CAAC,SAAS,EAAE,CAAC;IAChB,CAAC;IAES,SAAS;QACjB,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,EAAE,CAAC;YACpC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,UAAU,EAAE,EAAC,EAAE,EAAE,CAAI;YACpH,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,EAAE,CAAI;YACjC,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,EAAE,CAAE;YACvC,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,EAAE,CAAE;YAChC,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,EAAE,CAAE;YAC/B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,EAAE,CAAE;SACrC,EAAE,EAAE,SAAS,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC/B,iFAAa,CAAE,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;gBACnD,6HAAyC,EAAE;aAAC,CAC7C,EAAC,CAAC,CAAC;QAEN,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CACjC,GAAG,EAAE;YACH,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CACJ,CAAC;IACJ,CAAC;IAEO,eAAe;QAErB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,uEAA0B,CAAC,MAAM,EAAE;YAC7D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,uEAA0B,CAAC,IAAI,EAAE;YAC3D,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,uEAA0B,CAAC,GAAG,EAAE;YAC1D,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B;QAED,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACnC,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC;IACpC,CAAC;IAED,IAAI,SAAS,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7D,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,GAAG,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,WAAW,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACjE,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAI,GAAG,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEjD,KAAK,CAAE,KAAK;QACV,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,UAAU;QACR,IAAI,CAAC,iBAAiB,GAAG;YACvB,SAAS,EAAE,YAAY;YACvB,WAAW,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,kBAAkB,EAAE,EAAE;gBACtB,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;iBACf;gBACD,OAAO,EAAE;oBACP,eAAe,EAAE,IAAI;iBACtB;gBACD,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE;aACzC;YACD,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,IAAI;YAChB,mBAAmB,EAAE,IAAI;YACzB,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE;YACjC,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,IAAI;YACrB,qBAAqB,EAAE,IAAI;SAC5B,CAAC;IACJ,CAAC;IAES,cAAc;QACtB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC1D,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,GAAG,GAAG,CAAC,EAAE,CAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5K,CAAC;IAES,cAAc;QACtB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,OAAQ;YACN,EAAC,KAAK,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAM,KAAK,EAAE,EAAE,EAAc,SAAS,EAAE,IAAI,EAAE,qBAAqB,EAAE,oHAA4B,EAAE,kBAAkB,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,aAAa,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;YAClT,EAAC,KAAK,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,UAAU,EAAqB,KAAK,EAAE,UAAU,EAAW,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,EAAC;YACpL,EAAC,KAAK,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAuB,KAAK,EAAE,QAAQ,EAAa,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,EAAC;YACpL,uLAAuL;YACvL,EAAC,KAAK,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,0BAA0B,EAAK,KAAK,EAAE,KAAK,EAAO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,EAAC;SAC5K,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,GAAG,KAAK,CAAC;QAC9D,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,GAAG,KAAK,CAAC;QAExD,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACpC,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,IAAI,CAElD,0DAAG,CAAE,GAAG,CAAC,EAAE;gBACT,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,8DAA8D,CAAC;gBAC3G,IAAI,CAAC,CAAC,GAAG;oBACL,GAAG,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC;oBAC3B,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,IAAI,GAAG;oBACzC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ;oBAC9B,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAC1C;oBACC,MAAM,OAAO,GAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACjE,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBACjD,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;iBAC1C;qBAAM,IAAI,CAAC,CAAC,GAAG;oBACZ,GAAG,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC;oBAC3B,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,KAAK,GAAG,EAAE;oBAC9C,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,+DAA+D,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;iBAC1J;YACH,CAAC,CAAC,EAEF,0DAAG,CAAG,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,CAAC,EAEF,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO,gDAAE,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,CAAC,CACL,CAAC,SAAS,EAAE,CAAC;SACf;IACH,CAAC;IAEO,YAAY;QAClB,OAA4B;YAC1B,WAAW,EAAE,CAAC;oBACZ,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBAC1D,GAAG,EAAG,IAAI,CAAC,GAAG,CAAC,KAAK;oBACpB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;oBACnC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;oBACrB,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;oBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;iBAC9B,CAAC;SACH,CAAC;IACJ,CAAC;IAED,sBAAsB,CAAC,IAAI;QAEzB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAI,IAAI,CAAC,kBAAkB,IAAI,GAAG,EAAE;YAClC,QAAQ,GAAiB;gBACvB,OAAO,EAAE,IAAI;aACd,CAAC;SACH;aAAM;YACL,QAAQ,GAAiB;gBACvB,OAAO,EAAE,IAAI;gBACb,OAAO,EAAG,IAAI,CAAC,oBAAoB;aACpC,CAAC;SACH;QAED,OAA2B;YACzB,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;SACnB,CAAC;IACJ,CAAC;IAEO,YAAY,CAAC,QAA4B;QAC/C,MAAM,OAAO,GAAgC,EAAE,CAAC;QAChD,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAC,EAAE;YACpB,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrD,CAAC,CAAC,UAAU,CAAC,OAAO,CAAE,EAAE,CAAC,EAAE;oBAC3B,IAAI,CAAC,CAAC,kBAAkB,IAAI,GAAG,EAAE;wBAC/B,OAAO,CAAC,IAAI,CAAC;4BACX,QAAQ,EAAE,CAAC,CAAC,QAAQ;4BACpB,GAAG,EAAE,IAAI,CAAC,WAAW;4BACrB,MAAM,EAAE,IAAI,CAAC,WAAW;4BACxB,kBAAkB,EAAE,CAAC,CAAC,kBAAkB;4BACxC,oBAAoB,EAAE,CAAC,CAAC,oBAAoB;yBAC7C,CAAC,CAAC;qBACJ;yBAAM;wBACH,OAAO,CAAC,IAAI,CAAC;4BACX,QAAQ,EAAE,CAAC,CAAC,QAAQ;4BACpB,GAAG,EAAE,EAAE,CAAC,cAAc;4BACtB,MAAM,EAAE,EAAE,CAAC,MAAM;4BACjB,kBAAkB,EAAE,CAAC,CAAC,kBAAkB;4BACxC,oBAAoB,EAAE,CAAC,CAAC,oBAAoB;yBAC7C,CAAC,CAAC;qBACN;gBAAA,CAAC,CAAC;aAAC;QAAA,CAAC,CAAC,CAAC;QACT,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;;YArP2C,mFAAmB;YACrB,yDAAe;YACnB,qDAAW;YACb,0DAAW;YACN,wEAAc;YACd,wEAAc;YACvB,8DAAc;;AAnBjC,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,uQAA4C;;KAE7C,CAAC;2EAc0C,mFAAmB;QACrB,yDAAe;QACnB,qDAAW;QACb,0DAAW;QACN,wEAAc;QACd,wEAAc;QACvB,8DAAc;GAnBjC,qBAAqB,CAkQjC;AAlQiC","file":"reachability-reachability-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Raggiungibilità </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"ricercaForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"submit()\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"tipologia\\\" class=\\\"col-2 col-form-label\\\">Tipologia<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"tipologia\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"tipologia.invalid && (form.submitted || (tipologia.dirty || tipologia.touched))\\\" formControlName=\\\"tipologia\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let t of tipologiaList\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"tipologia.errors?.required && (form.submitted || (tipologia.dirty || tipologia.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"data\\\" class=\\\"col-2 col-form-label\\\">Data<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" >\\r\\n                                <input id=\\\"data\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"data.invalid && (form.submitted || (data.dirty || data.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"data\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!data.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('data')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"data.errors?.required && (form.submitted || (data.dirty || data.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"data.errors?.dateformat && (form.submitted || (data.dirty || data.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nsc\\\" class=\\\"col-2 col-form-label\\\">Nsc:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"nsc\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nsc.invalid && (form.submitted || (nsc.dirty || nsc.touched))\\\" formControlName=\\\"nsc\\\" maxlength=\\\"10\\\" [readOnly]=\\\"!!nscCCReadonly\\\">\\r\\n                                <div *ngIf=\\\"nsc.errors?.required && (form.submitted || (nsc.dirty || nsc.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"countryCode\\\" class=\\\"col-2 col-form-label\\\">Country Code:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select *ngIf=\\\"!nscCCReadonly; else countryCodeTemp\\\" id=\\\"countryCode\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"countryCode.invalid && (form.submitted || (countryCode.dirty || countryCode.touched))\\\" formControlName=\\\"countryCode\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let c of countryCodeList\\\" [value]=\\\"c.codice\\\">{{c.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"countryCode.errors?.required && (form.submitted || (countryCode.dirty || countryCode.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #countryCodeTemp>\\r\\n                            <input class=\\\"form-control\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"iban\\\" class=\\\"col-2 col-form-label\\\">Iban:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"iban\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"iban.invalid && (form.submitted || (iban.dirty || iban.touched))\\\" formControlName=\\\"iban\\\" maxlength=\\\"35\\\" [readOnly]=\\\"!!ibanReadonly\\\">\\r\\n                                <div *ngIf=\\\"iban.errors?.required && (form.submitted || (iban.dirty || iban.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">Bic:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bic\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bic.invalid && (form.submitted || (bic.dirty || bic.touched))\\\" formControlName=\\\"bic\\\" maxlength=\\\"11\\\" [readOnly]=\\\"!!bicReadonly\\\">\\r\\n                                <div *ngIf=\\\"bic.errors?.required && (form.submitted || (bic.dirty || bic.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"circuito\\\" class=\\\"col-2 col-form-label\\\">Circuito:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"circuito\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"circuito.invalid && (form.submitted || (circuito.dirty || circuito.touched))\\\" formControlName=\\\"circuito\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let c of circuitiList\\\" [value]=\\\"c.codice\\\">{{c.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"circuito.errors?.required && (form.submitted || (circuito.dirty || circuito.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-2 mx-auto\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\">Calcola Raggiungibilità</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <br/>\\r\\n                <div>\\r\\n                    <app-generic-table *ngIf=\\\"showTable\\\" [model]=\\\"reachabilityModel\\\"></app-generic-table>\\r\\n                    <br/>\\r\\n                    <span *ngIf=\\\"!reachabilityModel.errorCustomMessage\\\"><b>{{NOT_DEFINED}}</b> indica campo non valorizzato </span>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport {CommonService} from \"./common.service\";\r\nimport {SearchModel} from \"../models/search\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ConfigurationService} from \"./configuration.service\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {ReachabilityRequest, ReachabilityResponse, TranscodingResponse} from \"../models/transc-ragg-model\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ReachabilityService extends CommonService {\r\n\r\n    public searchModel: SearchModel;\r\n\r\n    constructor(protected http: HttpClient, protected configurationService: ConfigurationService) {\r\n        super(http, configurationService );\r\n    }\r\n\r\n    getReachability(reachabilityRequest: ReachabilityRequest): Observable<ReachabilityResponse> {\r\n        const url = `${this.apiEndpointA2A}/reachability/v1.0/public`;\r\n        return this.http.post<ReachabilityResponse>(url, reachabilityRequest);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {EUserRole} from \"../../../models\";\r\nimport {SecurityService} from \"../../../services\";\r\nimport {ReachabilityComponent} from \"./reachability/reachability.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Raggiungibilità',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ReachabilityComponent,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_SPI, EUserRole.ANAGRAFICHE_BIL, EUserRole.ANAGRAFICHE_VISUALIZZATORE, EUserRole.ANAGRAFICHE_DET]\r\n        },\r\n        canActivate: [SecurityService]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReachabilityRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReachabilityRoutingModule } from './reachability-routing.module';\r\nimport { ReachabilityComponent } from './reachability/reachability.component';\r\nimport {GepaGuiCommonModule} from \"../../../common/gepagui-common.module\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {BDIAlertModule, BDIDatagridModule, BDIDatepickerModule, BDITooltipModule} from \"scam-bdi-uikit\";\r\nimport {GenericTableModule} from \"../generic-table/generic-table.module\";\r\nimport {InfoPanelModule} from \"../info-panel/info-panel.module\";\r\nimport {GenericResultRenderComponent} from \"../generic-result-render/generic-result-render.component\";\r\nimport {GenericResultRenderModule} from \"../generic-result-render/generic-result-render.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReachabilityComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GepaGuiCommonModule,\r\n    ReachabilityRoutingModule,\r\n    ReactiveFormsModule,\r\n    BDIAlertModule.forRoot(),\r\n    BDIDatepickerModule,\r\n    FormsModule,\r\n    GenericTableModule,\r\n    InfoPanelModule,\r\n    BDIDatagridModule.withComponents([\r\n      GenericResultRenderComponent,\r\n    ]),\r\n    BDITooltipModule.forRoot(),\r\n    GenericResultRenderModule\r\n  ],\r\n})\r\nexport class ReachabilityModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9yZWFjaGFiaWxpdHkvcmVhY2hhYmlsaXR5L3JlYWNoYWJpbGl0eS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractAnagraficheComponent} from \"../../abstract-anagrafiche.component\";\r\nimport {CountryCode} from \"../../../../models/ecc-transcoding-retail\";\r\nimport {GenericComboItemModel} from \"../../../../models/combo\";\r\nimport {GenericTableModel} from \"../../../../models/generic-table-model\";\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {CircuitoEnum, TipologiaRichiestaTrRaEnum} from \"../../../../models/enum\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {transcodingReachabilityTipologiaValidator} from \"../../../../validators/trans-ragg-tipologia-validator\";\r\nimport {of} from \"rxjs\";\r\nimport {ReachabilityService} from \"../../../../services/reachability.service\";\r\nimport {\r\n  BicRechabilityResultInfo,\r\n  BicTranscodingResultInfo,\r\n  CircuitoTrRaItem,\r\n  ReachabilityRequest,\r\n  TranscodingRequest\r\n} from \"../../../../models/transc-ragg-model\";\r\nimport {ResultModel, ResultRenderModel} from \"../../../../models/result-render-model\";\r\nimport {GenericResultRenderComponent} from \"../../generic-result-render/generic-result-render.component\";\r\n\r\n@Component({\r\n  selector: 'app-reachability',\r\n  templateUrl: './reachability.component.html',\r\n  styleUrls: ['./reachability.component.scss']\r\n})\r\nexport class ReachabilityComponent extends  AbstractAnagraficheComponent implements OnInit {\r\n\r\n  countryCodeList: CountryCode [];\r\n  tipologiaList: GenericComboItemModel [];\r\n  circuitiList: GenericComboItemModel [];\r\n  reachabilityModel: GenericTableModel;\r\n  showTable = false;\r\n  ricercaForm: FormGroup;\r\n\r\n  nscCCReadonly = true;\r\n  ibanReadonly = true;\r\n  bicReadonly = true;\r\n\r\n  constructor( private reachabilityService: ReachabilityService,\r\n               protected securityService: SecurityService,\r\n               protected userService: UserService,\r\n               private formBuilder: FormBuilder,\r\n               protected formatterUtils: FormatterUtils,\r\n               protected routingService: RoutingService,\r\n               protected route: ActivatedRoute\r\n\r\n  ) {\r\n    super( securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.buildCombo();\r\n    this.buildForm();\r\n    this.buildModel();\r\n  }\r\n\r\n  protected buildCombo() {\r\n    this.reachabilityService.getCountryCodes().pipe(\r\n        tap( res => this.countryCodeList = res)\r\n    ).subscribe();\r\n\r\n    this.reachabilityService.getCircuiti().pipe(\r\n        tap( res => this.circuitiList = res)\r\n    ).subscribe();\r\n\r\n    this.reachabilityService.getTipologia(true).pipe(\r\n        tap( res => this.tipologiaList = res)\r\n    ).subscribe();\r\n  }\r\n\r\n  protected buildForm() {\r\n    const today = new Date();\r\n    this.ricercaForm = this.formBuilder.group({\r\n      tipologia: new FormControl(null, []),\r\n      data: new FormControl({year: today.getFullYear(), month: (today.getUTCMonth() + 1), day: today.getUTCDate()}, []   ),\r\n      nsc: new FormControl(null, []   ),\r\n      countryCode: new FormControl(null, [] ),\r\n      iban: new FormControl(null, [] ),\r\n      bic: new FormControl(null, [] ),\r\n      circuito: new FormControl(null, [] ),\r\n    }, { validator: Validators.compose([\r\n        dateValidator( [{field1: 'data', required1: true}]),\r\n        transcodingReachabilityTipologiaValidator()]\r\n      )});\r\n\r\n    this.tipologia.valueChanges.subscribe(\r\n        () => {\r\n          this.manageTipologia();\r\n        }\r\n    );\r\n  }\r\n\r\n  private manageTipologia() {\r\n\r\n    this.nscCCReadonly = true;\r\n    this.ibanReadonly = true;\r\n    this.bicReadonly = true;\r\n\r\n    if (this.tipologia.value == TipologiaRichiestaTrRaEnum.NSC_CC) {\r\n      this.reset('iban');\r\n      this.reset('bic');\r\n      this.nscCCReadonly = false;\r\n    }\r\n\r\n    if (this.tipologia.value == TipologiaRichiestaTrRaEnum.IBAN) {\r\n      this.reset('nsc');\r\n      this.reset('countryCode');\r\n      this.reset('bic');\r\n      this.ibanReadonly = false;\r\n    }\r\n\r\n    if (this.tipologia.value == TipologiaRichiestaTrRaEnum.BIC) {\r\n      this.reset('nsc');\r\n      this.reset('countryCode');\r\n      this.reset('iban');\r\n      this.bicReadonly = false;\r\n    }\r\n\r\n    this.nsc.updateValueAndValidity();\r\n    this.countryCode.updateValueAndValidity();\r\n    this.iban.updateValueAndValidity();\r\n    this.bic.updateValueAndValidity();\r\n  }\r\n\r\n  get tipologia() { return this.ricercaForm.get('tipologia'); }\r\n  get data() { return this.ricercaForm.get('data'); }\r\n  get nsc() { return this.ricercaForm.get('nsc'); }\r\n  get countryCode() { return this.ricercaForm.get('countryCode'); }\r\n  get iban() { return this.ricercaForm.get('iban'); }\r\n  get circuito() { return this.ricercaForm.get('circuito'); }\r\n  get bic() { return this.ricercaForm.get('bic'); }\r\n\r\n  reset( field) {\r\n    this.ricercaForm.get(field).setValue(null);\r\n  }\r\n\r\n  buildModel() {\r\n    this.reachabilityModel = {\r\n      domLayout: 'autoHeight',\r\n      gridOptions: {\r\n        rowHeight: 30,\r\n        paginationPageSize: 10,\r\n        defaultColDef: {\r\n          sortable: true\r\n        },\r\n        context: {\r\n          componentParent: this\r\n        },\r\n        onGridReady: () => this.initializeGrid()\r\n      },\r\n      rowData: [],\r\n      pagination: true,\r\n      columnsFitAvailable: true,\r\n      columnDefs: this.buildColumnDef(),\r\n      enableCsvExport: true,\r\n      enablePdfExport: true,\r\n      enableColumnSelection: true\r\n    };\r\n  }\r\n\r\n  protected initializeGrid(): void {\r\n    this.reachabilityModel.gridOptions.api.sizeColumnsToFit();\r\n    this.reachabilityModel.gridOptions.onGridSizeChanged = evt =>  this.reachabilityModel.gridOptions.api ?  this.reachabilityModel.gridOptions.api.sizeColumnsToFit() : null;\r\n  }\r\n\r\n  protected buildColumnDef() {\r\n    let order = 0;\r\n    return  [\r\n      {colId: ('id_' + order++), headerName: '',     field: '',             resizable: true, cellRendererFramework: GenericResultRenderComponent, cellRendererParams: {modelFn: this.buildResultRenderModel.bind(this)}, sortable: false, exportOptions: {skipColumn: true}, pinned: 'left', minWidth: 30, maxWidth: 50},\r\n      {colId: ('id_' + order++), headerName: 'CIRCUITO',                    field: 'circuito',          filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'CANALE',                      field: 'canale',            filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      //{colId: ('id_' + order++), headerName: 'REACHABLE BIC',               field: 'reachableBic',      filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'BIC PARTECIPANTE DIRETTO',    field: 'bic',      filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n    ];\r\n  }\r\n\r\n  submit() {\r\n    this.showTable = false;\r\n    this.resetError();\r\n    this.reachabilityModel.rowData = [];\r\n    this.reachabilityModel.enableMessageOnSizeResultLimit = false;\r\n    this.reachabilityModel.enableMessageEmptyResult = false;\r\n\r\n    if (!!this.ricercaForm.valid) {\r\n      this.showSpinner();\r\n\r\n      const request = this.buildRequest();\r\n      this.reachabilityService.getReachability(request).pipe(\r\n\r\n          tap( res => {\r\n            this.reachabilityModel.errorCustomMessage = 'Si è verificato un errore nel calcolo della raggiungibilità.';\r\n            if (!!res &&\r\n                res.responseList.length > 0 &&\r\n                res.responseList[0].itemStatusCode == 200 &&\r\n                !!res.responseList[0].circuiti &&\r\n                res.responseList[0].circuiti.length > 0\r\n            ){\r\n              const bicList =  this.buildBicList(res.responseList[0].circuiti);\r\n              this.reachabilityModel.errorCustomMessage = null;\r\n              this.reachabilityModel.rowData = bicList;\r\n            } else if (!!res &&\r\n                res.responseList.length > 0 &&\r\n                res.responseList[0].itemStatusCode !== 200) {\r\n              this.reachabilityModel.errorCustomMessage = 'Si è verificato un errore nel calcolo della raggiungibilità: '.concat(res.responseList[0].itemErrorMessage);\r\n            }\r\n          }),\r\n\r\n          tap ( res => {\r\n            this.showTable = true;\r\n            this.hideSpinner();\r\n          }),\r\n\r\n          catchError((error) => {\r\n            console.log ('Error - submit', error);\r\n            this.showTable = false;\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private buildRequest(): ReachabilityRequest {\r\n    return <ReachabilityRequest>{\r\n      requestList: [{\r\n        dataRif: this.formatterUtils.dateToString(this.data.value),\r\n        nsc: \tthis.nsc.value,\r\n        countryCode: this.countryCode.value,\r\n        iban: this.iban.value,\r\n        bic: this.bic.value,\r\n        circuito: this.circuito.value\r\n      }]\r\n    };\r\n  }\r\n\r\n  buildResultRenderModel(data): ResultRenderModel {\r\n\r\n    let okResult = null;\r\n    let koResult = null;\r\n\r\n    if (data.circuitoStatusCode == 200) {\r\n      okResult = <ResultModel> {\r\n        enabled: true\r\n      };\r\n    } else {\r\n      koResult = <ResultModel> {\r\n        enabled: true,\r\n        message : data.circuitoErrorMessage\r\n      };\r\n    }\r\n\r\n    return <ResultRenderModel> {\r\n      okResult: okResult,\r\n      koResult: koResult\r\n    };\r\n  }\r\n\r\n  private buildBicList(circuiti: CircuitoTrRaItem[]): BicRechabilityResultInfo [] {\r\n    const bicList: BicRechabilityResultInfo [] = [];\r\n    circuiti.forEach( c => {\r\n      if (c.canaliList != null && c.canaliList.length > 0) {\r\n      c.canaliList.forEach( ca => {\r\n      if (c.circuitoStatusCode != 200) {\r\n        bicList.push({\r\n          circuito: c.circuito,\r\n          bic: this.NOT_DEFINED,\r\n          canale: this.NOT_DEFINED,\r\n          circuitoStatusCode: c.circuitoStatusCode,\r\n          circuitoErrorMessage: c.circuitoErrorMessage\r\n        });\r\n      } else {\r\n          bicList.push({\r\n            circuito: c.circuito,\r\n            bic: ca.bicPartDiretto,\r\n            canale: ca.canale,\r\n            circuitoStatusCode: c.circuitoStatusCode,\r\n            circuitoErrorMessage: c.circuitoErrorMessage\r\n          });\r\n      }})}});\r\n    return bicList;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}