{"version":3,"sources":["./src/app/views/anagrafiche/ecc-transcoding-retail/dettaglio-ecc-transcoding-retail/dettaglio-ecc-transcoding-retail.component.html","./src/app/views/anagrafiche/ecc-transcoding-retail/inserimento-ecc-transcoding-retail/inserimento-ecc-transcoding-retail.component.html","./src/app/views/anagrafiche/ecc-transcoding-retail/modifica-ecc-transcoding-retail/modifica-ecc-transcoding-retail.component.html","./src/app/views/anagrafiche/ecc-transcoding-retail/ricerca-ecc-transcoding-retail/ricerca-ecc-transcoding-retail.component.html","./src/app/services/ecc-transcoding-retail.service.ts","./src/app/validators/ecc-trans-ret-nsc-validator.ts","./src/app/views/anagrafiche/ecc-transcoding-retail/abstract-ecc-transcoding-retail.component.ts","./src/app/views/anagrafiche/ecc-transcoding-retail/dettaglio-ecc-transcoding-retail/dettaglio-ecc-transcoding-retail.component.scss","./src/app/views/anagrafiche/ecc-transcoding-retail/dettaglio-ecc-transcoding-retail/dettaglio-ecc-transcoding-retail.component.ts","./src/app/views/anagrafiche/ecc-transcoding-retail/ecc-transcoding-retail-routing.module.ts","./src/app/views/anagrafiche/ecc-transcoding-retail/ecc-transcoding-retail.module.ts","./src/app/views/anagrafiche/ecc-transcoding-retail/inserimento-ecc-transcoding-retail/inserimento-ecc-transcoding-retail.component.scss","./src/app/views/anagrafiche/ecc-transcoding-retail/inserimento-ecc-transcoding-retail/inserimento-ecc-transcoding-retail.component.ts","./src/app/views/anagrafiche/ecc-transcoding-retail/modifica-ecc-transcoding-retail/modifica-ecc-transcoding-retail.component.scss","./src/app/views/anagrafiche/ecc-transcoding-retail/modifica-ecc-transcoding-retail/modifica-ecc-transcoding-retail.component.ts","./src/app/views/anagrafiche/ecc-transcoding-retail/ricerca-ecc-transcoding-retail/ricerca-ecc-transcoding-retail.component.scss","./src/app/views/anagrafiche/ecc-transcoding-retail/ricerca-ecc-transcoding-retail/ricerca-ecc-transcoding-retail.component.ts"],"names":[],"mappings":"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","file":"ecc-transcoding-retail-ecc-transcoding-retail-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-info-circle\\\"></i> Dettaglio Eccezione Transcodifica Dettaglio </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"!!infoPanelModel\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <strong><i class=\\\"fal fa-info-square\\\"></i>Eccezione Transcodifica Dettaglio</strong>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <app-info-panel [model]=\\\"infoPanelModel\\\"></app-info-panel>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row mb-2\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\"class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-plus-square\\\"></i> Nuova Eccezione Transcodifica Dettaglio </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"inserimentoForm\\\" (ngSubmit)=\\\"saveEccTranscodingRetail()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nsc\\\" class=\\\"col-2 col-form-label\\\">Nsc<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"nsc\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nsc.invalid && (form.submitted || (nsc.dirty || nsc.touched))\\\" formControlName=\\\"nsc\\\" maxlength=\\\"10\\\" [readOnly]=\\\"readonlyForm \\\"/>\\r\\n                                <div *ngIf=\\\"nsc.errors?.required && (form.submitted || (nsc.dirty || nsc.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"nsc.errors?.pattern && (form.submitted || (nsc.dirty || nsc.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"countryCode\\\" class=\\\"col-2 col-form-label\\\">Country Code<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select *ngIf=\\\"!readonlyForm; else countryCodeTemp\\\" id=\\\"countryCode\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"countryCode.invalid && (form.submitted || (countryCode.dirty || countryCode.touched))\\\" formControlName=\\\"countryCode\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Seleziona</option>\\r\\n                                <option *ngFor=\\\"let c of countryCodeList\\\" [value]=\\\"c.codice\\\">{{c.descrizione}}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"countryCode.errors?.required && (form.submitted || (countryCode.dirty || countryCode.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                Campo obbligatorio\\r\\n                            </div>\\r\\n                            <ng-template #countryCodeTemp>\\r\\n                                <input class=\\\"form-control\\\" [value]=\\\"getCountryCodeValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">Bic<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bic\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bic.invalid && (form.submitted || (bic.dirty || bic.touched))\\\" formControlName=\\\"bic\\\" [readOnly]=\\\"readonlyForm\\\" toUppercase/>\\r\\n                                <div *ngIf=\\\"bic.errors?.required && (form.submitted || (bic.dirty || bic.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bic.errors?.syntax && (form.submitted || (bic.dirty || bic.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"readonlyForm\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"dataInizioValidita\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputdataInizioValidita\\\">\\r\\n                                <input id=\\\"dataInizioValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValidita.invalid && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValidita\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataInizioValidita.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.required && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.dateformat && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataInizioValidita.errors?.daterange && (form.submitted || (dataInizioValidita.dirty || dataInizioValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputdataInizioValidita>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataInizioValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <label for=\\\"dataFineValidita\\\" class=\\\"col-2 col-form-label\\\">Data Fine Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"!readonlyForm; else inputdataFineValidita\\\">\\r\\n                                <input id=\\\"dataFineValidita\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValidita.invalid && (form.submitted || (dataFineValidita.dirty || dataFineValidita.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValidita\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" [minDate]=\\\"minDate\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!dataFineValidita.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValidita')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.required && (form.submitted || (dataFineValidita.dirty || dataFineValidita.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.dateformat  && (dataFineValidita.dirty || dataFineValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"dataFineValidita.errors?.daterange  && (dataFineValidita.dirty || dataFineValidita.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputdataFineValidita>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getDataFineValiditaValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\" *ngIf=\\\"!readonlyForm\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\">Salva</button>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\" *ngIf=\\\"readonlyForm\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"resetForm()\\\">Nuovo Inserimento</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fas fa-edit\\\"></i> Modifica Eccezione Transcodifica Dettaglio </strong>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isResultOk\\\">\\r\\n                    Operazione correttamente effettuata.\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"modificaForm\\\" (ngSubmit)=\\\"modifyEccTranscodingRetail()\\\" class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nsc\\\" class=\\\"col-2 col-form-label\\\">Nsc<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"nsc\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nsc.invalid && (form.submitted || (nsc.dirty || nsc.touched))\\\" formControlName=\\\"nsc\\\" maxlength=\\\"10\\\" [readOnly]=\\\"!checkednsc.value || readonlyForm \\\"/>\\r\\n                                <div *ngIf=\\\"nsc.errors?.required && (form.submitted || (nsc.dirty || nsc.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"nsc.errors?.pattern && (form.submitted || (nsc.dirty || nsc.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkednsc\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkednsc\\\" type=\\\"checkbox\\\" formControlName=\\\"checkednsc\\\" (click)=\\\"manageCheckBox('nsc')\\\" [attr.disabled]=\\\"true\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"countryCode\\\" class=\\\"col-2 col-form-label\\\">Country Code<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"countryCode\\\" class=\\\"form-control\\\" [value]=\\\"getCountryCodeValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedcountryCode\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedcountryCode\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedcountryCode\\\" (click)=\\\"manageCheckBox('countryCode')\\\" [attr.disabled]=\\\"true\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">Bic<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bic\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bic.invalid && (form.submitted || (bic.dirty || bic.touched))\\\" formControlName=\\\"bic\\\" [readOnly]=\\\"!checkedbic.value || readonlyForm\\\" toUppercase/>\\r\\n                                <div *ngIf=\\\"bic.errors?.required && (form.submitted || (bic.dirty || bic.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bic.errors?.syntax && (form.submitted || (bic.dirty || bic.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedbic\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedbic\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedbic\\\" (click)=\\\"manageCheckBox('bic')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\" [readOnly]=\\\"!checkeddescrizione.value || readonlyForm\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkeddescrizione\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkeddescrizione\\\" type=\\\"checkbox\\\" formControlName=\\\"checkeddescrizione\\\" (click)=\\\"manageCheckBox('descrizione')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"validFrom\\\" class=\\\"col-2 col-form-label\\\">Data Inizio Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"(checkedvalidFrom.value && !readonlyForm); else inputvalidFrom\\\">\\r\\n                                <input id=\\\"validFrom\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"validFrom.invalid && (form.submitted || (validFrom.dirty || validFrom.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"validFrom\\\"  bdiDatepicker #datepickerDA=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDA.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!validFrom.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('validFrom')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"validFrom.errors?.required && (form.submitted || (validFrom.dirty || validFrom.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"validFrom.errors?.dateformat && (form.submitted || (validFrom.dirty || validFrom.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"validFrom.errors?.daterange  && (validFrom.dirty || validFrom.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputvalidFrom>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getvalidFromValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedvalidFrom\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedvalidFrom\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedvalidFrom\\\" (click)=\\\"manageCheckBox('validFrom', 'date')\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"validTo\\\" class=\\\"col-2 col-form-label\\\">Data Fine Validità<span>*</span>:</label>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <div class=\\\"input-group\\\" *ngIf=\\\"(checkedvalidTo.value && !readonlyForm); else inputvalidTo\\\">\\r\\n                                <input id=\\\"validTo\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"validTo.invalid && (form.submitted || (validTo.dirty || validTo.touched))\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"validTo\\\"  bdiDatepicker #datepickerDC=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\" />\\r\\n                                <div *ngIf=\\\"!readonlyForm\\\" class=\\\"input-group-append\\\" (click)=\\\"datepickerDC.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n                                <div  *ngIf=\\\"!!validTo.value && !readonlyForm\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('validTo')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <span class=\\\"input-group-text\\\">\\r\\n                                            <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                        </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"validTo.errors?.required && (form.submitted || (validTo.dirty || validTo.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo obbligatorio\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"validTo.errors?.dateformat && (form.submitted || (validTo.dirty || validTo.touched))\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"validTo.errors?.daterange  && (validTo.dirty || validTo.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Intervallo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #inputvalidTo>\\r\\n                            <input class=\\\"form-control\\\" [value]=\\\"getvalidToValue()\\\" [readOnly]=\\\"true\\\"/>\\r\\n                        </ng-template>\\r\\n                        <div class=\\\"col-1\\\">\\r\\n                            <label for=\\\"checkedvalidTo\\\" class=\\\"col-form-label\\\">\\r\\n                                <input *ngIf=\\\"!readonlyForm\\\" id=\\\"checkedvalidTo\\\" type=\\\"checkbox\\\" formControlName=\\\"checkedvalidTo\\\"/>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button routerLink=\\\"{{backUrl}}\\\" [queryParams]=\\\"{back:true}\\\" class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\">Indietro</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"readonlyForm\\\">Salva</button>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-template #waiting>\\r\\n                <gepa-spinning-loader></gepa-spinning-loader>\\r\\n            </ng-template>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card card-accent-primary shadow\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong><i class=\\\"fa fa-users\\\"></i> Anagrafica Eccezioni Transcodifica Dettaglio </strong>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ng-container *ngIf=\\\"!(showSpinner$ | async); else waiting\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                    {{ messageError }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row mb-2\\\" *ngIf=\\\"userIsDet\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"goToInsertEccTranscodingRetail()\\\">Nuova Eccezione Transcodifica Dettaglio</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"ricercaForm\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"nsc\\\" class=\\\"col-2 col-form-label\\\">Nsc:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"nsc\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"nsc.invalid && (nsc.dirty || nsc.touched)\\\" formControlName=\\\"nsc\\\" maxlength=\\\"15\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"nsc.errors?.wildcard && (nsc.dirty || nsc.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"nsc.errors?.pattern && (nsc.dirty || nsc.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"countryCode\\\" class=\\\"col-2 col-form-label\\\">Country Code:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <select id=\\\"countryCode\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"countryCode.invalid && (countryCode.dirty || countryCode.touched)\\\" formControlName=\\\"countryCode\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">Tutti</option>\\r\\n                                <option *ngFor=\\\"let t of countryCodeList\\\" [value]=\\\"t.codice\\\">{{t.descrizione}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"bic\\\" class=\\\"col-2 col-form-label\\\">Bic:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"bic\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"bic.invalid && (bic.dirty || bic.touched)\\\" formControlName=\\\"bic\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"bic.errors?.wildcard && (bic.dirty || bic.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"bic.errors?.syntax && (bic.dirty || bic.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo sintatticamente non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"descrizione\\\" class=\\\"col-2 col-form-label\\\">Descrizione:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"descrizione\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"descrizione.invalid && (descrizione.dirty || descrizione.touched)\\\" formControlName=\\\"descrizione\\\" maxlength=\\\"4000\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"descrizione.errors?.wildcard && (descrizione.dirty || descrizione.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <!--Data Inizio Validita-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Inizio Validità:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataInizioValiditaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataInizioValiditaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValiditaDa.invalid && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValiditaDa\\\"  bdiDatepicker #datepickerDIVda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIVda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataInizioValiditaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValiditaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaDa.errors?.dateformat && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaDa.errors?.daterange && (dataInizioValiditaDa.dirty || dataInizioValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataInizioValiditaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataInizioValiditaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataInizioValiditaA.invalid && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataInizioValiditaA\\\"  bdiDatepicker #datepickerDIVa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDIVa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataInizioValiditaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataInizioValiditaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaA.errors?.dateformat && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataInizioValiditaA.errors?.daterange && (dataInizioValiditaA.dirty || dataInizioValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--Data Fine Validità:-->\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"row\\\"><label class=\\\"col-12 col-form-label\\\">Data Fine Validità:</label></div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataFineValiditaDa\\\" class=\\\"col-4 col-form-label text-right\\\">Da:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataFineValiditaDa\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValiditaDa.invalid && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValiditaDa\\\"  bdiDatepicker #datepickerDFVda=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDFVda.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataFineValiditaDa.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValiditaDa')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataFineValiditaDa.errors?.dateformat && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataFineValiditaDa.errors?.daterange && (dataFineValiditaDa.dirty || dataFineValiditaDa.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <label for=\\\"dataFineValiditaA\\\" class=\\\"col-4 col-form-label text-right\\\">A:</label>\\r\\n                                <div class=\\\"col-8\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input id=\\\"dataFineValiditaA\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"dataFineValiditaA.invalid && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"dataFineValiditaA\\\"  bdiDatepicker #datepickerDFVa=\\\"bdiDatepicker\\\" maxlength=\\\"10\\\" style=\\\"background-color: #ffffff !important\\\"/>\\r\\n                                        <div class=\\\"input-group-append\\\" (click)=\\\"datepickerDFVa.toggle()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"!!dataFineValiditaA.value\\\"  class=\\\"input-group-append\\\" (click)=\\\"reset('dataFineValiditaA')\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"dataFineValiditaA.errors?.dateformat && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Campo non valido\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"dataFineValiditaA.errors?.daterange && (dataFineValiditaA.dirty || dataFineValiditaA.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                            Intervallo non valido\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"utenteInserimento\\\" class=\\\"col-2 col-form-label\\\">Utente Inserimento:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteInserimento\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteInserimento.invalid && (utenteInserimento.dirty || utenteInserimento.touched)\\\" formControlName=\\\"utenteInserimento\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.wildcard && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteInserimento.errors?.pattern && (utenteInserimento.dirty || utenteInserimento.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <label for=\\\"utenteApprovatore\\\" class=\\\"col-2 col-form-label\\\">Utente Approvatore:</label>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input id=\\\"utenteApprovatore\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"utenteApprovatore.invalid && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" formControlName=\\\"utenteApprovatore\\\" maxlength=\\\"4000\\\" [pattern]=\\\"'^[a-zA-Z0-9%]+$'\\\"/>\\r\\n                                <ng-container *ngTemplateOutlet=\\\"wildcardTooltip\\\"></ng-container>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.wildcard && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido per la ricerca con wildcard\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"utenteApprovatore.errors?.pattern && (utenteApprovatore.dirty || utenteApprovatore.touched)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Campo non valido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div class=\\\"col-2 mx-auto\\\">\\r\\n                            <button class=\\\"btn btn-block btn-primary\\\" type=\\\"button\\\" (click)=\\\"submit(target, true)\\\">Cerca</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </form>\\r\\n\\r\\n                <div #target>\\r\\n                    <app-generic-table *ngIf=\\\"showTable\\\" [model]=\\\"eccTranscodingRetailModel\\\" (action)=\\\"onActionEvent($event)\\\" (colToDisplay)=\\\"onColToDisplayEvent($event, this.eccTranscodingRetailService.searchModel)\\\" (paginationChanged)=\\\"onPaginationEvent($event, this.eccTranscodingRetailService.searchModel)\\\" (sortChanged)=\\\"onSortEvent($event, this.eccTranscodingRetailService.searchModel)\\\" (filterChanged)=\\\"onFilterEvent($event, this.eccTranscodingRetailService.searchModel)\\\"></app-generic-table>\\r\\n                </div>\\r\\n\\r\\n            </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #waiting>\\r\\n            <gepa-spinning-loader></gepa-spinning-loader>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #wildcardTooltip>\\r\\n        <div class=\\\"input-group-append\\\" bdiTooltip=\\\"{{util.getWildcardTooltip()}}\\\" placement=\\\"right\\\">\\r\\n        <span class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fas fa-info-circle\\\"></i>\\r\\n        </span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport {SearchModel} from \"../models/search\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ConfigurationService} from \"./configuration.service\";\r\nimport {RSQLUtils} from \"../utilities/rsqlUtil\";\r\nimport {FormatterUtils} from \"../utilities/formatterUtils\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {EccTranscondingIngrosso, GetEccTranscondingIngrossoResponse} from \"../models/ecc-transcoding-ingrosso\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {Party} from \"../models/party\";\r\nimport {TipoConto} from \"../models/conto\";\r\nimport {TipoContoEccTranscodingIngrossoEnum} from \"../models/enum\";\r\nimport {EccTranscondingRetail, GetEccTranscondingRetailResponse} from \"../models/ecc-transcoding-retail\";\r\nimport {CommonService} from \"./common.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EccTranscodingRetailService extends CommonService {\r\n\r\n  public searchModel: SearchModel;\r\n\r\n  constructor(protected http: HttpClient, protected configurationService: ConfigurationService) {\r\n    super(http, configurationService );\r\n  }\r\n\r\n  getEccezioniTranscodingRetail(searchString: string): Observable<GetEccTranscondingRetailResponse> {\r\n    return this.http.get<GetEccTranscondingRetailResponse>(`${this.apiEndpointU2A}/eccTranscodingRetail?${searchString}`).pipe(\r\n        tap(res => console.log(res))\r\n    );\r\n  }\r\n\r\n  getEccezioneTranscodingRetail(idEcc: string): Observable<EccTranscondingRetail> {\r\n    return this.http.get<EccTranscondingRetail>(`${this.apiEndpointU2A}/eccTranscodingRetail/${idEcc}`).pipe(\r\n        tap(res => console.log(res)),\r\n        catchError((error) => {\r\n              console.log('Error - getEccezioneTranscodingRetail', error);\r\n              return of(null);\r\n            }\r\n        )\r\n    );\r\n  }\r\n}\r\n","import {FormGroup, ValidationErrors, ValidatorFn} from '@angular/forms';\r\nimport {CountryCodeForNscRuleValidationEnum} from \"../models/enum\";\r\n\r\nexport function eccTranscodingRetailNscValidator(): ValidatorFn {\r\n\r\n    return (form: FormGroup): ValidationErrors | null => {\r\n\r\n        const nsc = form.controls['nsc'];\r\n        const countryCode = form.controls['countryCode'];\r\n\r\n        if (!!nsc && !!nsc.value) {\r\n            let pattern = '^[0-9%]{10}$';\r\n            if (!!countryCode && !!countryCode.value && Object.values(CountryCodeForNscRuleValidationEnum).includes(countryCode.value) ) {\r\n                pattern = '^[0-9%]{5}([0-9%]{5}|[*])$';\r\n            }\r\n            if (!new RegExp(pattern).test(nsc.value)) {\r\n                nsc.setErrors({pattern: true});\r\n            }\r\n        }\r\n        return;\r\n    };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TipoParty} from '../../../models/party';\r\nimport {FilialeRiferimento} from '../../../models/filiale';\r\nimport {tap} from 'rxjs/operators';\r\nimport {PartyService} from '../../../services/party.service';\r\nimport {FilialeService} from '../../../services/filiale.service';\r\nimport {SecurityService, UserService} from '../../../services';\r\nimport {FormatterUtils} from '../../../utilities/formatterUtils';\r\nimport {RoutingService} from '../../../services/routing.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {AbstractAnagraficheComponent} from '../abstract-anagrafiche.component';\r\nimport {EccTranscodingIngrossoService} from \"../../../services/ecc-transcoding-ingrosso.service\";\r\nimport {TipoConto} from \"../../../models/conto\";\r\nimport {ContoService} from \"../../../services/conto.service\";\r\nimport {TipoFlagEnum} from \"../../../models/enum\";\r\nimport {TipoVerso} from \"../../../models/ecc-transcoding-ingrosso\";\r\nimport {EccTranscodingRetailService} from \"../../../services/ecc-transcoding-retail.service\";\r\nimport {CountryCode} from \"../../../models/ecc-transcoding-retail\";\r\n\r\n\r\nexport abstract class AbstractEccTranscodingRetailComponent extends  AbstractAnagraficheComponent implements OnInit {\r\n\r\n    isActive: boolean = false;\r\n    countryCodeList: CountryCode [];\r\n\r\n    constructor( protected eccTranscodingRetailService: EccTranscodingRetailService,\r\n                 protected securityService: SecurityService,\r\n                 protected userService: UserService,\r\n                 protected formatterUtils: FormatterUtils,\r\n                 protected routingService: RoutingService,\r\n                 protected route: ActivatedRoute) {\r\n\r\n        super(securityService, userService, formatterUtils, routingService, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.buildCombo();\r\n    }\r\n\r\n    protected buildCombo() {\r\n        this.eccTranscodingRetailService.getCountryCodes().pipe(\r\n            tap( res => this.countryCodeList = res)\r\n        ).subscribe();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctcmV0YWlsL2RldHRhZ2xpby1lY2MtdHJhbnNjb2RpbmctcmV0YWlsL2RldHRhZ2xpby1lY2MtdHJhbnNjb2RpbmctcmV0YWlsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AbstractEccTranscodingIngrossoComponent} from \"../../ecc-transcoding-ingrosso/abstract-ecc-transcoding-ingrosso.component\";\r\nimport {InfoPanelModel} from \"../../../../models/info-panel-model\";\r\nimport {EccTranscondingIngrosso} from \"../../../../models/ecc-transcoding-ingrosso\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {EccTranscodingIngrossoService} from \"../../../../services/ecc-transcoding-ingrosso.service\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\nimport {AbstractEccTranscodingRetailComponent} from \"../abstract-ecc-transcoding-retail.component\";\r\nimport {EccTranscondingRetail} from \"../../../../models/ecc-transcoding-retail\";\r\nimport {EccTranscodingRetailService} from \"../../../../services/ecc-transcoding-retail.service\";\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-ecc-transcoding-retail',\r\n  templateUrl: './dettaglio-ecc-transcoding-retail.component.html',\r\n  styleUrls: ['./dettaglio-ecc-transcoding-retail.component.scss']\r\n})\r\nexport class DettaglioEccTranscodingRetailComponent extends  AbstractEccTranscodingRetailComponent implements OnInit {\r\n\r\n  infoPanelModel: InfoPanelModel;\r\n  eccTransRet: EccTranscondingRetail;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      protected eccTranscodingRetailService: EccTranscodingRetailService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      protected formatterUtils: FormatterUtils,\r\n      protected route: ActivatedRoute,\r\n      protected routingService: RoutingService\r\n  ) {\r\n    super(eccTranscodingRetailService, securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkUserDet();\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const detailEccSessionObj = this.getSession(this.routingService.ECC_TRANS_RET_DETAIL);\r\n      if (!!detailEccSessionObj) {\r\n        this.loadSections(detailEccSessionObj.idEccTransRet);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(detailEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadSections (idEccTransRet: string) {\r\n    this.showSpinner();\r\n\r\n    this.eccTranscodingRetailService.getEccezioneTranscodingRetail(idEccTransRet).pipe (\r\n        tap( res => {\r\n          this.eccTransRet = res;\r\n          this.buildEccTransRetSection();\r\n\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - loadSections', error);\r\n          this.setError();\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildEccTransRetSection() {\r\n    const data = [\r\n      [this.buildInfoPanelElement('Nsc', 'string',  this.eccTransRet, 'nsc'), this.buildInfoPanelElement('Country Code', 'string',  this.eccTransRet, 'countryCode.descrizione')],\r\n      [this.buildInfoPanelElement('Bic', 'string',  this.eccTransRet, 'bic'), this.buildInfoPanelElement('Descrizione', 'string',  this.eccTransRet, 'descrizione')],\r\n      [this.buildInfoPanelElement('Data Inizio Validità Record', 'date', this.eccTransRet, 'validFrom'), this.buildInfoPanelElement('Data Fine Validità Record', 'date', this.eccTransRet, 'validTo')],\r\n      [this.buildInfoPanelElement('Utente Inserimento/Modifica', 'string', this.eccTransRet, 'utenteRichiesta'), this.buildInfoPanelElement('Utente Approvatore', 'string', this.eccTransRet, 'utenteValidazione')]\r\n    ];\r\n\r\n    this.infoPanelModel = <InfoPanelModel> {\r\n      columnNumber: 2,\r\n      data: data\r\n    };\r\n\r\n  }\r\n}\r\n","import {ModificaEccTranscodingRetailComponent} from \"./modifica-ecc-transcoding-retail/modifica-ecc-transcoding-retail.component\";\r\nimport {RicercaEccTranscodingRetailComponent} from \"./ricerca-ecc-transcoding-retail/ricerca-ecc-transcoding-retail.component\";\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {DettaglioEccTranscodingRetailComponent} from \"./dettaglio-ecc-transcoding-retail/dettaglio-ecc-transcoding-retail.component\";\r\nimport {SecurityService} from \"../../../services\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {InserimentoEccTranscodingRetailComponent} from \"./inserimento-ecc-transcoding-retail/inserimento-ecc-transcoding-retail.component\";\r\nimport {EUserRole} from \"../../../models\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Anagrafiche Eccezioni Transcodifica Dettaglio',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: RicercaEccTranscodingRetailComponent,\r\n        data: {\r\n          title: '',\r\n          roles: [EUserRole.ANAGRAFICHE_DET, EUserRole.ANAGRAFICHE_VISUALIZZATORE]\r\n        },\r\n        canActivate: [SecurityService]\r\n      },\r\n      {\r\n        path: 'dettaglio',\r\n        component: DettaglioEccTranscodingRetailComponent,\r\n        data: {\r\n          title: 'Dettaglio Eccezione Transcodifica Dettaglio',\r\n          roles: [EUserRole.ANAGRAFICHE_DET]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'inserimento',\r\n        component: InserimentoEccTranscodingRetailComponent,\r\n        data: {\r\n          title: 'Nuova Eccezione Transcodifica Dettaglio',\r\n          roles: [EUserRole.ANAGRAFICHE_DET]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n      {\r\n        path: 'modifica',\r\n        component: ModificaEccTranscodingRetailComponent,\r\n        data: {\r\n          title: 'Modifica Eccezione Transcodifica Dettaglio',\r\n          roles: [EUserRole.ANAGRAFICHE_DET]\r\n        },\r\n        canActivate: [SecurityService],\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EccTranscodingRetailRoutingModule { }\r\n","import {GenericActionRenderComponent} from \"../generic-action-render/generic-action-render.component\";\r\nimport {EccTranscodingRetailRoutingModule} from \"./ecc-transcoding-retail-routing.module\";\r\nimport {GenericTableModule} from \"../generic-table/generic-table.module\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {GepaGuiCommonModule} from \"../../../common/gepagui-common.module\";\r\nimport {BDIAlertModule, BDIDatagridModule, BDIDatepickerModule, BDITooltipModule} from \"scam-bdi-uikit\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {RicercaEccTranscodingRetailComponent} from \"./ricerca-ecc-transcoding-retail/ricerca-ecc-transcoding-retail.component\";\r\nimport {ModificaEccTranscodingRetailComponent} from \"./modifica-ecc-transcoding-retail/modifica-ecc-transcoding-retail.component\";\r\nimport {DettaglioEccTranscodingRetailComponent} from \"./dettaglio-ecc-transcoding-retail/dettaglio-ecc-transcoding-retail.component\";\r\nimport {InfoPanelModule} from \"../info-panel/info-panel.module\";\r\nimport {GenericActionRenderModule} from \"../generic-action-render/generic-action-render.module\";\r\nimport {InserimentoEccTranscodingRetailComponent} from \"./inserimento-ecc-transcoding-retail/inserimento-ecc-transcoding-retail.component\";\r\nimport {DirectiveModule} from \"../../../directive/directive.module\";\r\n\r\n@NgModule({\r\n  declarations: [RicercaEccTranscodingRetailComponent, DettaglioEccTranscodingRetailComponent, ModificaEccTranscodingRetailComponent, InserimentoEccTranscodingRetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GepaGuiCommonModule,\r\n    EccTranscodingRetailRoutingModule,\r\n    ReactiveFormsModule,\r\n    BDIAlertModule.forRoot(),\r\n    BDIDatepickerModule,\r\n    FormsModule,\r\n    GenericTableModule,\r\n    InfoPanelModule,\r\n    BDIDatagridModule.withComponents([\r\n      GenericActionRenderComponent,\r\n    ]),\r\n    BDITooltipModule.forRoot(),\r\n    GenericActionRenderModule,\r\n    DirectiveModule\r\n  ],\r\n  entryComponents: [GenericActionRenderComponent],\r\n})\r\nexport class EccTranscodingRetailModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctcmV0YWlsL2luc2VyaW1lbnRvLWVjYy10cmFuc2NvZGluZy1yZXRhaWwvaW5zZXJpbWVudG8tZWNjLXRyYW5zY29kaW5nLXJldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {eccTranscodingIngrossoVersoValidator} from \"../../../../validators/ecc-trans-ingr-cab-validator\";\r\nimport {TipoOperazioneEnum} from \"../../../../models/enum\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\nimport {AbstractEccTranscodingRetailComponent} from \"../abstract-ecc-transcoding-retail.component\";\r\nimport {EccTranscodingRetailService} from \"../../../../services/ecc-transcoding-retail.service\";\r\nimport {TaskEccTranscodingRetail} from \"../../../../models/task\";\r\nimport {eccTranscodingRetailNscValidator} from \"../../../../validators/ecc-trans-ret-nsc-validator\";\r\n\r\n@Component({\r\n  selector: 'app-inserimento-ecc-transcoding-retail',\r\n  templateUrl: './inserimento-ecc-transcoding-retail.component.html',\r\n  styleUrls: ['./inserimento-ecc-transcoding-retail.component.scss']\r\n})\r\nexport class InserimentoEccTranscodingRetailComponent extends AbstractEccTranscodingRetailComponent implements OnInit {\r\n\r\n  inserimentoForm: FormGroup;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected eccTranscodingRetailService: EccTranscodingRetailService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private taskService: TaskService,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute\r\n  ) {\r\n    super(eccTranscodingRetailService, securityService, userService, formatterUtils, routingService, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      const insertEccSessionObj = this.getSession(this.routingService.ECC_TRANS_RET_INSERT);\r\n      if (!!insertEccSessionObj) {\r\n        this.backUrl = this.routingService.getRouteByKey(insertEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n    super.ngOnInit();\r\n    this.buildForm();\r\n  }\r\n\r\n  private buildForm() {\r\n    this.inserimentoForm = this.formBuilder.group({\r\n      nsc:  new FormControl(null,   [Validators.required]),\r\n      countryCode: new FormControl(null,   [Validators.required]),\r\n      bic: new FormControl(null,    [Validators.required, this.bicValidator.bind(this)]),\r\n      descrizione: new FormControl(null,   []),\r\n      dataInizioValidita: new FormControl(null, [Validators.required]),\r\n      dataFineValidita: new FormControl(null, [])\r\n    }, {validator: Validators.compose(          [\r\n            dateValidator( [{field1: 'dataInizioValidita', required1: true,  field2: 'dataFineValidita', required2: true}]),\r\n            eccTranscodingRetailNscValidator()\r\n          ]\r\n      )});\r\n\r\n    this.countryCode.valueChanges.subscribe(\r\n        () => {\r\n          this.manageCountryCode();\r\n        }\r\n    );\r\n  }\r\n\r\n  private manageCountryCode() {\r\n    this.nsc.updateValueAndValidity();\r\n  }\r\n\r\n  get nsc() { return this.inserimentoForm.get('nsc'); }\r\n  get countryCode() { return this.inserimentoForm.get('countryCode'); }\r\n  get bic() { return this.inserimentoForm.get('bic'); }\r\n  get descrizione() { return this.inserimentoForm.get('descrizione'); }\r\n  get dataInizioValidita() { return this.inserimentoForm.get('dataInizioValidita'); }\r\n  get dataFineValidita() { return this.inserimentoForm.get('dataFineValidita'); }\r\n\r\n  reset(field) {\r\n    this.inserimentoForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  saveEccTranscodingRetail() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.inserimentoForm.valid) {\r\n      this.showSpinner();\r\n      const taskEccTranscodingRetail = this.buildTaskEccTranscodingRetail();\r\n      this.taskService.saveTaskEccTranscodingRetail(taskEccTranscodingRetail).pipe(\r\n          tap( res => {\r\n            const d = new Date(res.validTo);\r\n            this.inserimentoForm.get('dataFineValidita').setValue({year: d.getFullYear(), month: d.getUTCMonth() + 1, day: d.getUTCDate()});\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - saveEccTranscodingRetail', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private buildTaskEccTranscodingRetail (): TaskEccTranscodingRetail {\r\n\r\n    return <TaskEccTranscodingRetail> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.INS\r\n      },\r\n\r\n      nsc: this.nsc.value,\r\n      countryCode: {\r\n        codice: this.countryCode.value\r\n      },\r\n      bic: this.bic.value,\r\n      descrizione: this.descrizione.value,\r\n      validFrom: this.formatterUtils.dateToString(this.dataInizioValidita.value),\r\n      validTo: this.formatterUtils.dateToString((!!this.dataFineValidita.value ? this.dataFineValidita.value : {year: 9999, month: 12, day: 31}))\r\n    };\r\n  }\r\n\r\n  resetForm() {\r\n    this.readonlyForm = false;\r\n    this.isResultOk = false;\r\n    this.buildForm();\r\n  }\r\n\r\n  getCountryCodeValue(): string {\r\n    return this.countryCodeList.find( t => t.codice == this.countryCode.value).descrizione;\r\n  }\r\n\r\n  getDataInizioValiditaValue() {\r\n    return this.formatterUtils.dateToString(this.dataInizioValidita.value);\r\n  }\r\n\r\n  getDataFineValiditaValue() {\r\n    return this.formatterUtils.dateToString(this.dataFineValidita.value);\r\n  }\r\n\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctcmV0YWlsL21vZGlmaWNhLWVjYy10cmFuc2NvZGluZy1yZXRhaWwvbW9kaWZpY2EtZWNjLXRyYW5zY29kaW5nLXJldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { get} from 'lodash';\r\nimport {EccTranscodingRetailService} from \"../../../../services/ecc-transcoding-retail.service\";\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {TaskEccTranscodingIngrosso, TaskEccTranscodingRetail} from \"../../../../models/task\";\r\nimport {TipoOperazioneEnum, TipoVersoEnum} from \"../../../../models/enum\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {AbstractEccTranscodingRetailComponent} from \"../abstract-ecc-transcoding-retail.component\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {of} from \"rxjs\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {TaskService} from \"../../../../services/task.service\";\r\nimport {eccTranscodingRetailNscValidator} from \"../../../../validators/ecc-trans-ret-nsc-validator\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {EccTranscondingRetail} from \"../../../../models/ecc-transcoding-retail\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {IDatepickerModel} from \"scam-bdi-uikit/lib/daterangepicker/interfaces\";\r\nimport {Utils} from \"../../../../utilities/util\";\r\n\r\n@Component({\r\n  selector: 'app-modifica-ecc-transcoding-retail',\r\n  templateUrl: './modifica-ecc-transcoding-retail.component.html',\r\n  styleUrls: ['./modifica-ecc-transcoding-retail.component.scss']\r\n})\r\nexport class ModificaEccTranscodingRetailComponent extends AbstractEccTranscodingRetailComponent implements OnInit {\r\n\r\n  modificaForm: FormGroup;\r\n  eccTransRet: EccTranscondingRetail;\r\n\r\n  constructor(\r\n      router: Router,\r\n      protected eccTranscodingRetailService: EccTranscodingRetailService,\r\n      protected securityService: SecurityService,\r\n      protected userService: UserService,\r\n      private filterUtils: FilterUtils,\r\n      protected formatterUtils: FormatterUtils,\r\n      private formBuilder: FormBuilder,\r\n      private taskService: TaskService,\r\n      protected routingService: RoutingService,\r\n      protected route: ActivatedRoute,\r\n      private utils: Utils,\r\n  ) {\r\n    super(eccTranscodingRetailService, securityService, userService, formatterUtils, routingService, route);\r\n    this.utils = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.route.queryParams.subscribe(params => {\r\n      const modifyEccSessionObj = this.getSession(this.routingService.ECC_TRANS_RET_MODIFY);\r\n      if (!!modifyEccSessionObj) {\r\n        this.load(modifyEccSessionObj.idEccTransRet);\r\n        this.backUrl = this.backUrl = this.routingService.getRouteByKey(modifyEccSessionObj.backUrl);\r\n      } else {\r\n        this.setError();\r\n      }\r\n    });\r\n  }\r\n\r\n  private load (idEcc: string) {\r\n    this.showSpinner();\r\n    this.eccTranscodingRetailService.getEccezioneTranscodingRetail(idEcc).pipe(\r\n        tap( res => {\r\n          this.eccTransRet = res;\r\n          this.buildForm();\r\n          this.hideSpinner();\r\n        }),\r\n        catchError((error) => {\r\n          console.log ('Error - load', error);\r\n          this.setError(error);\r\n          this.hideSpinner();\r\n          return of(null);\r\n        })\r\n    ).subscribe();\r\n  }\r\n\r\n  private buildForm() {\r\n    const validFrom = new Date(this.eccTransRet.validFrom);\r\n    const validTo = new Date(this.eccTransRet.validTo);\r\n    this.modificaForm = this.formBuilder.group({\r\n      nsc:  new FormControl(this.eccTransRet.nsc,   [Validators.required]),\r\n      countryCode: new FormControl(this.eccTransRet.countryCode.codice,   [Validators.required]),\r\n      bic: new FormControl(this.eccTransRet.bic,    [Validators.required, this.bicValidator.bind(this)]),\r\n      descrizione: new FormControl(this.eccTransRet.descrizione,   []),\r\n      validFrom: new FormControl({year: validFrom.getFullYear(), month: (validFrom.getUTCMonth() + 1), day: validFrom.getUTCDate()}, [Validators.required]),\r\n      validTo: new FormControl({year: validTo.getFullYear(), month: (validTo.getUTCMonth() + 1), day: validTo.getUTCDate()}, []),\r\n      checkednsc:  new FormControl(false,   []),\r\n      checkedcountryCode:  new FormControl(false,   []),\r\n      checkedbic:  new FormControl(false,   []),\r\n      checkeddescrizione:  new FormControl(false,   []),\r\n      checkedvalidFrom:  new FormControl(false,   []),\r\n      checkedvalidTo:  new FormControl(false,   [])\r\n    }, {validator: Validators.compose(          [\r\n            dateValidator( [{field1: 'validFrom', required1: true,  field2: 'validTo', required2: true}])\r\n          ]\r\n      )});\r\n  }\r\n\r\n  get nsc() { return this.modificaForm.get('nsc'); }\r\n  get countryCode() { return this.modificaForm.get('countryCode'); }\r\n  get bic() { return this.modificaForm.get('bic'); }\r\n  get descrizione() { return this.modificaForm.get('descrizione'); }\r\n  get validFrom() { return this.modificaForm.get('validFrom'); }\r\n  get validTo() { return this.modificaForm.get('validTo'); }\r\n  get checkednsc() { return this.modificaForm.get('checkednsc'); }\r\n  get checkedcountryCode() { return this.modificaForm.get('checkedcountryCode'); }\r\n  get checkedbic() { return this.modificaForm.get('checkedbic'); }\r\n  get checkeddescrizione() { return this.modificaForm.get('checkeddescrizione'); }\r\n  get checkedvalidFrom() { return this.modificaForm.get('checkedvalidFrom'); }\r\n  get checkedvalidTo() { return this.modificaForm.get('checkedvalidTo'); }\r\n\r\n  reset(field) {\r\n    this.modificaForm.get(field).setValue(undefined);\r\n  }\r\n\r\n  manageCheckBox(field: string, type?: string) {\r\n    if (this.modificaForm.get('checked'.concat(field)).value) {\r\n      let val = get(this.eccTransRet, field);\r\n      if (!!type && type == 'date') {\r\n        val = this.formatterUtils.getValueForDateinDatePickerFormat(val);\r\n      }\r\n      this.modificaForm.get(field).setValue(val);\r\n    } else {\r\n      //this.modificaForm.get(field).setValue(null);\r\n    }\r\n  }\r\n\r\n  public modifyEccTranscodingRetail() {\r\n    this.resetError();\r\n    this.isResultOk = false;\r\n\r\n    if (this.modificaForm.valid) {\r\n      this.showSpinner();\r\n      const taskEccTranscodingReatilReq = this.buildTaskEccTranscodingRetail();\r\n      this.taskService.saveTaskEccTranscodingRetail(taskEccTranscodingReatilReq).pipe(\r\n          tap( res => {\r\n            if (!!res) {\r\n              this.eccTransRet.validFrom = res.validFrom;\r\n              this.eccTransRet.countryCode = res.countryCode;\r\n            }\r\n\r\n            this.isResultOk = true;\r\n            this.hideSpinner();\r\n            this.readonlyForm = true;\r\n          }),\r\n          catchError((error) => {\r\n            console.log ('Error - modifyEccTranscodingRetail', error);\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  private  buildTaskEccTranscodingRetail (): TaskEccTranscodingRetail {\r\n    return <TaskEccTranscodingRetail> {\r\n      operazione: {\r\n        codice: TipoOperazioneEnum.UPD\r\n      },\r\n      tipoTask: null,\r\n      stato: null,\r\n      tsInserimento: null,\r\n      userReq: null,\r\n      tsValidate: null,\r\n      userValidate: null,\r\n      noteRifiuto: null,\r\n\r\n      nsc: this.nsc.value,\r\n      countryCode: {\r\n        codice: this.countryCode.value,\r\n      },\r\n      bic: this.bic.value,\r\n      descrizione: this.descrizione.value,\r\n      validFrom: this.formatterUtils.dateToString(this.validFrom.value),\r\n      validTo: this.formatterUtils.dateToString(this.validTo.value),\r\n      tsModifica: null,\r\n      utenteRichiesta: null,\r\n      utenteValidazione: null,\r\n\r\n      nscToEdit: this.checkednsc.value,\r\n      countryCodeToEdit: this.checkedcountryCode.value,\r\n      bicToEdit: this.checkedbic.value,\r\n      descrizioneToEdit: this.checkeddescrizione.value,\r\n      validFromToEdit: this.checkedvalidFrom.value,\r\n      validToToEdit: this.checkedvalidTo.value,\r\n      tsModificaToEdit: false,\r\n      utenteRichiestaToEdit: true,\r\n      utenteValidazioneToEdit: false,\r\n\r\n      idEccOrig: this.eccTransRet.id,\r\n      nscOrig: null,\r\n      countryCodeOrig: null,\r\n      bicOrig: null,\r\n      descrizioneOrig: null,\r\n      validFromOrig: null,\r\n      validToOrig: null,\r\n      tsModificaOrig: null,\r\n      utenteRichiestaOrig: null,\r\n      utenteValidazioneOrig: null\r\n    };\r\n  }\r\n\r\n  getCountryCodeValue(): string {\r\n    return this.countryCodeList.find( t => t.codice == this.countryCode.value).descrizione;\r\n  }\r\n\r\n  getvalidFromValue() {\r\n    return this.formatterUtils.dateToString(this.validFrom.value);\r\n  }\r\n\r\n  getvalidToValue() {\r\n    return this.formatterUtils.dateToString(this.validTo.value);\r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi92aWV3cy9hbmFncmFmaWNoZS9lY2MtdHJhbnNjb2RpbmctcmV0YWlsL3JpY2VyY2EtZWNjLXRyYW5zY29kaW5nLXJldGFpbC9yaWNlcmNhLWVjYy10cmFuc2NvZGluZy1yZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {GenericTableModel} from \"../../../../models/generic-table-model\";\r\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\r\nimport {Utils} from \"../../../../utilities/util\";\r\nimport {SecurityService, UserService} from \"../../../../services\";\r\nimport {FilterUtils} from \"../../../../utilities/filterUtils\";\r\nimport {FormatterUtils} from \"../../../../utilities/formatterUtils\";\r\nimport {RSQLUtils} from \"../../../../utilities/rsqlUtil\";\r\nimport {RoutingService} from \"../../../../services/routing.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {SearchModel} from \"../../../../models/search\";\r\nimport {dateValidator} from \"../../../../validators/date-validator\";\r\nimport {GenericActionRenderComponent} from \"../../generic-action-render/generic-action-render.component\";\r\nimport {ActionRenderModel, ButtonModel} from \"../../../../models/action-render-model\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {of} from \"rxjs\";\r\nimport {AbstractEccTranscodingRetailComponent} from \"../abstract-ecc-transcoding-retail.component\";\r\nimport {EccTranscodingRetailService} from \"../../../../services/ecc-transcoding-retail.service\";\r\nimport {get} from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-ricerca-ecc-transcoding-retail',\r\n  templateUrl: './ricerca-ecc-transcoding-retail.component.html',\r\n  styleUrls: ['./ricerca-ecc-transcoding-retail.component.scss']\r\n})\r\nexport class RicercaEccTranscodingRetailComponent extends AbstractEccTranscodingRetailComponent implements OnInit {\r\n\r\n  eccTranscodingRetailModel: GenericTableModel;\r\n  showTable = false;\r\n  ricercaForm: FormGroup;\r\n  util: Utils ;\r\n\r\n  constructor( protected eccTranscodingRetailService: EccTranscodingRetailService,\r\n               protected securityService: SecurityService,\r\n               protected userService: UserService,\r\n               protected filterUtils: FilterUtils,\r\n               protected formatterUtils: FormatterUtils,\r\n               protected formBuilder: FormBuilder,\r\n               protected rSQLUtils: RSQLUtils,\r\n               protected utils: Utils,\r\n               protected routingService: RoutingService,\r\n               protected route: ActivatedRoute,\r\n               protected router: Router) {\r\n\r\n    super(eccTranscodingRetailService, securityService, userService, formatterUtils, routingService, route);\r\n    this.util = utils;\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.buildForm();\r\n    this.buildModel();\r\n    this.manageNavigation();\r\n  }\r\n\r\n  protected manageNavigation() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (!!params && !!get(params, this.BACK) && !!this.getSearcModel()) {\r\n        this.ricercaForm.setValue(this.getSearcModel().form);\r\n        this.submit(null, false);\r\n      } else {\r\n        this.setSearcModel(this.initSearchModel());\r\n      }\r\n    });\r\n  }\r\n\r\n  protected getSearcModel() {\r\n    return this.eccTranscodingRetailService.searchModel;\r\n  }\r\n\r\n  protected setSearcModel(searchModel: SearchModel) {\r\n    return this.eccTranscodingRetailService.searchModel = searchModel;\r\n  }\r\n\r\n  protected buildForm() {\r\n    this.ricercaForm = this.formBuilder.group({\r\n      nsc: new FormControl(null, [this.wildcard2Validator.bind(this)]   ),\r\n      countryCode: new FormControl(null, []   ),\r\n      bic: new FormControl(null, [this.wildcard2Validator.bind(this), this.bicValidator.bind(this)] ),\r\n      descrizione: new FormControl(null, [this.wildcard2Validator.bind(this)] ),\r\n      dataInizioValiditaDa: new FormControl(null, []   ),\r\n      dataInizioValiditaA: new FormControl(null, []   ),\r\n      dataFineValiditaDa: new FormControl(null, []   ),\r\n      dataFineValiditaA: new FormControl(null, []   ),\r\n      utenteInserimento: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n      utenteApprovatore: new FormControl(null,   [this.wildcard2Validator.bind(this)]),\r\n    }, { validator: dateValidator( [\r\n        {field1: 'dataInizioValiditaDa', field2: 'dataInizioValiditaA'},\r\n        {field1: 'dataFineValiditaDa', field2: 'dataFineValiditaA'}\r\n      ]) });\r\n  }\r\n\r\n  get nsc() { return this.ricercaForm.get('nsc'); }\r\n  get countryCode() { return this.ricercaForm.get('countryCode'); }\r\n  get bic() { return this.ricercaForm.get('bic'); }\r\n  get descrizione() { return this.ricercaForm.get('descrizione'); }\r\n  get dataInizioValiditaDa() { return this.ricercaForm.get('dataInizioValiditaDa'); }\r\n  get dataInizioValiditaA() { return this.ricercaForm.get('dataInizioValiditaA'); }\r\n  get dataFineValiditaDa() { return this.ricercaForm.get('dataFineValiditaDa'); }\r\n  get dataFineValiditaA() { return this.ricercaForm.get('dataFineValiditaA'); }\r\n  get utenteInserimento() { return this.ricercaForm.get('utenteInserimento'); }\r\n  get utenteApprovatore() { return this.ricercaForm.get('utenteApprovatore'); }\r\n\r\n  reset( field) {\r\n    this.ricercaForm.get(field).setValue(null);\r\n  }\r\n\r\n  buildModel() {\r\n    this.eccTranscodingRetailModel = {\r\n      domLayout: 'autoHeight',\r\n      gridOptions: {\r\n        rowHeight: 30,\r\n        paginationPageSize: 10,\r\n        defaultColDef: {\r\n          sortable: true\r\n        },\r\n        context: {\r\n          componentParent: this\r\n        },\r\n        onGridReady: () => this.initializeGrid()\r\n      },\r\n      rowData: [],\r\n      pagination: true,\r\n      columnsFitAvailable: true,\r\n      columnDefs: this.buildColumnDef(),\r\n      enableCsvExport: true,\r\n      enablePdfExport: true,\r\n      enableColumnSelection: true\r\n    };\r\n  }\r\n\r\n  protected initializeGrid(): void {\r\n    this.eccTranscodingRetailModel.gridOptions.api.sizeColumnsToFit();\r\n    this.eccTranscodingRetailModel.gridOptions.onGridSizeChanged = evt =>  this.eccTranscodingRetailModel.gridOptions.api ?  this.eccTranscodingRetailModel.gridOptions.api.sizeColumnsToFit() : null;\r\n  }\r\n\r\n  protected buildColumnDef() {\r\n    let order = 0;\r\n    return  [\r\n      {colId: ('id_' + order++), headerName: 'NSC',                    field: 'nsc',              filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'COUNTRY CODE',           field: 'countryCode.descrizione',      filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'BIC',                    field: 'bic',              filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'DESCRIZIONE',            field: 'descrizione',      filter: true, sortable: true, resizable: true, exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'INIZIO VALIDITA\\'',      field: 'validFrom',        filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validFrom'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'FINE VALIDITA\\'',        field: 'validTo',          filter: true, sortable: true, resizable: true, valueGetter: (data)  => this.formatterUtils.formatDate(data.data, 'validTo'), exportOptions: {skipColumn: false}},\r\n      {colId: ('id_' + order++), headerName: 'AZIONI',                 field: '',                 resizable: true, cellRendererFramework: GenericActionRenderComponent, cellRendererParams: {modelFn: this.buildActionRenderModel.bind(this)}, sortable: false, exportOptions: {skipColumn: true}, pinned: 'right', minWidth: 150}\r\n    ];\r\n  }\r\n\r\n  public buildActionRenderModel(data): ActionRenderModel {\r\n    let detailButton =  null;\r\n\r\n    if (this.userIsDet || this.userIsVis) {\r\n      detailButton = <ButtonModel> {\r\n        label: 'Visualizza dettaglio Eccezione ',\r\n        routerLink: this.routingService.getRouteByKey(this.routingService.ECC_TRANS_RET_DETAIL),\r\n        params: {idEccTransRet: data.id, backUrl: this.routingService.ECC_TRANS_RET_SEARCH},\r\n        enabled: true,\r\n        sessionKey : this.routingService.ECC_TRANS_RET_DETAIL\r\n      };\r\n    }\r\n\r\n    let modifyButton =  null;\r\n    let deleteButton =  null;\r\n\r\n    //La condizione che il record debba essere attivo è statta modificata da Ernesto sul DRF: cfr mail del 20/09/21\r\n    if (this.userIsDet /*&& this.isEccTranscodingRetailActive(data)*/) {\r\n      modifyButton = <ButtonModel> {\r\n        label: 'Modifica Eccezione ',\r\n        routerLink: this.routingService.getRouteByKey(this.routingService.ECC_TRANS_RET_MODIFY),\r\n        params: {idEccTransRet: data.id, backUrl: this.routingService.ECC_TRANS_RET_SEARCH},\r\n        enabled: true,\r\n        sessionKey : this.routingService.ECC_TRANS_RET_MODIFY\r\n      };\r\n    }\r\n    return <ActionRenderModel> {\r\n      detailButton: detailButton,\r\n      modifyButton: modifyButton,\r\n      deleteButton: deleteButton\r\n    };\r\n  }\r\n\r\n  submit(targetEl: HTMLElement, resetPage: boolean) {\r\n\r\n    this.showTable = false;\r\n    this.resetError();\r\n    this.eccTranscodingRetailModel.rowData = [];\r\n    this.eccTranscodingRetailModel.enableMessageOnSizeResultLimit = false;\r\n\r\n    this.manageSearchModel( this.eccTranscodingRetailModel, this.getSearcModel(), resetPage);\r\n\r\n    if (!!this.ricercaForm.valid) {\r\n      this.showSpinner();\r\n\r\n      if (!this.getSearcModel()) {\r\n        this.setSearcModel(this.initSearchModel());\r\n      }\r\n      this.getSearcModel().form = this.ricercaForm.value;\r\n      const searchString = this.buildRsqlSearchString();\r\n\r\n      this.eccTranscodingRetailService.getEccezioniTranscodingRetail(searchString).pipe(\r\n\r\n          tap( res => {\r\n            this.eccTranscodingRetailModel.enableMessageEmptyResult = true;\r\n            if (!!res && res.content.length > 0 ) {\r\n              this.eccTranscodingRetailModel.enableMessageEmptyResult = false;\r\n              this.eccTranscodingRetailModel.rowData = res.content;\r\n              this.eccTranscodingRetailModel.enableMessageOnSizeResultLimit = false;\r\n              this.eccTranscodingRetailModel.searchRecordLenght = res.content.length;\r\n              if ( res.totalElements > res.content.length) {\r\n                this.eccTranscodingRetailModel.enableMessageOnSizeResultLimit = true;\r\n                this.eccTranscodingRetailModel.searchRecordLenght = res.totalElements;\r\n              }\r\n            }\r\n          }),\r\n\r\n          tap ( res => {\r\n            this.showTable = true;\r\n            if (!!targetEl) {\r\n              this.scrollToResult(targetEl);\r\n            }\r\n            this.hideSpinner();\r\n          }),\r\n\r\n          catchError((error) => {\r\n            console.log ('Error - submit', error);\r\n            this.showTable = false;\r\n            this.setError(error);\r\n            this.hideSpinner();\r\n            return of(null);\r\n          })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  protected scrollToResult(targetEl: HTMLElement) {\r\n    setTimeout(function() {\r\n      console.log('Scrolling to table');\r\n      targetEl.scrollIntoView({behavior: 'smooth'});\r\n    }, 500);\r\n  }\r\n\r\n  protected buildRsqlSearchString() {\r\n\r\n    const rSQLArray: string [] = [];\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.nsc.value, 'nsc'));\r\n    rSQLArray.push(this.rSQLUtils.manageSelect( this.countryCode.value, 'countryCode'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.bic.value, 'bic'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.descrizione.value, 'descrizione'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataInizioValiditaDa.value), this.formatterUtils.dateToString(this.dataInizioValiditaA.value), 'validFrom'));\r\n    rSQLArray.push(this.rSQLUtils.managerRange( this.formatterUtils.dateToString(this.dataFineValiditaDa.value), this.formatterUtils.dateToString(this.dataFineValiditaA.value), 'validTo'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteInserimento.value, 'utenteRichiesta'));\r\n    rSQLArray.push(this.rSQLUtils.manageWildcard( this.utenteApprovatore.value, 'utenteValidazione'));\r\n\r\n    const searchString = this.rSQLUtils.getSearchString(rSQLArray);\r\n    console.log('RSQL searchString:' + searchString);\r\n    return searchString;\r\n  }\r\n\r\n  goToInsertEccTranscodingRetail(){\r\n    this.setSession(this.routingService.ECC_TRANS_RET_INSERT, {backUrl: this.routingService.ECC_TRANS_RET_SEARCH});\r\n    this.router.navigate(['/anagrafiche/ecctranscodingretail/inserimento'], {});\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}